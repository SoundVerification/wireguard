theory BP_IBS_1__BPIBS_1_ORACLE_auth_4004 begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, bilinear-pairing
functions: GetIBMasterPublicKey/1, IBPriv/2, IBPub/2, KDF/1, fst/1,
           idsign/2, idverify/3, pair/2, snd/1, true/0
equations:
    fst(<x.1, x.2>) = x.1,
    idverify(idsign(m, IBPriv(A, IBMasterPrivateKey)), m,
             IBPub(A, GetIBMasterPublicKey(IBMasterPrivateKey)))
  = true,
    snd(<x.1, x.2>) = x.2

rule (modulo E) Reveal_IB_SIGN_privkey:
   [ !IB_Identity( ~id, A, Auth_pk, Auth_sk, Sign_pk, Sign_sk ) ]
  --[ Reveal( 'ID_SIGN', A ) ]->
   [ Out( Sign_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_IB_AUTH_privkey:
   [ !IB_Identity( ~id, A, Auth_pk, Auth_sk, Sign_pk, Sign_sk ) ]
  --[ Reveal( 'ID_AUTH', A ) ]->
   [ Out( Auth_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_IB_MasterPrivateKey:
   [ !IB_MasterPrivateKey( PKG, IBMasterPrivateKey ) ]
  --[ Reveal( 'PKG', PKG ) ]->
   [ Out( IBMasterPrivateKey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_AUTH_PrivateKeyGenerator:
   [ Fr( ~IBMasterPrivateKey ) ]
  --[ Once( 'AUTH' ) ]->
   [
   !IB_MasterPrivateKey( 'AUTH', ~IBMasterPrivateKey ),
   Out( <'AUTH', pmult(~IBMasterPrivateKey, 'P')> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_SIGN_PrivateKeyGenerator:
   [ Fr( ~IBMasterPrivateKey ) ]
  --[ Once( 'SIGN' ) ]->
   [
   !IB_MasterPrivateKey( 'SIGN', ~IBMasterPrivateKey ),
   Out( <'SIGN', GetIBMasterPublicKey(~IBMasterPrivateKey)> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_identity:
   [
   !IB_MasterPrivateKey( 'AUTH', Auth_IBMasterPrivateKey ),
   !IB_MasterPrivateKey( 'SIGN', Sign_IBMasterPrivateKey ), Fr( ~id )
   ]
  --[
  CreateId( $A,
            <pmult(Auth_IBMasterPrivateKey, 'P'), 
             IBPriv($A, Auth_IBMasterPrivateKey), 
             GetIBMasterPublicKey(Sign_IBMasterPrivateKey), 
             IBPriv($A, Sign_IBMasterPrivateKey)>
  ),
  User( )
  ]->
   [
   !IB_Identity( ~id, $A, pmult(Auth_IBMasterPrivateKey, 'P'),
                 IBPriv($A, Auth_IBMasterPrivateKey),
                 GetIBMasterPublicKey(Sign_IBMasterPrivateKey),
                 IBPriv($A, Sign_IBMasterPrivateKey)
   )
   ]

  /*
  rule (modulo AC) create_IB_identity:
     [
     !IB_MasterPrivateKey( 'AUTH', Auth_IBMasterPrivateKey ),
     !IB_MasterPrivateKey( 'SIGN', Sign_IBMasterPrivateKey ), Fr( ~id )
     ]
    --[
    CreateId( $A,
              <z, IBPriv($A, Auth_IBMasterPrivateKey), 
               GetIBMasterPublicKey(Sign_IBMasterPrivateKey), 
               IBPriv($A, Sign_IBMasterPrivateKey)>
    ),
    User( )
    ]->
     [
     !IB_Identity( ~id, $A, z, IBPriv($A, Auth_IBMasterPrivateKey),
                   GetIBMasterPublicKey(Sign_IBMasterPrivateKey),
                   IBPriv($A, Sign_IBMasterPrivateKey)
     )
     ]
    variants (modulo AC)
    1. Auth_IBMasterPrivateKey
             = Auth_IBMasterPrivateKey.9
       z     = pmult(Auth_IBMasterPrivateKey.9, 'P')
    
    2. Auth_IBMasterPrivateKey
             = one
       z     = 'P'
  */

rule (modulo E) Initiator_1send:
   [
   Fr( ~a ),
   !IB_Identity( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk )
   ]
  --[ OUT_Ini_1send( <pmult(~a, 'P'), Ini> ), Secret( 'R', Ini, ~a )
  ]->
   [
   Out( <pmult(~a, 'P'), Ini> ),
   St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
             pmult(~a, 'P'), ~a
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Responder_1recv_send:
   [
   !IB_Identity( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk ),
   Fr( ~b ), In( <ini_share, Ini> )
   ]
  --[
  Neq( ini_share, 'P' ), Receive( Resp, <ini_share, Ini> ),
  IN_RESP_1recv( <ini_share, Ini> ),
  OUT_RESP_1recv( <Resp, pmult(~b, 'P'), 
                   idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
  ),
  Honest( Resp ), Secret( 'R', Resp, ~b ),
  Running( Resp, Ini,
           <'Responder', 'Initiator', KDF(em(ini_share, pmult(~b, Auth_pk)))>
  )
  ]->
   [
   Out( <Resp, pmult(~b, 'P'), 
         idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
   ),
   St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
              pmult(~b, 'P'), Ini, ini_share,
              KDF(em(ini_share, pmult(~b, Auth_pk)))
   )
   ]

  /*
  rule (modulo AC) Responder_1recv_send:
     [
     !IB_Identity( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk ),
     Fr( ~b ), In( <ini_share, Ini> )
     ]
    --[
    Neq( ini_share, 'P' ), Receive( Resp, <ini_share, Ini> ),
    IN_RESP_1recv( <ini_share, Ini> ),
    OUT_RESP_1recv( <Resp, pmult(~b, 'P'), 
                     idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
    ),
    Honest( Resp ), Secret( 'R', Resp, ~b ),
    Running( Resp, Ini, <'Responder', 'Initiator', KDF(z)> )
    ]->
     [
     Out( <Resp, pmult(~b, 'P'), 
           idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
     ),
     St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
                pmult(~b, 'P'), Ini, ini_share, KDF(z)
     )
     ]
    variants (modulo AC)
      1. ~b    = ~b.21
         Auth_pk
               = Auth_pk.23
         ini_share
               = ini_share.29
         z     = em(Auth_pk.23, ini_share.29)^~b.21
    
      2. ~b    = ~b.135
         Auth_pk
               = Auth_pk.137
         ini_share
               = pmult(x.267, x.268)
         z     = em(Auth_pk.137, x.268)^(~b.135*x.267)
    
      3. ~b    = ~b.135
         Auth_pk
               = pmult(x.267, x.268)
         ini_share
               = ini_share.143
         z     = em(ini_share.143, x.268)^(~b.135*x.267)
    
      4. ~b    = ~b.136
         Auth_pk
               = pmult(inv(~b.136), x.270)
         ini_share
               = ini_share.144
         z     = em(ini_share.144, x.270)
    
      5. ~b    = ~b.137
         Auth_pk
               = pmult(inv((~b.137*x.271)), x.272)
         ini_share
               = ini_share.145
         z     = em(ini_share.145, x.272)^inv(x.271)
    
      6. ~b    = ~b.137
         Auth_pk
               = pmult((x.271*inv(~b.137)), x.272)
         ini_share
               = ini_share.145
         z     = em(ini_share.145, x.272)^x.271
    
      7. ~b    = ~b.138
         Auth_pk
               = pmult((x.272*inv((~b.138*x.273))), x.274)
         ini_share
               = ini_share.146
         z     = em(ini_share.146, x.274)^(x.272*inv(x.273))
    
      8. ~b    = ~b.141
         Auth_pk
               = pmult(x.273, x.274)
         ini_share
               = pmult(inv(x.273), x.280)
         z     = em(x.274, x.280)^~b.141
    
      9. ~b    = ~b.141
         Auth_pk
               = pmult(inv(x.273), x.274)
         ini_share
               = pmult(x.273, x.280)
         z     = em(x.274, x.280)^~b.141
    
     10. ~b    = ~b.142
         Auth_pk
               = Auth_pk.144
         ini_share
               = pmult(inv(~b.142), x.282)
         z     = em(Auth_pk.144, x.282)
    
     11. ~b    = ~b.142
         Auth_pk
               = pmult(x.274, x.275)
         ini_share
               = pmult(x.281, x.282)
         z     = em(x.275, x.282)^(~b.142*x.274*x.281)
    
     12. ~b    = ~b.142
         Auth_pk
               = pmult(x.274, x.275)
         ini_share
               = pmult(inv((x.274*x.281)), x.282)
         z     = em(x.275, x.282)^(~b.142*inv(x.281))
    
     13. ~b    = ~b.142
         Auth_pk
               = pmult(x.274, x.275)
         ini_share
               = pmult((x.281*inv(x.274)), x.282)
         z     = em(x.275, x.282)^(~b.142*x.281)
    
     14. ~b    = ~b.142
         Auth_pk
               = pmult(inv(x.274), x.275)
         ini_share
               = pmult(inv(x.281), x.282)
         z     = em(x.275, x.282)^(~b.142*inv((x.274*x.281)))
    
     15. ~b    = ~b.142
         Auth_pk
               = pmult(inv(x.274), x.275)
         ini_share
               = pmult((x.274*x.281), x.282)
         z     = em(x.275, x.282)^(~b.142*x.281)
    
     16. ~b    = ~b.142
         Auth_pk
               = pmult(inv((x.274*x.275)), x.276)
         ini_share
               = pmult(x.274, x.282)
         z     = em(x.276, x.282)^(~b.142*inv(x.275))
    
     17. ~b    = ~b.142
         Auth_pk
               = pmult((x.274*x.275), x.276)
         ini_share
               = pmult(inv(x.274), x.282)
         z     = em(x.276, x.282)^(~b.142*x.275)
    
     18. ~b    = ~b.142
         Auth_pk
               = pmult((x.274*inv(x.275)), x.276)
         ini_share
               = pmult(x.275, x.282)
         z     = em(x.276, x.282)^(~b.142*x.274)
    
     19. ~b    = ~b.142
         Auth_pk
               = pmult((x.274*inv(x.275)), x.276)
         ini_share
               = pmult((x.275*inv(x.274)), x.282)
         z     = em(x.276, x.282)^~b.142
    
     20. ~b    = ~b.143
         Auth_pk
               = Auth_pk.145
         ini_share
               = pmult(inv((~b.143*x.283)), x.284)
         z     = em(Auth_pk.145, x.284)^inv(x.283)
    
     21. ~b    = ~b.143
         Auth_pk
               = Auth_pk.145
         ini_share
               = pmult((x.283*inv(~b.143)), x.284)
         z     = em(Auth_pk.145, x.284)^x.283
    
     22. ~b    = ~b.143
         Auth_pk
               = pmult(x.275, x.276)
         ini_share
               = pmult((x.282*inv((x.275*x.283))), x.284)
         z     = em(x.276, x.284)^(~b.143*x.282*inv(x.283))
    
     23. ~b    = ~b.143
         Auth_pk
               = pmult(x.277, x.278)
         ini_share
               = pmult(inv(~b.143), x.284)
         z     = em(x.278, x.284)^x.277
    
     24. ~b    = ~b.143
         Auth_pk
               = pmult(x.277, x.278)
         ini_share
               = pmult(inv((~b.143*x.277)), x.284)
         z     = em(x.278, x.284)
    
     25. ~b    = ~b.143
         Auth_pk
               = pmult(inv(~b.143), x.277)
         ini_share
               = pmult(x.283, x.284)
         z     = em(x.277, x.284)^x.283
    
     26. ~b    = ~b.143
         Auth_pk
               = pmult(inv(x.275), x.276)
         ini_share
               = pmult((x.282*inv(x.283)), x.284)
         z     = em(x.276, x.284)^(~b.143*x.282*inv((x.275*x.283)))
    
     27. ~b    = ~b.143
         Auth_pk
               = pmult(inv(x.277), x.278)
         ini_share
               = pmult((x.277*inv(~b.143)), x.284)
         z     = em(x.278, x.284)
    
     28. ~b    = ~b.143
         Auth_pk
               = pmult(inv((~b.143*x.277)), x.278)
         ini_share
               = pmult(x.277, x.284)
         z     = em(x.278, x.284)
    
     29. ~b    = ~b.143
         Auth_pk
               = pmult(inv((x.275*x.276)), x.277)
         ini_share
               = pmult((x.275*x.283), x.284)
         z     = em(x.277, x.284)^(~b.143*x.283*inv(x.276))
    
     30. ~b    = ~b.143
         Auth_pk
               = pmult(inv((x.275*x.276)), x.277)
         ini_share
               = pmult((x.275*inv(x.283)), x.284)
         z     = em(x.277, x.284)^(~b.143*inv((x.276*x.283)))
    
     31. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*x.276), x.277)
         ini_share
               = pmult(inv((x.275*x.283)), x.284)
         z     = em(x.277, x.284)^(~b.143*x.276*inv(x.283))
    
     32. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*x.276), x.277)
         ini_share
               = pmult((x.283*inv(x.275)), x.284)
         z     = em(x.277, x.284)^(~b.143*x.276*x.283)
    
     33. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*x.276*inv(x.277)), x.278)
         ini_share
               = pmult((x.277*inv(x.275)), x.284)
         z     = em(x.278, x.284)^(~b.143*x.276)
    
     34. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv(x.276)), x.277)
         ini_share
               = pmult(inv(x.283), x.284)
         z     = em(x.277, x.284)^(~b.143*x.275*inv((x.276*x.283)))
    
     35. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv(x.276)), x.277)
         ini_share
               = pmult(inv((x.275*x.283)), x.284)
         z     = em(x.277, x.284)^(~b.143*inv((x.276*x.283)))
    
     36. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv(x.276)), x.277)
         ini_share
               = pmult((x.276*x.283), x.284)
         z     = em(x.277, x.284)^(~b.143*x.275*x.283)
    
     37. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv(x.276)), x.277)
         ini_share
               = pmult((x.276*x.283*inv(x.275)), x.284)
         z     = em(x.277, x.284)^(~b.143*x.283)
    
     38. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv(x.276)), x.277)
         ini_share
               = pmult((x.276*inv((x.275*x.283))), x.284)
         z     = em(x.277, x.284)^(~b.143*inv(x.283))
    
     39. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv((x.276*x.277))), x.278)
         ini_share
               = pmult(x.276, x.284)
         z     = em(x.278, x.284)^(~b.143*x.275*inv(x.277))
    
     40. ~b    = ~b.143
         Auth_pk
               = pmult((x.275*inv((x.276*x.277))), x.278)
         ini_share
               = pmult((x.276*inv(x.275)), x.284)
         z     = em(x.278, x.284)^(~b.143*inv(x.277))
    
     41. ~b    = ~b.143
         Auth_pk
               = pmult((x.277*inv(~b.143)), x.278)
         ini_share
               = pmult(inv(x.277), x.284)
         z     = em(x.278, x.284)
    
     42. ~b    = ~b.144
         Auth_pk
               = Auth_pk.146
         ini_share
               = pmult((x.284*inv((~b.144*x.285))), x.286)
         z     = em(Auth_pk.146, x.286)^(x.284*inv(x.285))
    
     43. ~b    = ~b.144
         Auth_pk
               = pmult(x.278, x.279)
         ini_share
               = pmult(inv((~b.144*x.278*x.285)), x.286)
         z     = em(x.279, x.286)^inv(x.285)
    
     44. ~b    = ~b.144
         Auth_pk
               = pmult(x.278, x.279)
         ini_share
               = pmult(inv((~b.144*x.285)), x.286)
         z     = em(x.279, x.286)^(x.278*inv(x.285))
    
     45. ~b    = ~b.144
         Auth_pk
               = pmult(x.278, x.279)
         ini_share
               = pmult((x.285*inv(~b.144)), x.286)
         z     = em(x.279, x.286)^(x.278*x.285)
    
     46. ~b    = ~b.144
         Auth_pk
               = pmult(x.278, x.279)
         ini_share
               = pmult((x.285*inv((~b.144*x.278))), x.286)
         z     = em(x.279, x.286)^x.285
    
     47. ~b    = ~b.144
         Auth_pk
               = pmult(inv(x.278), x.279)
         ini_share
               = pmult(inv((~b.144*x.285)), x.286)
         z     = em(x.279, x.286)^inv((x.278*x.285))
    
     48. ~b    = ~b.144
         Auth_pk
               = pmult(inv(x.278), x.279)
         ini_share
               = pmult((x.278*x.285*inv(~b.144)), x.286)
         z     = em(x.279, x.286)^x.285
    
     49. ~b    = ~b.144
         Auth_pk
               = pmult(inv(x.278), x.279)
         ini_share
               = pmult((x.278*inv((~b.144*x.285))), x.286)
         z     = em(x.279, x.286)^inv(x.285)
    
     50. ~b    = ~b.144
         Auth_pk
               = pmult(inv((~b.144*x.278)), x.279)
         ini_share
               = pmult(x.285, x.286)
         z     = em(x.279, x.286)^(x.285*inv(x.278))
    
     51. ~b    = ~b.144
         Auth_pk
               = pmult(inv((~b.144*x.278)), x.279)
         ini_share
               = pmult(inv(x.285), x.286)
         z     = em(x.279, x.286)^inv((x.278*x.285))
    
     52. ~b    = ~b.144
         Auth_pk
               = pmult(inv((~b.144*x.278)), x.279)
         ini_share
               = pmult((x.278*x.285), x.286)
         z     = em(x.279, x.286)^x.285
    
     53. ~b    = ~b.144
         Auth_pk
               = pmult(inv((~b.144*x.278*x.279)), x.280)
         ini_share
               = pmult(x.278, x.286)
         z     = em(x.280, x.286)^inv(x.279)
    
     54. ~b    = ~b.144
         Auth_pk
               = pmult(inv((x.276*x.277)), x.278)
         ini_share
               = pmult((x.276*x.284*inv(x.285)), x.286)
         z     = em(x.278, x.286)^(~b.144*x.284*inv((x.277*x.285)))
    
     55. ~b    = ~b.144
         Auth_pk
               = pmult(inv((x.278*x.279)), x.280)
         ini_share
               = pmult((x.278*inv(~b.144)), x.286)
         z     = em(x.280, x.286)^inv(x.279)
    
     56. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*x.277), x.278)
         ini_share
               = pmult((x.284*inv((x.276*x.285))), x.286)
         z     = em(x.278, x.286)^(~b.144*x.277*x.284*inv(x.285))
    
     57. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*x.277*inv(x.278)), x.279)
         ini_share
               = pmult(inv((x.276*x.285)), x.286)
         z     = em(x.279, x.286)^(~b.144*x.277*inv((x.278*x.285)))
    
     58. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*x.277*inv(x.278)), x.279)
         ini_share
               = pmult((x.278*x.285*inv(x.276)), x.286)
         z     = em(x.279, x.286)^(~b.144*x.277*x.285)
    
     59. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*x.277*inv(x.278)), x.279)
         ini_share
               = pmult((x.278*inv((x.276*x.285))), x.286)
         z     = em(x.279, x.286)^(~b.144*x.277*inv(x.285))
    
     60. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*x.277*inv((x.278*x.279))), x.280)
         ini_share
               = pmult((x.278*inv(x.276)), x.286)
         z     = em(x.280, x.286)^(~b.144*x.277*inv(x.279))
    
     61. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv(x.277)), x.278)
         ini_share
               = pmult((x.277*x.284*inv((x.276*x.285))), x.286)
         z     = em(x.278, x.286)^(~b.144*x.284*inv(x.285))
    
     62. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv(x.277)), x.278)
         ini_share
               = pmult((x.284*inv(x.285)), x.286)
         z     = em(x.278, x.286)^(~b.144*x.276*x.284*inv((x.277*x.285)))
    
     63. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv(x.277)), x.278)
         ini_share
               = pmult((x.284*inv((x.276*x.285))), x.286)
         z     = em(x.278, x.286)^(~b.144*x.284*inv((x.277*x.285)))
    
     64. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv((x.277*x.278))), x.279)
         ini_share
               = pmult((x.277*x.285), x.286)
         z     = em(x.279, x.286)^(~b.144*x.276*x.285*inv(x.278))
    
     65. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv((x.277*x.278))), x.279)
         ini_share
               = pmult((x.277*x.285*inv(x.276)), x.286)
         z     = em(x.279, x.286)^(~b.144*x.285*inv(x.278))
    
     66. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv((x.277*x.278))), x.279)
         ini_share
               = pmult((x.277*inv(x.285)), x.286)
         z     = em(x.279, x.286)^(~b.144*x.276*inv((x.278*x.285)))
    
     67. ~b    = ~b.144
         Auth_pk
               = pmult((x.276*inv((x.277*x.278))), x.279)
         ini_share
               = pmult((x.277*inv((x.276*x.285))), x.286)
         z     = em(x.279, x.286)^(~b.144*inv((x.278*x.285)))
    
     68. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*x.279), x.280)
         ini_share
               = pmult(inv((~b.144*x.278)), x.286)
         z     = em(x.280, x.286)^x.279
    
     69. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*x.279*inv(~b.144)), x.280)
         ini_share
               = pmult(inv(x.278), x.286)
         z     = em(x.280, x.286)^x.279
    
     70. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv(~b.144)), x.279)
         ini_share
               = pmult(x.285, x.286)
         z     = em(x.279, x.286)^(x.278*x.285)
    
     71. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv(~b.144)), x.279)
         ini_share
               = pmult(inv((x.278*x.285)), x.286)
         z     = em(x.279, x.286)^inv(x.285)
    
     72. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv(~b.144)), x.279)
         ini_share
               = pmult((x.285*inv(x.278)), x.286)
         z     = em(x.279, x.286)^x.285
    
     73. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv(x.279)), x.280)
         ini_share
               = pmult((x.279*inv(~b.144)), x.286)
         z     = em(x.280, x.286)^x.278
    
     74. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv(x.279)), x.280)
         ini_share
               = pmult((x.279*inv((~b.144*x.278))), x.286)
         z     = em(x.280, x.286)
    
     75. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv((~b.144*x.279))), x.280)
         ini_share
               = pmult(x.279, x.286)
         z     = em(x.280, x.286)^x.278
    
     76. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv((~b.144*x.279))), x.280)
         ini_share
               = pmult(inv(x.278), x.286)
         z     = em(x.280, x.286)^inv(x.279)
    
     77. ~b    = ~b.144
         Auth_pk
               = pmult((x.278*inv((~b.144*x.279))), x.280)
         ini_share
               = pmult((x.279*inv(x.278)), x.286)
         z     = em(x.280, x.286)
    
     78. ~b    = ~b.145
         Auth_pk
               = pmult(x.279, x.280)
         ini_share
               = pmult((x.286*inv((~b.145*x.279*x.287))), x.288)
         z     = em(x.280, x.288)^(x.286*inv(x.287))
    
     79. ~b    = ~b.145
         Auth_pk
               = pmult(x.279, x.280)
         ini_share
               = pmult((x.286*inv((~b.145*x.287))), x.288)
         z     = em(x.280, x.288)^(x.279*x.286*inv(x.287))
    
     80. ~b    = ~b.145
         Auth_pk
               = pmult(inv(x.279), x.280)
         ini_share
               = pmult((x.279*x.286*inv((~b.145*x.287))), x.288)
         z     = em(x.280, x.288)^(x.286*inv(x.287))
    
     81. ~b    = ~b.145
         Auth_pk
               = pmult(inv(x.279), x.280)
         ini_share
               = pmult((x.286*inv((~b.145*x.287))), x.288)
         z     = em(x.280, x.288)^(x.286*inv((x.279*x.287)))
    
     82. ~b    = ~b.145
         Auth_pk
               = pmult(inv((~b.145*x.279)), x.280)
         ini_share
               = pmult((x.286*inv(x.287)), x.288)
         z     = em(x.280, x.288)^(x.286*inv((x.279*x.287)))
    
     83. ~b    = ~b.145
         Auth_pk
               = pmult(inv((~b.145*x.279*x.280)), x.281)
         ini_share
               = pmult((x.279*x.287), x.288)
         z     = em(x.281, x.288)^(x.287*inv(x.280))
    
     84. ~b    = ~b.145
         Auth_pk
               = pmult(inv((~b.145*x.279*x.280)), x.281)
         ini_share
               = pmult((x.279*inv(x.287)), x.288)
         z     = em(x.281, x.288)^inv((x.280*x.287))
    
     85. ~b    = ~b.145
         Auth_pk
               = pmult(inv((x.279*x.280)), x.281)
         ini_share
               = pmult((x.279*x.287*inv(~b.145)), x.288)
         z     = em(x.281, x.288)^(x.287*inv(x.280))
    
     86. ~b    = ~b.145
         Auth_pk
               = pmult(inv((x.279*x.280)), x.281)
         ini_share
               = pmult((x.279*inv((~b.145*x.287))), x.288)
         z     = em(x.281, x.288)^inv((x.280*x.287))
    
     87. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*x.278*inv(x.279)), x.280)
         ini_share
               = pmult((x.279*x.286*inv((x.277*x.287))), x.288)
         z     = em(x.280, x.288)^(~b.145*x.278*x.286*inv(x.287))
    
     88. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*x.278*inv(x.279)), x.280)
         ini_share
               = pmult((x.286*inv((x.277*x.287))), x.288)
         z     = em(x.280, x.288)^(~b.145*x.278*x.286*inv((x.279*x.287)))
    
     89. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*x.278*inv((x.279*x.280))), x.281)
         ini_share
               = pmult((x.279*x.287*inv(x.277)), x.288)
         z     = em(x.281, x.288)^(~b.145*x.278*x.287*inv(x.280))
    
     90. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*x.278*inv((x.279*x.280))), x.281)
         ini_share
               = pmult((x.279*inv((x.277*x.287))), x.288)
         z     = em(x.281, x.288)^(~b.145*x.278*inv((x.280*x.287)))
    
     91. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*inv((x.278*x.279))), x.280)
         ini_share
               = pmult((x.278*x.286*inv(x.287)), x.288)
         z     = em(x.280, x.288)^(~b.145*x.277*x.286*inv((x.279*x.287)))
    
     92. ~b    = ~b.145
         Auth_pk
               = pmult((x.277*inv((x.278*x.279))), x.280)
         ini_share
               = pmult((x.278*x.286*inv((x.277*x.287))), x.288)
         z     = em(x.280, x.288)^(~b.145*x.286*inv((x.279*x.287)))
    
     93. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280), x.281)
         ini_share
               = pmult(inv((~b.145*x.279*x.287)), x.288)
         z     = em(x.281, x.288)^(x.280*inv(x.287))
    
     94. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280), x.281)
         ini_share
               = pmult((x.287*inv((~b.145*x.279))), x.288)
         z     = em(x.281, x.288)^(x.280*x.287)
    
     95. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280*inv(~b.145)), x.281)
         ini_share
               = pmult(inv((x.279*x.287)), x.288)
         z     = em(x.281, x.288)^(x.280*inv(x.287))
    
     96. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280*inv(~b.145)), x.281)
         ini_share
               = pmult((x.287*inv(x.279)), x.288)
         z     = em(x.281, x.288)^(x.280*x.287)
    
     97. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280*inv(x.281)), x.282)
         ini_share
               = pmult((x.281*inv((~b.145*x.279))), x.288)
         z     = em(x.282, x.288)^x.280
    
     98. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280*inv((~b.145*x.281))), x.282)
         ini_share
               = pmult(inv(x.279), x.288)
         z     = em(x.282, x.288)^(x.280*inv(x.281))
    
     99. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*x.280*inv((~b.145*x.281))), x.282)
         ini_share
               = pmult((x.281*inv(x.279)), x.288)
         z     = em(x.282, x.288)^x.280
    
    100. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(~b.145)), x.280)
         ini_share
               = pmult((x.286*inv((x.279*x.287))), x.288)
         z     = em(x.280, x.288)^(x.286*inv(x.287))
    
    101. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult(inv((~b.145*x.279*x.287)), x.288)
         z     = em(x.281, x.288)^inv((x.280*x.287))
    
    102. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult(inv((~b.145*x.287)), x.288)
         z     = em(x.281, x.288)^(x.279*inv((x.280*x.287)))
    
    103. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult((x.280*x.287*inv(~b.145)), x.288)
         z     = em(x.281, x.288)^(x.279*x.287)
    
    104. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult((x.280*x.287*inv((~b.145*x.279))), x.288)
         z     = em(x.281, x.288)^x.287
    
    105. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult((x.280*inv((~b.145*x.279*x.287))), x.288)
         z     = em(x.281, x.288)^inv(x.287)
    
    106. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv(x.280)), x.281)
         ini_share
               = pmult((x.280*inv((~b.145*x.287))), x.288)
         z     = em(x.281, x.288)^(x.279*inv(x.287))
    
    107. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult(x.287, x.288)
         z     = em(x.281, x.288)^(x.279*x.287*inv(x.280))
    
    108. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult(inv(x.287), x.288)
         z     = em(x.281, x.288)^(x.279*inv((x.280*x.287)))
    
    109. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult(inv((x.279*x.287)), x.288)
         z     = em(x.281, x.288)^inv((x.280*x.287))
    
    110. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult((x.280*x.287), x.288)
         z     = em(x.281, x.288)^(x.279*x.287)
    
    111. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult((x.280*x.287*inv(x.279)), x.288)
         z     = em(x.281, x.288)^x.287
    
    112. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult((x.280*inv((x.279*x.287))), x.288)
         z     = em(x.281, x.288)^inv(x.287)
    
    113. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280))), x.281)
         ini_share
               = pmult((x.287*inv(x.279)), x.288)
         z     = em(x.281, x.288)^(x.287*inv(x.280))
    
    114. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280*x.281))), x.282)
         ini_share
               = pmult(x.280, x.288)
         z     = em(x.282, x.288)^(x.279*inv(x.281))
    
    115. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((~b.145*x.280*x.281))), x.282)
         ini_share
               = pmult((x.280*inv(x.279)), x.288)
         z     = em(x.282, x.288)^inv(x.281)
    
    116. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((x.280*x.281))), x.282)
         ini_share
               = pmult((x.280*inv(~b.145)), x.288)
         z     = em(x.282, x.288)^(x.279*inv(x.281))
    
    117. ~b    = ~b.145
         Auth_pk
               = pmult((x.279*inv((x.280*x.281))), x.282)
         ini_share
               = pmult((x.280*inv((~b.145*x.279))), x.288)
         z     = em(x.282, x.288)^inv(x.281)
    
    118. ~b    = ~b.146
         Auth_pk
               = pmult(inv((~b.146*x.280*x.281)), x.282)
         ini_share
               = pmult((x.280*x.288*inv(x.289)), x.290)
         z     = em(x.282, x.290)^(x.288*inv((x.281*x.289)))
    
    119. ~b    = ~b.146
         Auth_pk
               = pmult(inv((x.280*x.281)), x.282)
         ini_share
               = pmult((x.280*x.288*inv((~b.146*x.289))), x.290)
         z     = em(x.282, x.290)^(x.288*inv((x.281*x.289)))
    
    120. ~b    = ~b.146
         Auth_pk
               = pmult((x.278*x.279*inv((x.280*x.281))), x.282)
         ini_share
               = pmult((x.280*x.288*inv((x.278*x.289))), x.290)
         z     = em(x.282, x.290)^(~b.146*x.279*x.288*inv((x.281*x.289)))
    
    121. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281), x.282)
         ini_share
               = pmult((x.288*inv((~b.146*x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.281*x.288*inv(x.289))
    
    122. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv(~b.146)), x.282)
         ini_share
               = pmult((x.288*inv((x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.281*x.288*inv(x.289))
    
    123. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv(x.282)), x.283)
         ini_share
               = pmult(inv((~b.146*x.280*x.289)), x.290)
         z     = em(x.283, x.290)^(x.281*inv((x.282*x.289)))
    
    124. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv(x.282)), x.283)
         ini_share
               = pmult((x.282*x.289*inv((~b.146*x.280))), x.290)
         z     = em(x.283, x.290)^(x.281*x.289)
    
    125. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv(x.282)), x.283)
         ini_share
               = pmult((x.282*inv((~b.146*x.280*x.289))), x.290)
         z     = em(x.283, x.290)^(x.281*inv(x.289))
    
    126. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((~b.146*x.282))), x.283)
         ini_share
               = pmult(inv((x.280*x.289)), x.290)
         z     = em(x.283, x.290)^(x.281*inv((x.282*x.289)))
    
    127. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((~b.146*x.282))), x.283)
         ini_share
               = pmult((x.282*x.289*inv(x.280)), x.290)
         z     = em(x.283, x.290)^(x.281*x.289)
    
    128. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((~b.146*x.282))), x.283)
         ini_share
               = pmult((x.282*inv((x.280*x.289))), x.290)
         z     = em(x.283, x.290)^(x.281*inv(x.289))
    
    129. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((~b.146*x.282))), x.283)
         ini_share
               = pmult((x.289*inv(x.280)), x.290)
         z     = em(x.283, x.290)^(x.281*x.289*inv(x.282))
    
    130. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((~b.146*x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*inv(x.280)), x.290)
         z     = em(x.284, x.290)^(x.281*inv(x.283))
    
    131. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*x.281*inv((x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*inv((~b.146*x.280))), x.290)
         z     = em(x.284, x.290)^(x.281*inv(x.283))
    
    132. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv(x.281)), x.282)
         ini_share
               = pmult((x.281*x.288*inv((~b.146*x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.288*inv(x.289))
    
    133. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv(x.281)), x.282)
         ini_share
               = pmult((x.281*x.288*inv((~b.146*x.289))), x.290)
         z     = em(x.282, x.290)^(x.280*x.288*inv(x.289))
    
    134. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv(x.281)), x.282)
         ini_share
               = pmult((x.288*inv((~b.146*x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.288*inv((x.281*x.289)))
    
    135. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv(x.281)), x.282)
         ini_share
               = pmult((x.288*inv((~b.146*x.289))), x.290)
         z     = em(x.282, x.290)^(x.280*x.288*inv((x.281*x.289)))
    
    136. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281))), x.282)
         ini_share
               = pmult((x.281*x.288*inv((x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.288*inv(x.289))
    
    137. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281))), x.282)
         ini_share
               = pmult((x.288*inv(x.289)), x.290)
         z     = em(x.282, x.290)^(x.280*x.288*inv((x.281*x.289)))
    
    138. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281))), x.282)
         ini_share
               = pmult((x.288*inv((x.280*x.289))), x.290)
         z     = em(x.282, x.290)^(x.288*inv((x.281*x.289)))
    
    139. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*x.289), x.290)
         z     = em(x.283, x.290)^(x.280*x.289*inv(x.282))
    
    140. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*x.289*inv(x.280)), x.290)
         z     = em(x.283, x.290)^(x.289*inv(x.282))
    
    141. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*inv(x.289)), x.290)
         z     = em(x.283, x.290)^(x.280*inv((x.282*x.289)))
    
    142. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((~b.146*x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*inv((x.280*x.289))), x.290)
         z     = em(x.283, x.290)^inv((x.282*x.289))
    
    143. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*x.289*inv(~b.146)), x.290)
         z     = em(x.283, x.290)^(x.280*x.289*inv(x.282))
    
    144. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*x.289*inv((~b.146*x.280))), x.290)
         z     = em(x.283, x.290)^(x.289*inv(x.282))
    
    145. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*inv((~b.146*x.280*x.289))), x.290)
         z     = em(x.283, x.290)^inv((x.282*x.289))
    
    146. ~b    = ~b.146
         Auth_pk
               = pmult((x.280*inv((x.281*x.282))), x.283)
         ini_share
               = pmult((x.281*inv((~b.146*x.289))), x.290)
         z     = em(x.283, x.290)^(x.280*inv((x.282*x.289)))
    
    147. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv(x.283)), x.284)
         ini_share
               = pmult((x.283*x.290*inv((~b.147*x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.282*x.290*inv(x.291))
    
    148. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv(x.283)), x.284)
         ini_share
               = pmult((x.290*inv((~b.147*x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.282*x.290*inv((x.283*x.291)))
    
    149. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((~b.147*x.283))), x.284)
         ini_share
               = pmult((x.283*x.290*inv((x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.282*x.290*inv(x.291))
    
    150. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((~b.147*x.283))), x.284)
         ini_share
               = pmult((x.290*inv((x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.282*x.290*inv((x.283*x.291)))
    
    151. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((~b.147*x.283*x.284))), x.285)
         ini_share
               = pmult((x.283*x.291*inv(x.281)), x.292)
         z     = em(x.285, x.292)^(x.282*x.291*inv(x.284))
    
    152. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((~b.147*x.283*x.284))), x.285)
         ini_share
               = pmult((x.283*inv((x.281*x.291))), x.292)
         z     = em(x.285, x.292)^(x.282*inv((x.284*x.291)))
    
    153. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((x.283*x.284))), x.285)
         ini_share
               = pmult((x.283*x.291*inv((~b.147*x.281))), x.292)
         z     = em(x.285, x.292)^(x.282*x.291*inv(x.284))
    
    154. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*x.282*inv((x.283*x.284))), x.285)
         ini_share
               = pmult((x.283*inv((~b.147*x.281*x.291))), x.292)
         z     = em(x.285, x.292)^(x.282*inv((x.284*x.291)))
    
    155. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*inv((~b.147*x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*x.290*inv(x.291)), x.292)
         z     = em(x.284, x.292)^(x.281*x.290*inv((x.283*x.291)))
    
    156. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*inv((~b.147*x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*x.290*inv((x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.290*inv((x.283*x.291)))
    
    157. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*inv((x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*x.290*inv((~b.147*x.281*x.291))), x.292)
         z     = em(x.284, x.292)^(x.290*inv((x.283*x.291)))
    
    158. ~b    = ~b.147
         Auth_pk
               = pmult((x.281*inv((x.282*x.283))), x.284)
         ini_share
               = pmult((x.282*x.290*inv((~b.147*x.291))), x.292)
         z     = em(x.284, x.292)^(x.281*x.290*inv((x.283*x.291)))
    
    159. ~b    = ~b.148
         Auth_pk
               = pmult((x.282*x.283*inv((~b.148*x.284*x.285))), x.286)
         ini_share
               = pmult((x.284*x.292*inv((x.282*x.293))), x.294)
         z     = em(x.286, x.294)^(x.283*x.292*inv((x.285*x.293)))
    
    160. ~b    = ~b.148
         Auth_pk
               = pmult((x.282*x.283*inv((x.284*x.285))), x.286)
         ini_share
               = pmult((x.284*x.292*inv((~b.148*x.282*x.293))), x.294)
         z     = em(x.286, x.294)^(x.283*x.292*inv((x.285*x.293)))
  */

rule (modulo E) Initiator_2recv_send:
   [
   St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk, ini_share,
             ~a
   ),
   In( <Resp, resp_share, signature> )
   ]
  --[
  Neq( resp_share, 'P' ),
  Eq( true,
      idverify(signature, <ini_share, resp_share>, IBPub(Resp, Sign_pk))
  ),
  IN_INI_1recv( <Resp, resp_share, signature> ),
  OUT_INI_2send( idsign(resp_share, Sign_sk) ),
  Secret( 'KEY', Ini, KDF(em(resp_share, pmult(~a, Auth_pk))) ),
  Honest( Ini ),
  Running( Ini, Resp,
           <'Initiator', 'Responder', KDF(em(resp_share, pmult(~a, Auth_pk)))>
  ),
  Commit( Ini, Resp,
          <'Initiator', 'Responder', KDF(em(resp_share, pmult(~a, Auth_pk)))>
  )
  ]->
   [ Out( idsign(resp_share, Sign_sk) ) ]

  /*
  rule (modulo AC) Initiator_2recv_send:
     [
     St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk, ini_share,
               ~a
     ),
     In( <Resp, resp_share, signature> )
     ]
    --[
    Neq( resp_share, 'P' ), Eq( true, z ),
    IN_INI_1recv( <Resp, resp_share, signature> ),
    OUT_INI_2send( idsign(resp_share, Sign_sk) ),
    Secret( 'KEY', Ini, KDF(z.1) ), Honest( Ini ),
    Running( Ini, Resp, <'Initiator', 'Responder', KDF(z.1)> ),
    Commit( Ini, Resp, <'Initiator', 'Responder', KDF(z.1)> )
    ]->
     [ Out( idsign(resp_share, Sign_sk) ) ]
    variants (modulo AC)
      1. ~a    = ~a.27
         Auth_pk
               = Auth_pk.29
         Resp  = Resp.32
         Sign_pk
               = Sign_pk.33
         ini_share
               = ini_share.35
         resp_share
               = resp_share.36
         signature
               = signature.37
         z     = idverify(signature.37, <ini_share.35, resp_share.36>,
                          IBPub(Resp.32, Sign_pk.33))
         z.1   = em(Auth_pk.29, resp_share.36)^~a.27
    
      2. ~a    = ~a.69
         Auth_pk
               = Auth_pk.71
         Resp  = Resp.74
         Sign_pk
               = Sign_pk.75
         ini_share
               = ini_share.77
         resp_share
               = pmult(x.135, x.136)
         signature
               = signature.79
         z     = idverify(signature.79, <ini_share.77, pmult(x.135, x.136)>,
                          IBPub(Resp.74, Sign_pk.75))
         z.1   = em(Auth_pk.71, x.136)^(~a.69*x.135)
    
      3. ~a    = ~a.69
         Auth_pk
               = Auth_pk.71
         Resp  = Resp.74
         Sign_pk
               = GetIBMasterPublicKey(x.136)
         ini_share
               = ini_share.77
         resp_share
               = resp_share.78
         signature
               = idsign(<ini_share.77, resp_share.78>, IBPriv(Resp.74, x.136))
         z     = true
         z.1   = em(Auth_pk.71, resp_share.78)^~a.69
    
      4. ~a    = ~a.69
         Auth_pk
               = pmult(x.135, x.136)
         Resp  = Resp.74
         Sign_pk
               = Sign_pk.75
         ini_share
               = ini_share.77
         resp_share
               = resp_share.78
         signature
               = signature.79
         z     = idverify(signature.79, <ini_share.77, resp_share.78>,
                          IBPub(Resp.74, Sign_pk.75))
         z.1   = em(resp_share.78, x.136)^(~a.69*x.135)
    
      5. ~a    = ~a.70
         Auth_pk
               = pmult(inv(~a.70), x.138)
         Resp  = Resp.75
         Sign_pk
               = Sign_pk.76
         ini_share
               = ini_share.78
         resp_share
               = resp_share.79
         signature
               = signature.80
         z     = idverify(signature.80, <ini_share.78, resp_share.79>,
                          IBPub(Resp.75, Sign_pk.76))
         z.1   = em(resp_share.79, x.138)
    
      6. ~a    = ~a.71
         Auth_pk
               = pmult(inv((~a.71*x.139)), x.140)
         Resp  = Resp.76
         Sign_pk
               = Sign_pk.77
         ini_share
               = ini_share.79
         resp_share
               = resp_share.80
         signature
               = signature.81
         z     = idverify(signature.81, <ini_share.79, resp_share.80>,
                          IBPub(Resp.76, Sign_pk.77))
         z.1   = em(resp_share.80, x.140)^inv(x.139)
    
      7. ~a    = ~a.71
         Auth_pk
               = pmult((x.139*inv(~a.71)), x.140)
         Resp  = Resp.76
         Sign_pk
               = Sign_pk.77
         ini_share
               = ini_share.79
         resp_share
               = resp_share.80
         signature
               = signature.81
         z     = idverify(signature.81, <ini_share.79, resp_share.80>,
                          IBPub(Resp.76, Sign_pk.77))
         z.1   = em(resp_share.80, x.140)^x.139
    
      8. ~a    = ~a.72
         Auth_pk
               = pmult((x.140*inv((~a.72*x.141))), x.142)
         Resp  = Resp.77
         Sign_pk
               = Sign_pk.78
         ini_share
               = ini_share.80
         resp_share
               = resp_share.81
         signature
               = signature.82
         z     = idverify(signature.82, <ini_share.80, resp_share.81>,
                          IBPub(Resp.77, Sign_pk.78))
         z.1   = em(resp_share.81, x.142)^(x.140*inv(x.141))
    
      9. ~a    = ~a.73
         Auth_pk
               = Auth_pk.75
         Resp  = Resp.78
         Sign_pk
               = GetIBMasterPublicKey(x.140)
         ini_share
               = ini_share.81
         resp_share
               = pmult(x.143, x.144)
         signature
               = idsign(<ini_share.81, pmult(x.143, x.144)>,
                        IBPriv(Resp.78, x.140))
         z     = true
         z.1   = em(Auth_pk.75, x.144)^(~a.73*x.143)
    
     10. ~a    = ~a.73
         Auth_pk
               = pmult(x.139, x.140)
         Resp  = Resp.78
         Sign_pk
               = GetIBMasterPublicKey(x.144)
         ini_share
               = ini_share.81
         resp_share
               = resp_share.82
         signature
               = idsign(<ini_share.81, resp_share.82>, IBPriv(Resp.78, x.144))
         z     = true
         z.1   = em(resp_share.82, x.140)^(~a.73*x.139)
    
     11. ~a    = ~a.74
         Auth_pk
               = pmult(inv(~a.74), x.142)
         Resp  = Resp.79
         Sign_pk
               = GetIBMasterPublicKey(x.146)
         ini_share
               = ini_share.82
         resp_share
               = resp_share.83
         signature
               = idsign(<ini_share.82, resp_share.83>, IBPriv(Resp.79, x.146))
         z     = true
         z.1   = em(resp_share.83, x.142)
    
     12. ~a    = ~a.75
         Auth_pk
               = pmult(inv((~a.75*x.143)), x.144)
         Resp  = Resp.80
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.83
         resp_share
               = resp_share.84
         signature
               = idsign(<ini_share.83, resp_share.84>, IBPriv(Resp.80, x.148))
         z     = true
         z.1   = em(resp_share.84, x.144)^inv(x.143)
    
     13. ~a    = ~a.75
         Auth_pk
               = pmult((x.143*inv(~a.75)), x.144)
         Resp  = Resp.80
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.83
         resp_share
               = resp_share.84
         signature
               = idsign(<ini_share.83, resp_share.84>, IBPriv(Resp.80, x.148))
         z     = true
         z.1   = em(resp_share.84, x.144)^x.143
    
     14. ~a    = ~a.76
         Auth_pk
               = pmult(x.142, x.143)
         Resp  = Resp.81
         Sign_pk
               = Sign_pk.82
         ini_share
               = ini_share.84
         resp_share
               = pmult(inv(x.142), x.150)
         signature
               = signature.86
         z     = idverify(signature.86,
                          <ini_share.84, pmult(inv(x.142), x.150)>,
                          IBPub(Resp.81, Sign_pk.82))
         z.1   = em(x.143, x.150)^~a.76
    
     15. ~a    = ~a.76
         Auth_pk
               = pmult(x.142, x.143)
         Resp  = Resp.81
         Sign_pk
               = GetIBMasterPublicKey(x.147)
         ini_share
               = ini_share.84
         resp_share
               = pmult(inv(x.142), x.150)
         signature
               = idsign(<ini_share.84, pmult(inv(x.142), x.150)>,
                        IBPriv(Resp.81, x.147))
         z     = true
         z.1   = em(x.143, x.150)^~a.76
    
     16. ~a    = ~a.76
         Auth_pk
               = pmult(inv(x.142), x.143)
         Resp  = Resp.81
         Sign_pk
               = Sign_pk.82
         ini_share
               = ini_share.84
         resp_share
               = pmult(x.142, x.150)
         signature
               = signature.86
         z     = idverify(signature.86, <ini_share.84, pmult(x.142, x.150)>,
                          IBPub(Resp.81, Sign_pk.82))
         z.1   = em(x.143, x.150)^~a.76
    
     17. ~a    = ~a.76
         Auth_pk
               = pmult(inv(x.142), x.143)
         Resp  = Resp.81
         Sign_pk
               = GetIBMasterPublicKey(x.147)
         ini_share
               = ini_share.84
         resp_share
               = pmult(x.142, x.150)
         signature
               = idsign(<ini_share.84, pmult(x.142, x.150)>,
                        IBPriv(Resp.81, x.147))
         z     = true
         z.1   = em(x.143, x.150)^~a.76
    
     18. ~a    = ~a.76
         Auth_pk
               = pmult((x.144*inv((~a.76*x.145))), x.146)
         Resp  = Resp.81
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.84
         resp_share
               = resp_share.85
         signature
               = idsign(<ini_share.84, resp_share.85>, IBPriv(Resp.81, x.150))
         z     = true
         z.1   = em(resp_share.85, x.146)^(x.144*inv(x.145))
    
     19. ~a    = ~a.77
         Auth_pk
               = Auth_pk.79
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(~a.77), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult(inv(~a.77), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(Auth_pk.79, x.152)
    
     20. ~a    = ~a.77
         Auth_pk
               = Auth_pk.79
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(~a.77), x.152)
         signature
               = idsign(<ini_share.85, pmult(inv(~a.77), x.152)>,
                        IBPriv(Resp.82, x.149))
         z     = true
         z.1   = em(Auth_pk.79, x.152)
    
     21. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.151, x.152)
         signature
               = signature.87
         z     = idverify(signature.87, <ini_share.85, pmult(x.151, x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.144, x.152)^(~a.77*x.143*x.151)
    
     22. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv((x.143*x.151)), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult(inv((x.143*x.151)), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.144, x.152)^(~a.77*inv(x.151))
    
     23. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.151*inv(x.143)), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult((x.151*inv(x.143)), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.144, x.152)^(~a.77*x.151)
    
     24. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.151, x.152)
         signature
               = idsign(<ini_share.85, pmult(x.151, x.152)>,
                        IBPriv(Resp.82, x.148))
         z     = true
         z.1   = em(x.144, x.152)^(~a.77*x.143*x.151)
    
     25. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv((x.143*x.151)), x.152)
         signature
               = idsign(<ini_share.85, pmult(inv((x.143*x.151)), x.152)>,
                        IBPriv(Resp.82, x.148))
         z     = true
         z.1   = em(x.144, x.152)^(~a.77*inv(x.151))
    
     26. ~a    = ~a.77
         Auth_pk
               = pmult(x.143, x.144)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.151*inv(x.143)), x.152)
         signature
               = idsign(<ini_share.85, pmult((x.151*inv(x.143)), x.152)>,
                        IBPriv(Resp.82, x.148))
         z     = true
         z.1   = em(x.144, x.152)^(~a.77*x.151)
    
     27. ~a    = ~a.77
         Auth_pk
               = pmult(inv(x.143), x.144)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(x.151), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult(inv(x.151), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.144, x.152)^(~a.77*inv((x.143*x.151)))
    
     28. ~a    = ~a.77
         Auth_pk
               = pmult(inv(x.143), x.144)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.143*x.151), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult((x.143*x.151), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.144, x.152)^(~a.77*x.151)
    
     29. ~a    = ~a.77
         Auth_pk
               = pmult(inv(x.143), x.144)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(x.151), x.152)
         signature
               = idsign(<ini_share.85, pmult(inv(x.151), x.152)>,
                        IBPriv(Resp.82, x.148))
         z     = true
         z.1   = em(x.144, x.152)^(~a.77*inv((x.143*x.151)))
    
     30. ~a    = ~a.77
         Auth_pk
               = pmult(inv(x.143), x.144)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.148)
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.143*x.151), x.152)
         signature
               = idsign(<ini_share.85, pmult((x.143*x.151), x.152)>,
                        IBPriv(Resp.82, x.148))
         z     = true
         z.1   = em(x.144, x.152)^(~a.77*x.151)
    
     31. ~a    = ~a.77
         Auth_pk
               = pmult(inv((x.143*x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.143, x.152)
         signature
               = signature.87
         z     = idverify(signature.87, <ini_share.85, pmult(x.143, x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.145, x.152)^(~a.77*inv(x.144))
    
     32. ~a    = ~a.77
         Auth_pk
               = pmult(inv((x.143*x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.143, x.152)
         signature
               = idsign(<ini_share.85, pmult(x.143, x.152)>,
                        IBPriv(Resp.82, x.149))
         z     = true
         z.1   = em(x.145, x.152)^(~a.77*inv(x.144))
    
     33. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*x.144), x.145)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(x.143), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult(inv(x.143), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.145, x.152)^(~a.77*x.144)
    
     34. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*x.144), x.145)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.85
         resp_share
               = pmult(inv(x.143), x.152)
         signature
               = idsign(<ini_share.85, pmult(inv(x.143), x.152)>,
                        IBPriv(Resp.82, x.149))
         z     = true
         z.1   = em(x.145, x.152)^(~a.77*x.144)
    
     35. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*inv(x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.144, x.152)
         signature
               = signature.87
         z     = idverify(signature.87, <ini_share.85, pmult(x.144, x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.145, x.152)^(~a.77*x.143)
    
     36. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*inv(x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = Sign_pk.83
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.144*inv(x.143)), x.152)
         signature
               = signature.87
         z     = idverify(signature.87,
                          <ini_share.85, pmult((x.144*inv(x.143)), x.152)>,
                          IBPub(Resp.82, Sign_pk.83))
         z.1   = em(x.145, x.152)^~a.77
    
     37. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*inv(x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.85
         resp_share
               = pmult(x.144, x.152)
         signature
               = idsign(<ini_share.85, pmult(x.144, x.152)>,
                        IBPriv(Resp.82, x.149))
         z     = true
         z.1   = em(x.145, x.152)^(~a.77*x.143)
    
     38. ~a    = ~a.77
         Auth_pk
               = pmult((x.143*inv(x.144)), x.145)
         Resp  = Resp.82
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.85
         resp_share
               = pmult((x.144*inv(x.143)), x.152)
         signature
               = idsign(<ini_share.85, pmult((x.144*inv(x.143)), x.152)>,
                        IBPriv(Resp.82, x.149))
         z     = true
         z.1   = em(x.145, x.152)^~a.77
    
     39. ~a    = ~a.78
         Auth_pk
               = Auth_pk.80
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((~a.78*x.153)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv((~a.78*x.153)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(Auth_pk.80, x.154)^inv(x.153)
    
     40. ~a    = ~a.78
         Auth_pk
               = Auth_pk.80
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.153*inv(~a.78)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.153*inv(~a.78)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(Auth_pk.80, x.154)^x.153
    
     41. ~a    = ~a.78
         Auth_pk
               = Auth_pk.80
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((~a.78*x.153)), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv((~a.78*x.153)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(Auth_pk.80, x.154)^inv(x.153)
    
     42. ~a    = ~a.78
         Auth_pk
               = Auth_pk.80
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.153*inv(~a.78)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.153*inv(~a.78)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(Auth_pk.80, x.154)^x.153
    
     43. ~a    = ~a.78
         Auth_pk
               = pmult(x.144, x.145)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.152*inv((x.144*x.153))), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.152*inv((x.144*x.153))), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.145, x.154)^(~a.78*x.152*inv(x.153))
    
     44. ~a    = ~a.78
         Auth_pk
               = pmult(x.144, x.145)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.152*inv((x.144*x.153))), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.152*inv((x.144*x.153))), x.154)>,
                        IBPriv(Resp.83, x.149))
         z     = true
         z.1   = em(x.145, x.154)^(~a.78*x.152*inv(x.153))
    
     45. ~a    = ~a.78
         Auth_pk
               = pmult(x.146, x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(~a.78), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv(~a.78), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)^x.146
    
     46. ~a    = ~a.78
         Auth_pk
               = pmult(x.146, x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((~a.78*x.146)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv((~a.78*x.146)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)
    
     47. ~a    = ~a.78
         Auth_pk
               = pmult(x.146, x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(~a.78), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv(~a.78), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)^x.146
    
     48. ~a    = ~a.78
         Auth_pk
               = pmult(x.146, x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((~a.78*x.146)), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv((~a.78*x.146)), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)
    
     49. ~a    = ~a.78
         Auth_pk
               = pmult(inv(~a.78), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.153, x.154)
         signature
               = signature.88
         z     = idverify(signature.88, <ini_share.86, pmult(x.153, x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^x.153
    
     50. ~a    = ~a.78
         Auth_pk
               = pmult(inv(~a.78), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.153, x.154)
         signature
               = idsign(<ini_share.86, pmult(x.153, x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^x.153
    
     51. ~a    = ~a.78
         Auth_pk
               = pmult(inv(x.144), x.145)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.152*inv(x.153)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.152*inv(x.153)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.145, x.154)^(~a.78*x.152*inv((x.144*x.153)))
    
     52. ~a    = ~a.78
         Auth_pk
               = pmult(inv(x.144), x.145)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.149)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.152*inv(x.153)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.152*inv(x.153)), x.154)>,
                        IBPriv(Resp.83, x.149))
         z     = true
         z.1   = em(x.145, x.154)^(~a.78*x.152*inv((x.144*x.153)))
    
     53. ~a    = ~a.78
         Auth_pk
               = pmult(inv(x.146), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.146*inv(~a.78)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.146*inv(~a.78)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)
    
     54. ~a    = ~a.78
         Auth_pk
               = pmult(inv(x.146), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.146*inv(~a.78)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.146*inv(~a.78)), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)
    
     55. ~a    = ~a.78
         Auth_pk
               = pmult(inv((~a.78*x.146)), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.146, x.154)
         signature
               = signature.88
         z     = idverify(signature.88, <ini_share.86, pmult(x.146, x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)
    
     56. ~a    = ~a.78
         Auth_pk
               = pmult(inv((~a.78*x.146)), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.146, x.154)
         signature
               = idsign(<ini_share.86, pmult(x.146, x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)
    
     57. ~a    = ~a.78
         Auth_pk
               = pmult(inv((x.144*x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.144*x.153), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.144*x.153), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.153*inv(x.145))
    
     58. ~a    = ~a.78
         Auth_pk
               = pmult(inv((x.144*x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.144*inv(x.153)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.144*inv(x.153)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*inv((x.145*x.153)))
    
     59. ~a    = ~a.78
         Auth_pk
               = pmult(inv((x.144*x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.144*x.153), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.144*x.153), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.153*inv(x.145))
    
     60. ~a    = ~a.78
         Auth_pk
               = pmult(inv((x.144*x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.144*inv(x.153)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.144*inv(x.153)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*inv((x.145*x.153)))
    
     61. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((x.144*x.153)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv((x.144*x.153)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.145*inv(x.153))
    
     62. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.153*inv(x.144)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.153*inv(x.144)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.145*x.153)
    
     63. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((x.144*x.153)), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv((x.144*x.153)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.145*inv(x.153))
    
     64. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.153*inv(x.144)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.153*inv(x.144)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.145*x.153)
    
     65. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145*inv(x.146)), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.146*inv(x.144)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.146*inv(x.144)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)^(~a.78*x.145)
    
     66. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*x.145*inv(x.146)), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.146*inv(x.144)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.146*inv(x.144)), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)^(~a.78*x.145)
    
     67. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(x.153), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv(x.153), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.144*inv((x.145*x.153)))
    
     68. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((x.144*x.153)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv((x.144*x.153)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*inv((x.145*x.153)))
    
     69. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*x.153), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.145*x.153), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.144*x.153)
    
     70. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*x.153*inv(x.144)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.145*x.153*inv(x.144)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*x.153)
    
     71. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*inv((x.144*x.153))), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.145*inv((x.144*x.153))), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.146, x.154)^(~a.78*inv(x.153))
    
     72. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(x.153), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv(x.153), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.144*inv((x.145*x.153)))
    
     73. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv((x.144*x.153)), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv((x.144*x.153)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*inv((x.145*x.153)))
    
     74. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*x.153), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.145*x.153), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.144*x.153)
    
     75. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*x.153*inv(x.144)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.145*x.153*inv(x.144)), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*x.153)
    
     76. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv(x.145)), x.146)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.150)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*inv((x.144*x.153))), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.145*inv((x.144*x.153))), x.154)>,
                        IBPriv(Resp.83, x.150))
         z     = true
         z.1   = em(x.146, x.154)^(~a.78*inv(x.153))
    
     77. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv((x.145*x.146))), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.145, x.154)
         signature
               = signature.88
         z     = idverify(signature.88, <ini_share.86, pmult(x.145, x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)^(~a.78*x.144*inv(x.146))
    
     78. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv((x.145*x.146))), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*inv(x.144)), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult((x.145*inv(x.144)), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)^(~a.78*inv(x.146))
    
     79. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv((x.145*x.146))), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult(x.145, x.154)
         signature
               = idsign(<ini_share.86, pmult(x.145, x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)^(~a.78*x.144*inv(x.146))
    
     80. ~a    = ~a.78
         Auth_pk
               = pmult((x.144*inv((x.145*x.146))), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult((x.145*inv(x.144)), x.154)
         signature
               = idsign(<ini_share.86, pmult((x.145*inv(x.144)), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)^(~a.78*inv(x.146))
    
     81. ~a    = ~a.78
         Auth_pk
               = pmult((x.146*inv(~a.78)), x.147)
         Resp  = Resp.83
         Sign_pk
               = Sign_pk.84
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(x.146), x.154)
         signature
               = signature.88
         z     = idverify(signature.88,
                          <ini_share.86, pmult(inv(x.146), x.154)>,
                          IBPub(Resp.83, Sign_pk.84))
         z.1   = em(x.147, x.154)
    
     82. ~a    = ~a.78
         Auth_pk
               = pmult((x.146*inv(~a.78)), x.147)
         Resp  = Resp.83
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.86
         resp_share
               = pmult(inv(x.146), x.154)
         signature
               = idsign(<ini_share.86, pmult(inv(x.146), x.154)>,
                        IBPriv(Resp.83, x.151))
         z     = true
         z.1   = em(x.147, x.154)
    
     83. ~a    = ~a.79
         Auth_pk
               = Auth_pk.81
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((~a.79*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.154*inv((~a.79*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(Auth_pk.81, x.156)^(x.154*inv(x.155))
    
     84. ~a    = ~a.79
         Auth_pk
               = Auth_pk.81
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((~a.79*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.154*inv((~a.79*x.155))), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(Auth_pk.81, x.156)^(x.154*inv(x.155))
    
     85. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.147*x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((~a.79*x.147*x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^inv(x.155)
    
     86. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((~a.79*x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(x.147*inv(x.155))
    
     87. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv(~a.79)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.155*inv(~a.79)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(x.147*x.155)
    
     88. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv((~a.79*x.147))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.155*inv((~a.79*x.147))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^x.155
    
     89. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.147*x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((~a.79*x.147*x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^inv(x.155)
    
     90. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((~a.79*x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(x.147*inv(x.155))
    
     91. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv(~a.79)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.155*inv(~a.79)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(x.147*x.155)
    
     92. ~a    = ~a.79
         Auth_pk
               = pmult(x.147, x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv((~a.79*x.147))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.155*inv((~a.79*x.147))), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^x.155
    
     93. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((~a.79*x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^inv((x.147*x.155))
    
     94. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155*inv(~a.79)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*x.155*inv(~a.79)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^x.155
    
     95. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv((~a.79*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*inv((~a.79*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^inv(x.155)
    
     96. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((~a.79*x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^inv((x.147*x.155))
    
     97. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155*inv(~a.79)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*x.155*inv(~a.79)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^x.155
    
     98. ~a    = ~a.79
         Auth_pk
               = pmult(inv(x.147), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv((~a.79*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*inv((~a.79*x.155))), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^inv(x.155)
    
     99. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.155, x.156)
         signature
               = signature.89
         z     = idverify(signature.89, <ini_share.87, pmult(x.155, x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(x.155*inv(x.147))
    
    100. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.155), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv(x.155), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^inv((x.147*x.155))
    
    101. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*x.155), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^x.155
    
    102. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.155, x.156)
         signature
               = idsign(<ini_share.87, pmult(x.155, x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(x.155*inv(x.147))
    
    103. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.155), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv(x.155), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^inv((x.147*x.155))
    
    104. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*x.155), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^x.155
    
    105. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147*x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.147, x.156)
         signature
               = signature.89
         z     = idverify(signature.89, <ini_share.87, pmult(x.147, x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^inv(x.148)
    
    106. ~a    = ~a.79
         Auth_pk
               = pmult(inv((~a.79*x.147*x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.147, x.156)
         signature
               = idsign(<ini_share.87, pmult(x.147, x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^inv(x.148)
    
    107. ~a    = ~a.79
         Auth_pk
               = pmult(inv((x.145*x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.145*x.154*inv(x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.145*x.154*inv(x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv((x.146*x.155)))
    
    108. ~a    = ~a.79
         Auth_pk
               = pmult(inv((x.145*x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.145*x.154*inv(x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.145*x.154*inv(x.155)), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv((x.146*x.155)))
    
    109. ~a    = ~a.79
         Auth_pk
               = pmult(inv((x.147*x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv(~a.79)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*inv(~a.79)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^inv(x.148)
    
    110. ~a    = ~a.79
         Auth_pk
               = pmult(inv((x.147*x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv(~a.79)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*inv(~a.79)), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^inv(x.148)
    
    111. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146), x.147)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((x.145*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.154*inv((x.145*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.147, x.156)^(~a.79*x.146*x.154*inv(x.155))
    
    112. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146), x.147)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((x.145*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.154*inv((x.145*x.155))), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(x.147, x.156)^(~a.79*x.146*x.154*inv(x.155))
    
    113. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((x.145*x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((x.145*x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.146*inv((x.147*x.155)))
    
    114. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155*inv(x.145)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*x.155*inv(x.145)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.146*x.155)
    
    115. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv((x.145*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*inv((x.145*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.146*inv(x.155))
    
    116. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((x.145*x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((x.145*x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.146*inv((x.147*x.155)))
    
    117. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*x.155*inv(x.145)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*x.155*inv(x.145)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.146*x.155)
    
    118. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv(x.147)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv((x.145*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*inv((x.145*x.155))), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.146*inv(x.155))
    
    119. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv(x.145)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.147*inv(x.145)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^(~a.79*x.146*inv(x.148))
    
    120. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.147*inv(x.145)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.147*inv(x.145)), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^(~a.79*x.146*inv(x.148))
    
    121. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.154*inv((x.145*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.146*x.154*inv((x.145*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv(x.155))
    
    122. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv(x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.154*inv(x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.147, x.156)^(~a.79*x.145*x.154*inv((x.146*x.155)))
    
    123. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((x.145*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.154*inv((x.145*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv((x.146*x.155)))
    
    124. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.154*inv((x.145*x.155))), x.156)
         signature
               = idsign(<ini_share.87, 
                         pmult((x.146*x.154*inv((x.145*x.155))), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv(x.155))
    
    125. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv(x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.154*inv(x.155)), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(x.147, x.156)^(~a.79*x.145*x.154*inv((x.146*x.155)))
    
    126. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv(x.146)), x.147)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.151)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.154*inv((x.145*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.154*inv((x.145*x.155))), x.156)>,
                        IBPriv(Resp.84, x.151))
         z     = true
         z.1   = em(x.147, x.156)^(~a.79*x.154*inv((x.146*x.155)))
    
    127. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.155), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.146*x.155), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.145*x.155*inv(x.147))
    
    128. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.155*inv(x.145)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.146*x.155*inv(x.145)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.155*inv(x.147))
    
    129. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*inv(x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.146*inv(x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*x.145*inv((x.147*x.155)))
    
    130. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*inv((x.145*x.155))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.146*inv((x.145*x.155))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(~a.79*inv((x.147*x.155)))
    
    131. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.155), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.146*x.155), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.145*x.155*inv(x.147))
    
    132. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*x.155*inv(x.145)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.146*x.155*inv(x.145)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.155*inv(x.147))
    
    133. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*inv(x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.146*inv(x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*x.145*inv((x.147*x.155)))
    
    134. ~a    = ~a.79
         Auth_pk
               = pmult((x.145*inv((x.146*x.147))), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.146*inv((x.145*x.155))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.146*inv((x.145*x.155))), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(~a.79*inv((x.147*x.155)))
    
    135. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*x.148), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.147)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((~a.79*x.147)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^x.148
    
    136. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*x.148), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((~a.79*x.147)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((~a.79*x.147)), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^x.148
    
    137. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*x.148*inv(~a.79)), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.147), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv(x.147), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^x.148
    
    138. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*x.148*inv(~a.79)), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.147), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv(x.147), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^x.148
    
    139. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.155, x.156)
         signature
               = signature.89
         z     = idverify(signature.89, <ini_share.87, pmult(x.155, x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^(x.147*x.155)
    
    140. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((x.147*x.155)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv((x.147*x.155)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^inv(x.155)
    
    141. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv(x.147)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.155*inv(x.147)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.148, x.156)^x.155
    
    142. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.155, x.156)
         signature
               = idsign(<ini_share.87, pmult(x.155, x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^(x.147*x.155)
    
    143. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv((x.147*x.155)), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv((x.147*x.155)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^inv(x.155)
    
    144. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(~a.79)), x.148)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.152)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.155*inv(x.147)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.155*inv(x.147)), x.156)>,
                        IBPriv(Resp.84, x.152))
         z     = true
         z.1   = em(x.148, x.156)^x.155
    
    145. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv(~a.79)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.148*inv(~a.79)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^x.147
    
    146. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv((~a.79*x.147))), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.148*inv((~a.79*x.147))), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)
    
    147. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv(~a.79)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.148*inv(~a.79)), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^x.147
    
    148. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv(x.148)), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv((~a.79*x.147))), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.148*inv((~a.79*x.147))), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)
    
    149. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.148, x.156)
         signature
               = signature.89
         z     = idverify(signature.89, <ini_share.87, pmult(x.148, x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^x.147
    
    150. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.147), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult(inv(x.147), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)^inv(x.148)
    
    151. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = Sign_pk.85
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv(x.147)), x.156)
         signature
               = signature.89
         z     = idverify(signature.89,
                          <ini_share.87, pmult((x.148*inv(x.147)), x.156)>,
                          IBPub(Resp.84, Sign_pk.85))
         z.1   = em(x.149, x.156)
    
    152. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult(x.148, x.156)
         signature
               = idsign(<ini_share.87, pmult(x.148, x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^x.147
    
    153. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult(inv(x.147), x.156)
         signature
               = idsign(<ini_share.87, pmult(inv(x.147), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)^inv(x.148)
    
    154. ~a    = ~a.79
         Auth_pk
               = pmult((x.147*inv((~a.79*x.148))), x.149)
         Resp  = Resp.84
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.87
         resp_share
               = pmult((x.148*inv(x.147)), x.156)
         signature
               = idsign(<ini_share.87, pmult((x.148*inv(x.147)), x.156)>,
                        IBPriv(Resp.84, x.153))
         z     = true
         z.1   = em(x.149, x.156)
    
    155. ~a    = ~a.80
         Auth_pk
               = pmult(x.148, x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.148*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv((~a.80*x.148*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    156. ~a    = ~a.80
         Auth_pk
               = pmult(x.148, x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv((~a.80*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.148*x.156*inv(x.157))
    
    157. ~a    = ~a.80
         Auth_pk
               = pmult(x.148, x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.148*x.157))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.156*inv((~a.80*x.148*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    158. ~a    = ~a.80
         Auth_pk
               = pmult(x.148, x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.156*inv((~a.80*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.148*x.156*inv(x.157))
    
    159. ~a    = ~a.80
         Auth_pk
               = pmult(inv(x.148), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.156*inv((~a.80*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*x.156*inv((~a.80*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    160. ~a    = ~a.80
         Auth_pk
               = pmult(inv(x.148), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv((~a.80*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.156*inv((x.148*x.157)))
    
    161. ~a    = ~a.80
         Auth_pk
               = pmult(inv(x.148), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.156*inv((~a.80*x.157))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.148*x.156*inv((~a.80*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    162. ~a    = ~a.80
         Auth_pk
               = pmult(inv(x.148), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((~a.80*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.156*inv((~a.80*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.156*inv((x.148*x.157)))
    
    163. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv(x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv(x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.156*inv((x.148*x.157)))
    
    164. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv(x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.156*inv(x.157)), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.156*inv((x.148*x.157)))
    
    165. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*x.157), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    166. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv(x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*inv(x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    167. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*x.157), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    168. ~a    = ~a.80
         Auth_pk
               = pmult(inv((~a.80*x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv(x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*inv(x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    169. ~a    = ~a.80
         Auth_pk
               = pmult(inv((x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157*inv(~a.80)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*x.157*inv(~a.80)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    170. ~a    = ~a.80
         Auth_pk
               = pmult(inv((x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv((~a.80*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*inv((~a.80*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    171. ~a    = ~a.80
         Auth_pk
               = pmult(inv((x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157*inv(~a.80)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*x.157*inv(~a.80)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    172. ~a    = ~a.80
         Auth_pk
               = pmult(inv((x.148*x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv((~a.80*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*inv((~a.80*x.157))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    173. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv(x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.156*inv((x.146*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*x.156*inv((x.146*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(~a.80*x.147*x.156*inv(x.157))
    
    174. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv(x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((x.146*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv((x.146*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(~a.80*x.147*x.156*inv((x.148*x.157)))
    
    175. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv(x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.156*inv((x.146*x.157))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.148*x.156*inv((x.146*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(~a.80*x.147*x.156*inv(x.157))
    
    176. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv(x.148)), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((x.146*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.156*inv((x.146*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(~a.80*x.147*x.156*inv((x.148*x.157)))
    
    177. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv((x.148*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157*inv(x.146)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*x.157*inv(x.146)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(~a.80*x.147*x.157*inv(x.149))
    
    178. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv((x.148*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv((x.146*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.148*inv((x.146*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(~a.80*x.147*inv((x.149*x.157)))
    
    179. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv((x.148*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*x.157*inv(x.146)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*x.157*inv(x.146)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(~a.80*x.147*x.157*inv(x.149))
    
    180. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*x.147*inv((x.148*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.148*inv((x.146*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.148*inv((x.146*x.157))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(~a.80*x.147*inv((x.149*x.157)))
    
    181. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.147*x.156*inv(x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.147*x.156*inv(x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(~a.80*x.146*x.156*inv((x.148*x.157)))
    
    182. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.147*x.156*inv((x.146*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.147*x.156*inv((x.146*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(~a.80*x.156*inv((x.148*x.157)))
    
    183. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.147*x.156*inv(x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.147*x.156*inv(x.157)), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(~a.80*x.146*x.156*inv((x.148*x.157)))
    
    184. ~a    = ~a.80
         Auth_pk
               = pmult((x.146*inv((x.147*x.148))), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.147*x.156*inv((x.146*x.157))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.147*x.156*inv((x.146*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(~a.80*x.156*inv((x.148*x.157)))
    
    185. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.148*x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv((~a.80*x.148*x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.149*inv(x.157))
    
    186. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv((~a.80*x.148))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.157*inv((~a.80*x.148))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.149*x.157)
    
    187. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.148*x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv((~a.80*x.148*x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.149*inv(x.157))
    
    188. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv((~a.80*x.148))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.157*inv((~a.80*x.148))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.149*x.157)
    
    189. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(~a.80)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((x.148*x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv((x.148*x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.149*inv(x.157))
    
    190. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(~a.80)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv(x.148)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.157*inv(x.148)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.149*x.157)
    
    191. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(~a.80)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((x.148*x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv((x.148*x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.149*inv(x.157))
    
    192. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(~a.80)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv(x.148)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.157*inv(x.148)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.149*x.157)
    
    193. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(x.150)), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.150*inv((~a.80*x.148))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.150*inv((~a.80*x.148))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^x.149
    
    194. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv(x.150)), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.150*inv((~a.80*x.148))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.150*inv((~a.80*x.148))), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^x.149
    
    195. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv((~a.80*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv(x.148), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv(x.148), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^(x.149*inv(x.150))
    
    196. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv((~a.80*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.150*inv(x.148)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.150*inv(x.148)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^x.149
    
    197. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv((~a.80*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv(x.148), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv(x.148), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^(x.149*inv(x.150))
    
    198. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*x.149*inv((~a.80*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.150*inv(x.148)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.150*inv(x.148)), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^x.149
    
    199. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(~a.80)), x.149)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((x.148*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.156*inv((x.148*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    200. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(~a.80)), x.149)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.153)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.156*inv((x.148*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.156*inv((x.148*x.157))), x.158)>,
                        IBPriv(Resp.85, x.153))
         z     = true
         z.1   = em(x.149, x.158)^(x.156*inv(x.157))
    
    201. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.148*x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv((~a.80*x.148*x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    202. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv((~a.80*x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*inv((x.149*x.157)))
    
    203. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv(~a.80)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*x.157*inv(~a.80)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*x.157)
    
    204. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv((~a.80*x.148))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*x.157*inv((~a.80*x.148))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^x.157
    
    205. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.148*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv((~a.80*x.148*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv(x.157)
    
    206. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv((~a.80*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*inv(x.157))
    
    207. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.148*x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv((~a.80*x.148*x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    208. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((~a.80*x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv((~a.80*x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*inv((x.149*x.157)))
    
    209. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv(~a.80)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*x.157*inv(~a.80)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*x.157)
    
    210. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv((~a.80*x.148))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.149*x.157*inv((~a.80*x.148))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^x.157
    
    211. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.148*x.157))), x.158)
         signature
               = idsign(<ini_share.88, 
                         pmult((x.149*inv((~a.80*x.148*x.157))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv(x.157)
    
    212. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv(x.149)), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*inv((~a.80*x.157))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*inv(x.157))
    
    213. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(x.157, x.158)
         signature
               = signature.90
         z     = idverify(signature.90, <ini_share.88, pmult(x.157, x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*x.157*inv(x.149))
    
    214. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv(x.157), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv(x.157), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*inv((x.149*x.157)))
    
    215. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((x.148*x.157)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult(inv((x.148*x.157)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    216. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*x.157), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.148*x.157)
    
    217. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv(x.148)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*x.157*inv(x.148)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^x.157
    
    218. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((x.148*x.157))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv((x.148*x.157))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^inv(x.157)
    
    219. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv(x.148)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.157*inv(x.148)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    220. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(x.157, x.158)
         signature
               = idsign(<ini_share.88, pmult(x.157, x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*x.157*inv(x.149))
    
    221. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv(x.157), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv(x.157), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*inv((x.149*x.157)))
    
    222. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult(inv((x.148*x.157)), x.158)
         signature
               = idsign(<ini_share.88, pmult(inv((x.148*x.157)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv((x.149*x.157))
    
    223. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*x.157), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.148*x.157)
    
    224. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*x.157*inv(x.148)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*x.157*inv(x.148)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^x.157
    
    225. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((x.148*x.157))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*inv((x.148*x.157))), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^inv(x.157)
    
    226. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149))), x.150)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.154)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.157*inv(x.148)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.157*inv(x.148)), x.158)>,
                        IBPriv(Resp.85, x.154))
         z     = true
         z.1   = em(x.150, x.158)^(x.157*inv(x.149))
    
    227. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult(x.149, x.158)
         signature
               = signature.90
         z     = idverify(signature.90, <ini_share.88, pmult(x.149, x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^(x.148*inv(x.150))
    
    228. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv(x.148)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv(x.148)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^inv(x.150)
    
    229. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult(x.149, x.158)
         signature
               = idsign(<ini_share.88, pmult(x.149, x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^(x.148*inv(x.150))
    
    230. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((~a.80*x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv(x.148)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*inv(x.148)), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^inv(x.150)
    
    231. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv(~a.80)), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv(~a.80)), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^(x.148*inv(x.150))
    
    232. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = Sign_pk.86
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.148))), x.158)
         signature
               = signature.90
         z     = idverify(signature.90,
                          <ini_share.88, pmult((x.149*inv((~a.80*x.148))), x.158)>,
                          IBPub(Resp.85, Sign_pk.86))
         z.1   = em(x.151, x.158)^inv(x.150)
    
    233. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv(~a.80)), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*inv(~a.80)), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^(x.148*inv(x.150))
    
    234. ~a    = ~a.80
         Auth_pk
               = pmult((x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.85
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.88
         resp_share
               = pmult((x.149*inv((~a.80*x.148))), x.158)
         signature
               = idsign(<ini_share.88, pmult((x.149*inv((~a.80*x.148))), x.158)>,
                        IBPriv(Resp.85, x.155))
         z     = true
         z.1   = em(x.151, x.158)^inv(x.150)
    
    235. ~a    = ~a.81
         Auth_pk
               = pmult(inv((~a.81*x.149*x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv(x.159)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.149*x.158*inv(x.159)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    236. ~a    = ~a.81
         Auth_pk
               = pmult(inv((~a.81*x.149*x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv(x.159)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.149*x.158*inv(x.159)), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    237. ~a    = ~a.81
         Auth_pk
               = pmult(inv((x.149*x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv((~a.81*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.149*x.158*inv((~a.81*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    238. ~a    = ~a.81
         Auth_pk
               = pmult(inv((x.149*x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv((~a.81*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.149*x.158*inv((~a.81*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    239. ~a    = ~a.81
         Auth_pk
               = pmult((x.147*x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv((x.147*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.149*x.158*inv((x.147*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(~a.81*x.148*x.158*inv((x.150*x.159)))
    
    240. ~a    = ~a.81
         Auth_pk
               = pmult((x.147*x.148*inv((x.149*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.149*x.158*inv((x.147*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.149*x.158*inv((x.147*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(~a.81*x.148*x.158*inv((x.150*x.159)))
    
    241. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv((~a.81*x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.150*x.158*inv(x.159))
    
    242. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.158*inv((~a.81*x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.150*x.158*inv(x.159))
    
    243. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(~a.81)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv((x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.150*x.158*inv(x.159))
    
    244. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(~a.81)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.158*inv((x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.150*x.158*inv(x.159))
    
    245. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult(inv((~a.81*x.149*x.159)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult(inv((~a.81*x.149*x.159)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*inv((x.151*x.159)))
    
    246. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*x.159*inv((~a.81*x.149))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*x.159*inv((~a.81*x.149))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*x.159)
    
    247. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((~a.81*x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*inv((~a.81*x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*inv(x.159))
    
    248. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult(inv((~a.81*x.149*x.159)), x.160)
         signature
               = idsign(<ini_share.89, pmult(inv((~a.81*x.149*x.159)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*inv((x.151*x.159)))
    
    249. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*x.159*inv((~a.81*x.149))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.151*x.159*inv((~a.81*x.149))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*x.159)
    
    250. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv(x.151)), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((~a.81*x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.151*inv((~a.81*x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*inv(x.159))
    
    251. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult(inv((x.149*x.159)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult(inv((x.149*x.159)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*inv((x.151*x.159)))
    
    252. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*x.159*inv(x.149)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*x.159*inv(x.149)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*x.159)
    
    253. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*inv((x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*inv(x.159))
    
    254. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.159*inv(x.149)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.159*inv(x.149)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.150*x.159*inv(x.151))
    
    255. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult(inv((x.149*x.159)), x.160)
         signature
               = idsign(<ini_share.89, pmult(inv((x.149*x.159)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*inv((x.151*x.159)))
    
    256. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*x.159*inv(x.149)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.151*x.159*inv(x.149)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*x.159)
    
    257. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.151*inv((x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*inv(x.159))
    
    258. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.159*inv(x.149)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.159*inv(x.149)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.150*x.159*inv(x.151))
    
    259. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151*x.152))), x.153)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv(x.149)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*inv(x.149)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.153, x.160)^(x.150*inv(x.152))
    
    260. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((~a.81*x.151*x.152))), x.153)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv(x.149)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.151*inv(x.149)), x.160)>,
                        IBPriv(Resp.86, x.157))
         z     = true
         z.1   = em(x.153, x.160)^(x.150*inv(x.152))
    
    261. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((~a.81*x.149))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.151*inv((~a.81*x.149))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.153, x.160)^(x.150*inv(x.152))
    
    262. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.151*inv((~a.81*x.149))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.151*inv((~a.81*x.149))), x.160)>,
                        IBPriv(Resp.86, x.157))
         z     = true
         z.1   = em(x.153, x.160)^(x.150*inv(x.152))
    
    263. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.158*inv((~a.81*x.149*x.159))), x.160)
                          >,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv(x.159))
    
    264. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((~a.81*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.158*inv((~a.81*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.149*x.158*inv(x.159))
    
    265. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv((~a.81*x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    266. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv((~a.81*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.149*x.158*inv((x.150*x.159)))
    
    267. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.150*x.158*inv((~a.81*x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv(x.159))
    
    268. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((~a.81*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.150*x.158*inv((~a.81*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.149*x.158*inv(x.159))
    
    269. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.158*inv((~a.81*x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    270. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv(x.150)), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((~a.81*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.158*inv((~a.81*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.149*x.158*inv((x.150*x.159)))
    
    271. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.158*inv((x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv(x.159))
    
    272. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv(x.159)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv(x.159)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.149*x.158*inv((x.150*x.159)))
    
    273. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.158*inv((x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    274. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.158*inv((x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.150*x.158*inv((x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv(x.159))
    
    275. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv(x.159)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.158*inv(x.159)), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.149*x.158*inv((x.150*x.159)))
    
    276. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150))), x.151)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.155)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.158*inv((x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.158*inv((x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.155))
         z     = true
         z.1   = em(x.151, x.160)^(x.158*inv((x.150*x.159)))
    
    277. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.159), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.149*x.159*inv(x.151))
    
    278. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv(x.149)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.159*inv(x.149)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.159*inv(x.151))
    
    279. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv(x.159)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*inv(x.159)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.149*inv((x.151*x.159)))
    
    280. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*inv((x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^inv((x.151*x.159))
    
    281. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*x.159), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.149*x.159*inv(x.151))
    
    282. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv(x.149)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*x.159*inv(x.149)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.159*inv(x.151))
    
    283. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv(x.159)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*inv(x.159)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.149*inv((x.151*x.159)))
    
    284. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((~a.81*x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*inv((x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^inv((x.151*x.159))
    
    285. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv(~a.81)), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.159*inv(~a.81)), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.149*x.159*inv(x.151))
    
    286. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv((~a.81*x.149))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*x.159*inv((~a.81*x.149))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.159*inv(x.151))
    
    287. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((~a.81*x.149*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*inv((~a.81*x.149*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^inv((x.151*x.159))
    
    288. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = Sign_pk.87
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((~a.81*x.159))), x.160)
         signature
               = signature.91
         z     = idverify(signature.91,
                          <ini_share.89, pmult((x.150*inv((~a.81*x.159))), x.160)>,
                          IBPub(Resp.86, Sign_pk.87))
         z.1   = em(x.152, x.160)^(x.149*inv((x.151*x.159)))
    
    289. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv(~a.81)), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*x.159*inv(~a.81)), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.149*x.159*inv(x.151))
    
    290. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*x.159*inv((~a.81*x.149))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.150*x.159*inv((~a.81*x.149))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.159*inv(x.151))
    
    291. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((~a.81*x.149*x.159))), x.160)
         signature
               = idsign(<ini_share.89, 
                         pmult((x.150*inv((~a.81*x.149*x.159))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^inv((x.151*x.159))
    
    292. ~a    = ~a.81
         Auth_pk
               = pmult((x.149*inv((x.150*x.151))), x.152)
         Resp  = Resp.86
         Sign_pk
               = GetIBMasterPublicKey(x.156)
         ini_share
               = ini_share.89
         resp_share
               = pmult((x.150*inv((~a.81*x.159))), x.160)
         signature
               = idsign(<ini_share.89, pmult((x.150*inv((~a.81*x.159))), x.160)>,
                        IBPriv(Resp.86, x.156))
         z     = true
         z.1   = em(x.152, x.160)^(x.149*inv((x.151*x.159)))
    
    293. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv(x.152)), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*x.160*inv((~a.82*x.150*x.161))), x.162)
                          >,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.151*x.160*inv(x.161))
    
    294. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv(x.152)), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.160*inv((~a.82*x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.151*x.160*inv((x.152*x.161)))
    
    295. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv(x.152)), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.152*x.160*inv((~a.82*x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.151*x.160*inv(x.161))
    
    296. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv(x.152)), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.160*inv((~a.82*x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.151*x.160*inv((x.152*x.161)))
    
    297. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.160*inv((x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*x.160*inv((x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.151*x.160*inv(x.161))
    
    298. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.160*inv((x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.160*inv((x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.151*x.160*inv((x.152*x.161)))
    
    299. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.160*inv((x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.152*x.160*inv((x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.151*x.160*inv(x.161))
    
    300. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.160*inv((x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, pmult((x.160*inv((x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.151*x.160*inv((x.152*x.161)))
    
    301. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.161*inv(x.150)), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*x.161*inv(x.150)), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.154, x.162)^(x.151*x.161*inv(x.153))
    
    302. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*inv((x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*inv((x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.154, x.162)^(x.151*inv((x.153*x.161)))
    
    303. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.158)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.161*inv(x.150)), x.162)
         signature
               = idsign(<ini_share.90, pmult((x.152*x.161*inv(x.150)), x.162)>,
                        IBPriv(Resp.87, x.158))
         z     = true
         z.1   = em(x.154, x.162)^(x.151*x.161*inv(x.153))
    
    304. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((~a.82*x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.158)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*inv((x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, pmult((x.152*inv((x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.158))
         z     = true
         z.1   = em(x.154, x.162)^(x.151*inv((x.153*x.161)))
    
    305. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.161*inv((~a.82*x.150))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*x.161*inv((~a.82*x.150))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.154, x.162)^(x.151*x.161*inv(x.153))
    
    306. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*inv((~a.82*x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.152*inv((~a.82*x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.154, x.162)^(x.151*inv((x.153*x.161)))
    
    307. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.158)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*x.161*inv((~a.82*x.150))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.152*x.161*inv((~a.82*x.150))), x.162)>,
                        IBPriv(Resp.87, x.158))
         z     = true
         z.1   = em(x.154, x.162)^(x.151*x.161*inv(x.153))
    
    308. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*x.151*inv((x.152*x.153))), x.154)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.158)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.152*inv((~a.82*x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.152*inv((~a.82*x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.158))
         z     = true
         z.1   = em(x.154, x.162)^(x.151*inv((x.153*x.161)))
    
    309. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((~a.82*x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv(x.161)), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.151*x.160*inv(x.161)), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.150*x.160*inv((x.152*x.161)))
    
    310. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((~a.82*x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.151*x.160*inv((x.150*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.160*inv((x.152*x.161)))
    
    311. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((~a.82*x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv(x.161)), x.162)
         signature
               = idsign(<ini_share.90, pmult((x.151*x.160*inv(x.161)), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.150*x.160*inv((x.152*x.161)))
    
    312. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((~a.82*x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.151*x.160*inv((x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.160*inv((x.152*x.161)))
    
    313. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.151*x.160*inv((~a.82*x.150*x.161))), x.162)
                          >,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.160*inv((x.152*x.161)))
    
    314. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = Sign_pk.88
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((~a.82*x.161))), x.162)
         signature
               = signature.92
         z     = idverify(signature.92,
                          <ini_share.90, pmult((x.151*x.160*inv((~a.82*x.161))), x.162)>,
                          IBPub(Resp.87, Sign_pk.88))
         z.1   = em(x.153, x.162)^(x.150*x.160*inv((x.152*x.161)))
    
    315. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((~a.82*x.150*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.151*x.160*inv((~a.82*x.150*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.160*inv((x.152*x.161)))
    
    316. ~a    = ~a.82
         Auth_pk
               = pmult((x.150*inv((x.151*x.152))), x.153)
         Resp  = Resp.87
         Sign_pk
               = GetIBMasterPublicKey(x.157)
         ini_share
               = ini_share.90
         resp_share
               = pmult((x.151*x.160*inv((~a.82*x.161))), x.162)
         signature
               = idsign(<ini_share.90, 
                         pmult((x.151*x.160*inv((~a.82*x.161))), x.162)>,
                        IBPriv(Resp.87, x.157))
         z     = true
         z.1   = em(x.153, x.162)^(x.150*x.160*inv((x.152*x.161)))
    
    317. ~a    = ~a.83
         Auth_pk
               = pmult((x.151*x.152*inv((~a.83*x.153*x.154))), x.155)
         Resp  = Resp.88
         Sign_pk
               = Sign_pk.89
         ini_share
               = ini_share.91
         resp_share
               = pmult((x.153*x.162*inv((x.151*x.163))), x.164)
         signature
               = signature.93
         z     = idverify(signature.93,
                          <ini_share.91, pmult((x.153*x.162*inv((x.151*x.163))), x.164)>,
                          IBPub(Resp.88, Sign_pk.89))
         z.1   = em(x.155, x.164)^(x.152*x.162*inv((x.154*x.163)))
    
    318. ~a    = ~a.83
         Auth_pk
               = pmult((x.151*x.152*inv((~a.83*x.153*x.154))), x.155)
         Resp  = Resp.88
         Sign_pk
               = GetIBMasterPublicKey(x.159)
         ini_share
               = ini_share.91
         resp_share
               = pmult((x.153*x.162*inv((x.151*x.163))), x.164)
         signature
               = idsign(<ini_share.91, 
                         pmult((x.153*x.162*inv((x.151*x.163))), x.164)>,
                        IBPriv(Resp.88, x.159))
         z     = true
         z.1   = em(x.155, x.164)^(x.152*x.162*inv((x.154*x.163)))
    
    319. ~a    = ~a.83
         Auth_pk
               = pmult((x.151*x.152*inv((x.153*x.154))), x.155)
         Resp  = Resp.88
         Sign_pk
               = Sign_pk.89
         ini_share
               = ini_share.91
         resp_share
               = pmult((x.153*x.162*inv((~a.83*x.151*x.163))), x.164)
         signature
               = signature.93
         z     = idverify(signature.93,
                          <ini_share.91, pmult((x.153*x.162*inv((~a.83*x.151*x.163))), x.164)
                          >,
                          IBPub(Resp.88, Sign_pk.89))
         z.1   = em(x.155, x.164)^(x.152*x.162*inv((x.154*x.163)))
    
    320. ~a    = ~a.83
         Auth_pk
               = pmult((x.151*x.152*inv((x.153*x.154))), x.155)
         Resp  = Resp.88
         Sign_pk
               = GetIBMasterPublicKey(x.159)
         ini_share
               = ini_share.91
         resp_share
               = pmult((x.153*x.162*inv((~a.83*x.151*x.163))), x.164)
         signature
               = idsign(<ini_share.91, 
                         pmult((x.153*x.162*inv((~a.83*x.151*x.163))), x.164)>,
                        IBPriv(Resp.88, x.159))
         z     = true
         z.1   = em(x.155, x.164)^(x.152*x.162*inv((x.154*x.163)))
  */

rule (modulo E) Responder_2recv:
   [
   St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
              resp_share, Ini, ini_share, key
   ),
   In( mIn )
   ]
  --[
  Eq( true, idverify(mIn, resp_share, IBPub(Ini, Sign_pk)) ),
  Secret( 'KEY', Resp, key ), IN_RESP_2recv( mIn ),
  Commit( Resp, Ini, <'Responder', 'Initiator', key> ), Full( )
  ]->
   [ ]

  /*
  rule (modulo AC) Responder_2recv:
     [
     St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
                resp_share, Ini, ini_share, key
     ),
     In( mIn )
     ]
    --[
    Eq( true, z ), Secret( 'KEY', Resp, key ), IN_RESP_2recv( mIn ),
    Commit( Resp, Ini, <'Responder', 'Initiator', key> ), Full( )
    ]->
     [ ]
    variants (modulo AC)
    1. Ini   = Ini.21
       Sign_pk
             = Sign_pk.23
       mIn   = mIn.27
       resp_share
             = resp_share.28
       z     = idverify(mIn.27, resp_share.28, IBPub(Ini.21, Sign_pk.23))
    
    2. Ini   = Ini.40
       Sign_pk
             = GetIBMasterPublicKey(x.75)
       mIn   = idsign(resp_share.47, IBPriv(Ini.40, x.75))
       resp_share
             = resp_share.47
       z     = true
  */

restriction Equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction Nequality:
  "∀ x y #i. (Neq( x, y ) @ #i) ⇒ (¬(x = y))"
  // safety formula

restriction Once:
  "∀ tag #i #j.
    ((Once( tag ) @ #i) ∧ (Once( tag ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma secrecy_session_key [use_induction, reuse]:
  all-traces
  "∀ A s #i.
    (Secret( 'KEY', A, s ) @ #i) ⇒
    ((¬(∃ #j. K( s ) @ #j)) ∨ (∃ K X #l. Reveal( K, X ) @ #l))"
/*
guarded formula characterizing all counter-examples:
"∃ A s #i.
  (Secret( 'KEY', A, s ) @ #i)
 ∧
  (∃ #j. (K( s ) @ #j)) ∧ (∀ K X #l. (Reveal( K, X ) @ #l) ⇒ ⊥)"
*/
by sorry

lemma session_escrow [hide_lemma=secrecy_session_key]:
  exists-trace
  "∃ A B key #i #j #k.
    (((((!KU( key ) @ #i) ∧
        (Commit( A, B, <'Responder', 'Initiator', key> ) @ #j)) ∧
       (Reveal( 'PKG', 'AUTH' ) @ #k)) ∧
      (∀ #i.1 #j.1 #k.1.
        (((User( ) @ #i.1) ∧ (User( ) @ #j.1)) ∧ (User( ) @ #k.1)) ⇒
        (((#i.1 = #j.1) ∨ (#j.1 = #k.1)) ∨ (#i.1 = #k.1)))) ∧
     (¬(∃ Y #r. Reveal( 'ID_SIGN', Y ) @ #r))) ∧
    (¬(∃ #r. Reveal( 'PKG', 'SIGN' ) @ #r))"
/*
guarded formula characterizing all satisfying traces:
"∃ A B key #i #j #k.
  (!KU( key ) @ #i) ∧
  (Commit( A, B, <'Responder', 'Initiator', key> ) @ #j) ∧
  (Reveal( 'PKG', 'AUTH' ) @ #k)
 ∧
  (∀ #i.1 #j.1 #k.1.
    (User( ) @ #i.1) ∧ (User( ) @ #j.1) ∧ (User( ) @ #k.1)
   ⇒
    ((#i.1 = #j.1) ∨ (#j.1 = #k.1) ∨ (#i.1 = #k.1))) ∧
  (∀ Y #r. (Reveal( 'ID_SIGN', Y ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'PKG', 'SIGN' ) @ #r) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, <'Responder', 'Initiator', key> ) @ #j )
  case Responder_2recv
  solve( St_Resp_1( ~id, A, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, B, ini_share, key
         ) ▶₀ #j )
    case Responder_1recv_send
    solve( !KU( KDF(z) ) @ #i )
      case c_KDF
      solve( !KU( idsign(pmult(~b, 'P'),
                         IBPriv(B, ~IBMasterPrivateKey.1))
             ) @ #vk )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.9 )
          case Responder_1recv_send
          solve( !KU( pmult(~b, 'P') ) @ #vk.9 )
            case Responder_1recv_send
            solve( !KU( pmult(~a, 'P') ) @ #vk.6 )
              case Initiator_1send
              solve( !KU( em('P', 'P')^(~IBMasterPrivateKey*~a*~b) ) @ #vk.8 )
                case Initiator_1send_case_3
                solve( !KU( ~IBMasterPrivateKey ) @ #vk.10 )
                  case Reveal_IB_MasterPrivateKey
                  solve( Reveal( 'PKG', 'AUTH' ) @ #k )
                    case Reveal_IB_MasterPrivateKey
                    solve( !IB_MasterPrivateKey( 'AUTH', IBMasterPrivateKey.2 ) ▶₀ #k )
                      case create_IB_AUTH_PrivateKeyGenerator
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma Weak_Forward_Secrecy_key [use_induction]:
  all-traces
  "∀ A B X Y key #i.
    (Commit( A, B, <X, Y, key> ) @ #i) ⇒
    (((((¬(∃ #j. K( key ) @ #j)) ∨
        ((∃ K #l. Reveal( K, A ) @ #l) ∧ (∃ K #l. Reveal( K, B ) @ #l))) ∨
       (∃ K #l. (Reveal( K, A ) @ #l) ∧ (#l < #i))) ∨
      (∃ K #l. (Reveal( K, B ) @ #l) ∧ (#l < #i))) ∨
     (∃ K #j. Reveal( 'PKG', K ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B X Y key #i.
  (Commit( A, B, <X, Y, key> ) @ #i)
 ∧
  (∃ #j. (K( key ) @ #j)) ∧
  (((∀ K #l. (Reveal( K, A ) @ #l) ⇒ ⊥) ∨
    (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ⊥))) ∧
  (∀ K #l. (Reveal( K, A ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #j. (Reveal( 'PKG', K ) @ #j) ⇒ ⊥)"
*/
induction
  case non_empty_trace
  simplify
  solve( Commit( A, B, <X, Y, key> ) @ #i )
    case Initiator_2recv_send
    solve( St_Ini_1( ~id, A, Auth_pk, Auth_sk, GetIBMasterPublicKey(x),
                     Sign_sk, ini_share, ~a
           ) ▶₀ #i )
      case Initiator_1send
      solve( !KU( KDF(z) ) @ #vk )
        case c_KDF
        solve( !KU( idsign(<pmult(~a, 'P'), resp_share>,
                           IBPriv(B, ~IBMasterPrivateKey.1))
               ) @ #vk.5 )
          case Initiator_2recv_send
          solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                             IBPriv(Resp, ~IBMasterPrivateKey.1))
                 ) @ #vk.11 )
            case Initiator_2recv_send
            solve( !KU( idsign(<pmult(~a.2, 'P'), pmult(~a.1, 'P'), 
                                pmult(~a, 'P'), resp_share>,
                               IBPriv(Resp, ~IBMasterPrivateKey.1))
                   ) @ #vk.17 )
              case Initiator_2recv_send
              solve( !KU( idsign(<pmult(~a.3, 'P'), pmult(~a.2, 'P'), 
                                  pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                                 IBPriv(Resp, ~IBMasterPrivateKey.1))
                     ) @ #vk.23 )
                case c_idsign
                solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.26 )
                  case Reveal_IB_SIGN_privkey
                  solve( !KU( pmult(~a, 'P') ) @ #vk.22 )
                    case Initiator_1send
                    solve( !KU( pmult(~a.1, 'P') ) @ #vk.24 )
                      case Initiator_1send
                      solve( !KU( pmult(~a.2, 'P') ) @ #vk.26 )
                        case Initiator_1send
                        solve( !KU( pmult(~a.3, 'P') ) @ #vk.27 )
                          case Initiator_1send
                          solve( splitEqs(0) )
                            case split_case_03
                            solve( !KU( pmult(x, x.1) ) @ #vk.23 )
                              case c_pmult
                              solve( !KU( em('P', x.1)^(~IBMasterPrivateKey*~a*x) ) @ #vk.24 )
                                case Initiator_1send_case_09
                                solve( (∀ K #l. (Reveal( K, $A ) @ #l) ⇒ ⊥)  ∥
                                       (∀ K #l. (Reveal( K, $A.1 ) @ #l) ⇒ ⊥) )
                                  case case_1
                                  solve( (last(#i))  ∥
                                         (∀ #j.
                                           (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*x)) ) @ #j)
                                          ⇒
                                           last(#j))  ∥
                                         ((∃ K #l. (Reveal( K, $A ) @ #l) ∧ ¬(last(#l))) ∧
                                          (∃ K #l. (Reveal( K, $A.1 ) @ #l) ∧ ¬(last(#l))))  ∥
                                         (∃ K #l.
                                           (Reveal( K, $A ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #i))  ∥
                                         (∃ K #l.
                                           (Reveal( K, $A.1 ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #i))  ∥
                                         (∃ K #j. (Reveal( 'PKG', K ) @ #j) ∧ ¬(last(#j))) )
                                    case case_1
                                    solve( (∀ #j.
                                             (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*x))
                                              ) @ #j)
                                            ⇒
                                             ⊥)  ∥
                                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                                      case case_2
                                      solve( (∀ #j.
                                               (K( KDF(em('P', <pmult(~a, 'P'), pmult(x, 'P')>)^(
                                                                                                 ~IBMasterPrivateKey*
                                                                                                 ~a.1
                                                                                                ))
                                                ) @ #j)
                                              ⇒
                                               ⊥)  ∥
                                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                                        case case_1
                                        solve( (∀ #j.
                                                 (K( KDF(em('P', <pmult(~a, 'P'), pmult(x, 'P')>)^(
                                                                                                   ~IBMasterPrivateKey*
                                                                                                   ~a.1
                                                                                                  ))
                                                  ) @ #j)
                                                ⇒
                                                 last(#j))  ∥
                                               ((∃ K #l. (Reveal( K, $A.1 ) @ #l) ∧ ¬(last(#l))) ∧
                                                (∃ K #l. (Reveal( K, $A.2 ) @ #l) ∧ ¬(last(#l))))  ∥
                                               (∃ K #l.
                                                 (Reveal( K, $A.1 ) @ #l)
                                                ∧
                                                 (¬(last(#l))) ∧ (#l < #vr.4))  ∥
                                               (∃ K #l.
                                                 (Reveal( K, $A.2 ) @ #l)
                                                ∧
                                                 (¬(last(#l))) ∧ (#l < #vr.4))  ∥
                                               (∃ K #j. (Reveal( 'PKG', K ) @ #j) ∧ ¬(last(#j))) )
                                          case case_1
                                          solve( (∀ #j.
                                                   (K( KDF(em('P',
                                                              <pmult(~a.1, 'P'), pmult(~a, 'P'), 
                                                               pmult(x, 'P')>)^(~IBMasterPrivateKey*
                                                                                ~a.2))
                                                    ) @ #j)
                                                  ⇒
                                                   ⊥)  ∥
                                                 (∃ K X #l. (Reveal( K, X ) @ #l)) )
                                            case case_1
                                            solve( (∀ #j.
                                                     (K( KDF(em('P',
                                                                <pmult(~a.1, 'P'), pmult(~a, 'P'), 
                                                                 pmult(x, 'P')>)^(
                                                                                  ~IBMasterPrivateKey*
                                                                                  ~a.2))
                                                      ) @ #j)
                                                    ⇒
                                                     last(#j))  ∥
                                                   ((∃ K #l.
                                                      (Reveal( K, $A.2 ) @ #l) ∧ ¬(last(#l))) ∧
                                                    (∃ K #l.
                                                      (Reveal( K, $A.3 ) @ #l) ∧ ¬(last(#l))))  ∥
                                                   (∃ K #l.
                                                     (Reveal( K, $A.2 ) @ #l)
                                                    ∧
                                                     (¬(last(#l))) ∧ (#l < #vr.7))  ∥
                                                   (∃ K #l.
                                                     (Reveal( K, $A.3 ) @ #l)
                                                    ∧
                                                     (¬(last(#l))) ∧ (#l < #vr.7))  ∥
                                                   (∃ K #j.
                                                     (Reveal( 'PKG', K ) @ #j) ∧ ¬(last(#j))) )
                                              case case_1
                                              solve( (∀ #j.
                                                       (K( KDF(em('P',
                                                                  <pmult(~a.2, 'P'), 
                                                                   pmult(~a.1, 'P'), 
                                                                   pmult(~a, 'P'), pmult(x, 'P')>)^(
                                                                                                    ~IBMasterPrivateKey*
                                                                                                    ~a.3
                                                                                                   ))
                                                        ) @ #j)
                                                      ⇒
                                                       ⊥)  ∥
                                                     (∃ K X #l. (Reveal( K, X ) @ #l)) )
                                                case case_1
                                                solve( (∀ #j.
                                                         (K( KDF(em('P',
                                                                    <pmult(~a.2, 'P'), 
                                                                     pmult(~a.1, 'P'), 
                                                                     pmult(~a, 'P'), pmult(x, 'P')
                                                                    >)^(~IBMasterPrivateKey*~a.3))
                                                          ) @ #j)
                                                        ⇒
                                                         last(#j))  ∥
                                                       ((∃ K #l.
                                                          (Reveal( K, $A.3 ) @ #l) ∧ ¬(last(#l))) ∧
                                                        (∃ K #l.
                                                          (Reveal( K, $A.4 ) @ #l)
                                                         ∧
                                                          ¬(last(#l))))  ∥
                                                       (∃ K #l.
                                                         (Reveal( K, $A.3 ) @ #l)
                                                        ∧
                                                         (¬(last(#l))) ∧ (#l < #vr.10))  ∥
                                                       (∃ K #l.
                                                         (Reveal( K, $A.4 ) @ #l)
                                                        ∧
                                                         (¬(last(#l))) ∧ (#l < #vr.10))  ∥
                                                       (∃ K #j.
                                                         (Reveal( 'PKG', K ) @ #j) ∧ ¬(last(#j))) )
                                                  case case_1
                                                  solve( Reveal( K, X ) @ #l )
                                                    case Reveal_IB_AUTH_privkey
                                                    solve( !IB_Identity( ~id.1, X, Auth_pk, Auth_sk,
                                                                         Sign_pk, Sign_sk
                                                           ) ▶₀ #l )
                                                      case create_IB_identity
                                                      SOLVED // trace found
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma Strong_Forward_Secrecy_key [use_induction]:
  all-traces
  "∀ A B X Y key #i.
    (Commit( A, B, <X, Y, key> ) @ #i) ⇒
    ((((¬(∃ #j. K( key ) @ #j)) ∨
       (∃ K #l. (Reveal( K, A ) @ #l) ∧ (#l < #i))) ∨
      (∃ K #l. (Reveal( K, B ) @ #l) ∧ (#l < #i))) ∨
     (∃ K #j. Reveal( 'PKG', K ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B X Y key #i.
  (Commit( A, B, <X, Y, key> ) @ #i)
 ∧
  (∃ #j. (K( key ) @ #j)) ∧
  (∀ K #l. (Reveal( K, A ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #j. (Reveal( 'PKG', K ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma alivenessInitiatorNoAuthReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ t2 a2 #j.
         Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_AUTH', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_AUTH', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'AUTH' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ t2 a2 #j.
    (Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Initiator', 'Responder', t> ) @ #i )
  case Initiator_2recv_send
  solve( St_Ini_1( ~id, a, Auth_pk, Auth_sk, GetIBMasterPublicKey(x),
                   Sign_sk, ini_share, ~a.1
         ) ▶₀ #i )
    case Initiator_1send
    solve( !KU( idsign(<pmult(~a, 'P'), resp_share>,
                       IBPriv(b, ~IBMasterPrivateKey.1))
           ) @ #vk.4 )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.9 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.2, 'P'), pmult(~a.1, 'P'), 
                            pmult(~a, 'P'), resp_share>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.15 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.18 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
              case Initiator_1send
              solve( !KU( pmult(~a.1, 'P') ) @ #vk.18 )
                case Initiator_1send
                solve( !KU( pmult(~a.2, 'P') ) @ #vk.19 )
                  case Initiator_1send
                  solve( splitEqs(0) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', resp_share)^(~IBMasterPrivateKey*~a)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', <pmult(~a, 'P'), resp_share>)^(~IBMasterPrivateKey*
                                                                              ~a.1))
                                ) @ #j)
                              ⇒
                               ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>)^(
                                                                                                  ~IBMasterPrivateKey*
                                                                                                  ~a.2
                                                                                                 ))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma alivenessInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ a2 t2 #j.
         Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ a2 t2 #j.
    (Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Initiator', 'Responder', t> ) @ #i )
  case Initiator_2recv_send
  solve( St_Ini_1( ~id, a, Auth_pk, Auth_sk, GetIBMasterPublicKey(x),
                   Sign_sk, ini_share, ~a.1
         ) ▶₀ #i )
    case Initiator_1send
    solve( !KU( idsign(<pmult(~a, 'P'), resp_share>,
                       IBPriv(b, ~IBMasterPrivateKey.1))
           ) @ #vk.4 )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.9 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.2, 'P'), pmult(~a.1, 'P'), 
                            pmult(~a, 'P'), resp_share>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.15 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.18 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
              case Initiator_1send
              solve( !KU( pmult(~a.1, 'P') ) @ #vk.18 )
                case Initiator_1send
                solve( !KU( pmult(~a.2, 'P') ) @ #vk.19 )
                  case Initiator_1send
                  solve( splitEqs(0) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', resp_share)^(~IBMasterPrivateKey*~a)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', <pmult(~a, 'P'), resp_share>)^(~IBMasterPrivateKey*
                                                                              ~a.1))
                                ) @ #j)
                              ⇒
                               ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>)^(
                                                                                                  ~IBMasterPrivateKey*
                                                                                                  ~a.2
                                                                                                 ))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma weakagreementInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma noninjectiveagreemenInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ #j. Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ #j. (Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma injectiveagreementInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ #j.
         ((Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ∧
          (#j < #i)) ∧
         (¬(∃ a2 b2 #i2.
             (Commit( a2, b2, <'Initiator', 'Responder', t> ) @ #i2) ∧
             (¬(#i2 = #i))))) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'Responder', 'Initiator', t> ) @ #j)
   ⇒
    ((¬(#j < #i)) ∨
     (∃ a2 b2 #i2.
       (Commit( a2, b2, <'Initiator', 'Responder', t> ) @ #i2)
      ∧
       ¬(#i2 = #i)))) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma alivenessResponderNoAuthReveal [use_induction]:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_AUTH', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_AUTH', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'AUTH' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ⇒ ⊥)"
*/
induction
  case non_empty_trace
  simplify
  solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
    case Responder_2recv
    solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                      GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
           ) ▶₀ #i )
      case Responder_1recv_send
      solve( !KU( idsign(pmult(~b, 'P'),
                         IBPriv(b.1, ~IBMasterPrivateKey.1))
             ) @ #vk )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.8 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.10 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~b, 'P') ) @ #vk.9 )
              case Responder_1recv_send
              solve( !KU( pmult(~a, 'P') ) @ #vk.11 )
                case Initiator_1send
                solve( splitEqs(1) )
                  case split_case_01
                  solve( (last(#i))  ∥
                         (∃ t2 #j.
                           (Running( $A.1, $A, <'Initiator', 'Responder', t2> ) @ #j)
                          ∧
                           ¬(last(#j)))  ∥
                         (∃ #r. (Reveal( 'ID_AUTH', $A ) @ #r) ∧ ¬(last(#r)))  ∥
                         (∃ #r. (Reveal( 'ID_AUTH', $A.1 ) @ #r) ∧ ¬(last(#r)))  ∥
                         (∃ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ∧ ¬(last(#j))) )
                    case case_1
                    solve( (∀ #j.
                             (K( KDF(em('P', ini_share)^(~IBMasterPrivateKey*~b)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        SOLVED // trace found
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma alivenessResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ a2 t2 #j.
         Running( b, a2, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ a2 t2 #j.
    (Running( b, a2, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
  case Responder_2recv
  solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
         ) ▶₀ #i )
    case Responder_1recv_send
    solve( !KU( idsign(pmult(~b, 'P'),
                       IBPriv(b.1, ~IBMasterPrivateKey.1))
           ) @ #vk )
      case Initiator_2recv_send
      by contradiction /* from formulas */
    next
      case c_idsign
      solve( !KU( IBPriv(b.1, ~IBMasterPrivateKey.1) ) @ #vk.5 )
        case Reveal_IB_SIGN_privkey
        by contradiction /* from formulas */
      next
        case c_IBPriv
        solve( !KU( ~IBMasterPrivateKey.1 ) @ #vk.6 )
          case Reveal_IB_MasterPrivateKey
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma weakagreementResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
  case Responder_2recv
  solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
         ) ▶₀ #i )
    case Responder_1recv_send
    solve( !KU( idsign(pmult(~b, 'P'),
                       IBPriv(b.1, ~IBMasterPrivateKey.1))
           ) @ #vk )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.8 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), 
                            pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.13 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.16 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~b, 'P') ) @ #vk.11 )
              case Responder_1recv_send
              solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
                case Initiator_1send
                solve( !KU( pmult(~a.1, 'P') ) @ #vk.17 )
                  case Initiator_1send
                  solve( splitEqs(1) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', ini_share)^(~IBMasterPrivateKey*~b)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a, 'P'), pmult(~b, 'P')>)^(
                                                                                    ~IBMasterPrivateKey*
                                                                                    ~a.1))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma noninjectiveagreemenResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ #j. Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ #j. (Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma injectiveagreementResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ #j.
         ((Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ∧
          (#j < #i)) ∧
         (¬(∃ a2 b2 #i2.
             (Commit( a2, b2, <'Responder', 'Initiator', t> ) @ #i2) ∧
             (¬(#i2 = #i))))) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'Initiator', 'Responder', t> ) @ #j)
   ⇒
    ((¬(#j < #i)) ∨
     (∃ a2 b2 #i2.
       (Commit( a2, b2, <'Responder', 'Initiator', t> ) @ #i2)
      ∧
       ¬(#i2 = #i)))) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma executability_lemma:
  exists-trace
  "∃ #i.
    ((Full( ) @ #i) ∧
     (∀ #i.1 #j #k.
       (((User( ) @ #i.1) ∧ (User( ) @ #j)) ∧ (User( ) @ #k)) ⇒
       (((#i.1 = #j) ∨ (#j = #k)) ∨ (#i.1 = #k)))) ∧
    (¬(∃ X Y #r. Reveal( X, Y ) @ #r))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Full( ) @ #i)
 ∧
  (∀ #i.1 #j #k.
    (User( ) @ #i.1) ∧ (User( ) @ #j) ∧ (User( ) @ #k)
   ⇒
    ((#i.1 = #j) ∨ (#j = #k) ∨ (#i.1 = #k))) ∧
  (∀ X Y #r. (Reveal( X, Y ) @ #r) ⇒ ⊥)"
*/
simplify
solve( St_Resp_1( ~id, Resp, Auth_pk, Auth_sk,
                  GetIBMasterPublicKey(x), Sign_sk, resp_share, Ini, ini_share, key
       ) ▶₀ #i )
  case Responder_1recv_send
  solve( !KU( idsign(pmult(~b, 'P'),
                     IBPriv(Ini, ~IBMasterPrivateKey.1))
         ) @ #vk )
    case Initiator_2recv_send
    solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                       IBPriv(Resp, ~IBMasterPrivateKey.1))
           ) @ #vk.8 )
      case Responder_1recv_send
      solve( !KU( pmult(~b, 'P') ) @ #vk.8 )
        case Responder_1recv_send
        solve( !KU( pmult(~a, 'P') ) @ #vk.6 )
          case Initiator_1send
          solve( (∀ #j.
                   (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                 (∃ K X #l. (Reveal( K, X ) @ #l)) )
            case case_1
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end