theory BP_IBS_0__BPIBS_0_ORACLE_auth_4005 begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, bilinear-pairing
functions: GetIBMasterPublicKey/1, IBPriv/2, IBPub/2, KDF/1, fst/1,
           idsign/2, idverify/3, pair/2, snd/1, true/0
equations:
    fst(<x.1, x.2>) = x.1,
    idverify(idsign(m, IBPriv(A, IBMasterPrivateKey)), m,
             IBPub(A, GetIBMasterPublicKey(IBMasterPrivateKey)))
  = true,
    snd(<x.1, x.2>) = x.2

rule (modulo E) Reveal_IB_SIGN_privkey:
   [ !IB_Identity( ~id, A, Auth_pk, Auth_sk, Sign_pk, Sign_sk ) ]
  --[ Reveal( 'ID_SIGN', A ) ]->
   [ Out( Sign_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_IB_AUTH_privkey:
   [ !IB_Identity( ~id, A, Auth_pk, Auth_sk, Sign_pk, Sign_sk ) ]
  --[ Reveal( 'ID_AUTH', A ) ]->
   [ Out( Auth_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_IB_MasterPrivateKey:
   [ !IB_MasterPrivateKey( PKG, IBMasterPrivateKey ) ]
  --[ Reveal( 'PKG', PKG ) ]->
   [ Out( IBMasterPrivateKey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_AUTH_PrivateKeyGenerator:
   [ Fr( ~IBMasterPrivateKey ) ]
  --[ Once( 'AUTH' ) ]->
   [
   !IB_MasterPrivateKey( 'AUTH', ~IBMasterPrivateKey ),
   Out( <'AUTH', pmult(~IBMasterPrivateKey, 'P')> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_SIGN_PrivateKeyGenerator:
   [ Fr( ~IBMasterPrivateKey ) ]
  --[ Once( 'SIGN' ) ]->
   [
   !IB_MasterPrivateKey( 'SIGN', ~IBMasterPrivateKey ),
   Out( <'SIGN', GetIBMasterPublicKey(~IBMasterPrivateKey)> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IB_identity:
   [
   !IB_MasterPrivateKey( 'AUTH', Auth_IBMasterPrivateKey ),
   !IB_MasterPrivateKey( 'SIGN', Sign_IBMasterPrivateKey ), Fr( ~id )
   ]
  --[
  CreateId( $A,
            <pmult(Auth_IBMasterPrivateKey, 'P'), 
             IBPriv($A, Auth_IBMasterPrivateKey), 
             GetIBMasterPublicKey(Sign_IBMasterPrivateKey), 
             IBPriv($A, Sign_IBMasterPrivateKey)>
  ),
  User( )
  ]->
   [
   !IB_Identity( ~id, $A, pmult(Auth_IBMasterPrivateKey, 'P'),
                 IBPriv($A, Auth_IBMasterPrivateKey),
                 GetIBMasterPublicKey(Sign_IBMasterPrivateKey),
                 IBPriv($A, Sign_IBMasterPrivateKey)
   )
   ]

  /*
  rule (modulo AC) create_IB_identity:
     [
     !IB_MasterPrivateKey( 'AUTH', Auth_IBMasterPrivateKey ),
     !IB_MasterPrivateKey( 'SIGN', Sign_IBMasterPrivateKey ), Fr( ~id )
     ]
    --[
    CreateId( $A,
              <z, IBPriv($A, Auth_IBMasterPrivateKey), 
               GetIBMasterPublicKey(Sign_IBMasterPrivateKey), 
               IBPriv($A, Sign_IBMasterPrivateKey)>
    ),
    User( )
    ]->
     [
     !IB_Identity( ~id, $A, z, IBPriv($A, Auth_IBMasterPrivateKey),
                   GetIBMasterPublicKey(Sign_IBMasterPrivateKey),
                   IBPriv($A, Sign_IBMasterPrivateKey)
     )
     ]
    variants (modulo AC)
    1. Auth_IBMasterPrivateKey
             = Auth_IBMasterPrivateKey.9
       z     = pmult(Auth_IBMasterPrivateKey.9, 'P')
    
    2. Auth_IBMasterPrivateKey
             = one
       z     = 'P'
  */

rule (modulo E) Initiator_1send:
   [
   Fr( ~a ),
   !IB_Identity( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk )
   ]
  --[ OUT_Ini_1send( <pmult(~a, 'P'), Ini> ), Secret( 'R', Ini, ~a )
  ]->
   [
   Out( <pmult(~a, 'P'), Ini> ),
   St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
             pmult(~a, 'P'), ~a
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Responder_1recv_send:
   [
   !IB_Identity( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk ),
   Fr( ~b ), In( <ini_share, Ini> )
   ]
  --[
  Receive( Resp, <ini_share, Ini> ),
  IN_RESP_1recv( <ini_share, Ini> ),
  OUT_RESP_1recv( <Resp, pmult(~b, 'P'), 
                   idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
  ),
  Honest( Resp ), Secret( 'R', Resp, ~b ),
  Running( Resp, Ini,
           <'Responder', 'Initiator', KDF(em(ini_share, pmult(~b, Auth_pk)))>
  )
  ]->
   [
   Out( <Resp, pmult(~b, 'P'), 
         idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
   ),
   St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
              pmult(~b, 'P'), Ini, ini_share,
              KDF(em(ini_share, pmult(~b, Auth_pk)))
   )
   ]

  /*
  rule (modulo AC) Responder_1recv_send:
     [
     !IB_Identity( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk ),
     Fr( ~b ), In( <ini_share, Ini> )
     ]
    --[
    Receive( Resp, <ini_share, Ini> ),
    IN_RESP_1recv( <ini_share, Ini> ),
    OUT_RESP_1recv( <Resp, pmult(~b, 'P'), 
                     idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
    ),
    Honest( Resp ), Secret( 'R', Resp, ~b ),
    Running( Resp, Ini, <'Responder', 'Initiator', KDF(z)> )
    ]->
     [
     Out( <Resp, pmult(~b, 'P'), 
           idsign(<ini_share, pmult(~b, 'P')>, Sign_sk)>
     ),
     St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
                pmult(~b, 'P'), Ini, ini_share, KDF(z)
     )
     ]
    variants (modulo AC)
      1. ~b    = ~b.21
         Auth_pk
               = Auth_pk.23
         ini_share
               = ini_share.29
         z     = em(Auth_pk.23, ini_share.29)^~b.21
    
      2. ~b    = ~b.112
         Auth_pk
               = Auth_pk.114
         ini_share
               = pmult(x.221, x.222)
         z     = em(Auth_pk.114, x.222)^(~b.112*x.221)
    
      3. ~b    = ~b.112
         Auth_pk
               = pmult(x.221, x.222)
         ini_share
               = ini_share.120
         z     = em(ini_share.120, x.222)^(~b.112*x.221)
    
      4. ~b    = ~b.113
         Auth_pk
               = pmult(inv(~b.113), x.224)
         ini_share
               = ini_share.121
         z     = em(ini_share.121, x.224)
    
      5. ~b    = ~b.114
         Auth_pk
               = pmult(inv((~b.114*x.225)), x.226)
         ini_share
               = ini_share.122
         z     = em(ini_share.122, x.226)^inv(x.225)
    
      6. ~b    = ~b.114
         Auth_pk
               = pmult((x.225*inv(~b.114)), x.226)
         ini_share
               = ini_share.122
         z     = em(ini_share.122, x.226)^x.225
    
      7. ~b    = ~b.115
         Auth_pk
               = pmult((x.226*inv((~b.115*x.227))), x.228)
         ini_share
               = ini_share.123
         z     = em(ini_share.123, x.228)^(x.226*inv(x.227))
    
      8. ~b    = ~b.118
         Auth_pk
               = pmult(x.227, x.228)
         ini_share
               = pmult(inv(x.227), x.234)
         z     = em(x.228, x.234)^~b.118
    
      9. ~b    = ~b.118
         Auth_pk
               = pmult(inv(x.227), x.228)
         ini_share
               = pmult(x.227, x.234)
         z     = em(x.228, x.234)^~b.118
    
     10. ~b    = ~b.119
         Auth_pk
               = Auth_pk.121
         ini_share
               = pmult(inv(~b.119), x.236)
         z     = em(Auth_pk.121, x.236)
    
     11. ~b    = ~b.119
         Auth_pk
               = pmult(x.228, x.229)
         ini_share
               = pmult(x.235, x.236)
         z     = em(x.229, x.236)^(~b.119*x.228*x.235)
    
     12. ~b    = ~b.119
         Auth_pk
               = pmult(x.228, x.229)
         ini_share
               = pmult(inv((x.228*x.235)), x.236)
         z     = em(x.229, x.236)^(~b.119*inv(x.235))
    
     13. ~b    = ~b.119
         Auth_pk
               = pmult(x.228, x.229)
         ini_share
               = pmult((x.235*inv(x.228)), x.236)
         z     = em(x.229, x.236)^(~b.119*x.235)
    
     14. ~b    = ~b.119
         Auth_pk
               = pmult(inv(x.228), x.229)
         ini_share
               = pmult(inv(x.235), x.236)
         z     = em(x.229, x.236)^(~b.119*inv((x.228*x.235)))
    
     15. ~b    = ~b.119
         Auth_pk
               = pmult(inv(x.228), x.229)
         ini_share
               = pmult((x.228*x.235), x.236)
         z     = em(x.229, x.236)^(~b.119*x.235)
    
     16. ~b    = ~b.119
         Auth_pk
               = pmult(inv((x.228*x.229)), x.230)
         ini_share
               = pmult(x.228, x.236)
         z     = em(x.230, x.236)^(~b.119*inv(x.229))
    
     17. ~b    = ~b.119
         Auth_pk
               = pmult((x.228*x.229), x.230)
         ini_share
               = pmult(inv(x.228), x.236)
         z     = em(x.230, x.236)^(~b.119*x.229)
    
     18. ~b    = ~b.119
         Auth_pk
               = pmult((x.228*inv(x.229)), x.230)
         ini_share
               = pmult(x.229, x.236)
         z     = em(x.230, x.236)^(~b.119*x.228)
    
     19. ~b    = ~b.119
         Auth_pk
               = pmult((x.228*inv(x.229)), x.230)
         ini_share
               = pmult((x.229*inv(x.228)), x.236)
         z     = em(x.230, x.236)^~b.119
    
     20. ~b    = ~b.120
         Auth_pk
               = Auth_pk.122
         ini_share
               = pmult(inv((~b.120*x.237)), x.238)
         z     = em(Auth_pk.122, x.238)^inv(x.237)
    
     21. ~b    = ~b.120
         Auth_pk
               = Auth_pk.122
         ini_share
               = pmult((x.237*inv(~b.120)), x.238)
         z     = em(Auth_pk.122, x.238)^x.237
    
     22. ~b    = ~b.120
         Auth_pk
               = pmult(x.229, x.230)
         ini_share
               = pmult((x.236*inv((x.229*x.237))), x.238)
         z     = em(x.230, x.238)^(~b.120*x.236*inv(x.237))
    
     23. ~b    = ~b.120
         Auth_pk
               = pmult(x.231, x.232)
         ini_share
               = pmult(inv(~b.120), x.238)
         z     = em(x.232, x.238)^x.231
    
     24. ~b    = ~b.120
         Auth_pk
               = pmult(x.231, x.232)
         ini_share
               = pmult(inv((~b.120*x.231)), x.238)
         z     = em(x.232, x.238)
    
     25. ~b    = ~b.120
         Auth_pk
               = pmult(inv(~b.120), x.231)
         ini_share
               = pmult(x.237, x.238)
         z     = em(x.231, x.238)^x.237
    
     26. ~b    = ~b.120
         Auth_pk
               = pmult(inv(x.229), x.230)
         ini_share
               = pmult((x.236*inv(x.237)), x.238)
         z     = em(x.230, x.238)^(~b.120*x.236*inv((x.229*x.237)))
    
     27. ~b    = ~b.120
         Auth_pk
               = pmult(inv(x.231), x.232)
         ini_share
               = pmult((x.231*inv(~b.120)), x.238)
         z     = em(x.232, x.238)
    
     28. ~b    = ~b.120
         Auth_pk
               = pmult(inv((~b.120*x.231)), x.232)
         ini_share
               = pmult(x.231, x.238)
         z     = em(x.232, x.238)
    
     29. ~b    = ~b.120
         Auth_pk
               = pmult(inv((x.229*x.230)), x.231)
         ini_share
               = pmult((x.229*x.237), x.238)
         z     = em(x.231, x.238)^(~b.120*x.237*inv(x.230))
    
     30. ~b    = ~b.120
         Auth_pk
               = pmult(inv((x.229*x.230)), x.231)
         ini_share
               = pmult((x.229*inv(x.237)), x.238)
         z     = em(x.231, x.238)^(~b.120*inv((x.230*x.237)))
    
     31. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*x.230), x.231)
         ini_share
               = pmult(inv((x.229*x.237)), x.238)
         z     = em(x.231, x.238)^(~b.120*x.230*inv(x.237))
    
     32. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*x.230), x.231)
         ini_share
               = pmult((x.237*inv(x.229)), x.238)
         z     = em(x.231, x.238)^(~b.120*x.230*x.237)
    
     33. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*x.230*inv(x.231)), x.232)
         ini_share
               = pmult((x.231*inv(x.229)), x.238)
         z     = em(x.232, x.238)^(~b.120*x.230)
    
     34. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv(x.230)), x.231)
         ini_share
               = pmult(inv(x.237), x.238)
         z     = em(x.231, x.238)^(~b.120*x.229*inv((x.230*x.237)))
    
     35. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv(x.230)), x.231)
         ini_share
               = pmult(inv((x.229*x.237)), x.238)
         z     = em(x.231, x.238)^(~b.120*inv((x.230*x.237)))
    
     36. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv(x.230)), x.231)
         ini_share
               = pmult((x.230*x.237), x.238)
         z     = em(x.231, x.238)^(~b.120*x.229*x.237)
    
     37. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv(x.230)), x.231)
         ini_share
               = pmult((x.230*x.237*inv(x.229)), x.238)
         z     = em(x.231, x.238)^(~b.120*x.237)
    
     38. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv(x.230)), x.231)
         ini_share
               = pmult((x.230*inv((x.229*x.237))), x.238)
         z     = em(x.231, x.238)^(~b.120*inv(x.237))
    
     39. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv((x.230*x.231))), x.232)
         ini_share
               = pmult(x.230, x.238)
         z     = em(x.232, x.238)^(~b.120*x.229*inv(x.231))
    
     40. ~b    = ~b.120
         Auth_pk
               = pmult((x.229*inv((x.230*x.231))), x.232)
         ini_share
               = pmult((x.230*inv(x.229)), x.238)
         z     = em(x.232, x.238)^(~b.120*inv(x.231))
    
     41. ~b    = ~b.120
         Auth_pk
               = pmult((x.231*inv(~b.120)), x.232)
         ini_share
               = pmult(inv(x.231), x.238)
         z     = em(x.232, x.238)
    
     42. ~b    = ~b.121
         Auth_pk
               = Auth_pk.123
         ini_share
               = pmult((x.238*inv((~b.121*x.239))), x.240)
         z     = em(Auth_pk.123, x.240)^(x.238*inv(x.239))
    
     43. ~b    = ~b.121
         Auth_pk
               = pmult(x.232, x.233)
         ini_share
               = pmult(inv((~b.121*x.232*x.239)), x.240)
         z     = em(x.233, x.240)^inv(x.239)
    
     44. ~b    = ~b.121
         Auth_pk
               = pmult(x.232, x.233)
         ini_share
               = pmult(inv((~b.121*x.239)), x.240)
         z     = em(x.233, x.240)^(x.232*inv(x.239))
    
     45. ~b    = ~b.121
         Auth_pk
               = pmult(x.232, x.233)
         ini_share
               = pmult((x.239*inv(~b.121)), x.240)
         z     = em(x.233, x.240)^(x.232*x.239)
    
     46. ~b    = ~b.121
         Auth_pk
               = pmult(x.232, x.233)
         ini_share
               = pmult((x.239*inv((~b.121*x.232))), x.240)
         z     = em(x.233, x.240)^x.239
    
     47. ~b    = ~b.121
         Auth_pk
               = pmult(inv(x.232), x.233)
         ini_share
               = pmult(inv((~b.121*x.239)), x.240)
         z     = em(x.233, x.240)^inv((x.232*x.239))
    
     48. ~b    = ~b.121
         Auth_pk
               = pmult(inv(x.232), x.233)
         ini_share
               = pmult((x.232*x.239*inv(~b.121)), x.240)
         z     = em(x.233, x.240)^x.239
    
     49. ~b    = ~b.121
         Auth_pk
               = pmult(inv(x.232), x.233)
         ini_share
               = pmult((x.232*inv((~b.121*x.239))), x.240)
         z     = em(x.233, x.240)^inv(x.239)
    
     50. ~b    = ~b.121
         Auth_pk
               = pmult(inv((~b.121*x.232)), x.233)
         ini_share
               = pmult(x.239, x.240)
         z     = em(x.233, x.240)^(x.239*inv(x.232))
    
     51. ~b    = ~b.121
         Auth_pk
               = pmult(inv((~b.121*x.232)), x.233)
         ini_share
               = pmult(inv(x.239), x.240)
         z     = em(x.233, x.240)^inv((x.232*x.239))
    
     52. ~b    = ~b.121
         Auth_pk
               = pmult(inv((~b.121*x.232)), x.233)
         ini_share
               = pmult((x.232*x.239), x.240)
         z     = em(x.233, x.240)^x.239
    
     53. ~b    = ~b.121
         Auth_pk
               = pmult(inv((~b.121*x.232*x.233)), x.234)
         ini_share
               = pmult(x.232, x.240)
         z     = em(x.234, x.240)^inv(x.233)
    
     54. ~b    = ~b.121
         Auth_pk
               = pmult(inv((x.230*x.231)), x.232)
         ini_share
               = pmult((x.230*x.238*inv(x.239)), x.240)
         z     = em(x.232, x.240)^(~b.121*x.238*inv((x.231*x.239)))
    
     55. ~b    = ~b.121
         Auth_pk
               = pmult(inv((x.232*x.233)), x.234)
         ini_share
               = pmult((x.232*inv(~b.121)), x.240)
         z     = em(x.234, x.240)^inv(x.233)
    
     56. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*x.231), x.232)
         ini_share
               = pmult((x.238*inv((x.230*x.239))), x.240)
         z     = em(x.232, x.240)^(~b.121*x.231*x.238*inv(x.239))
    
     57. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*x.231*inv(x.232)), x.233)
         ini_share
               = pmult(inv((x.230*x.239)), x.240)
         z     = em(x.233, x.240)^(~b.121*x.231*inv((x.232*x.239)))
    
     58. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*x.231*inv(x.232)), x.233)
         ini_share
               = pmult((x.232*x.239*inv(x.230)), x.240)
         z     = em(x.233, x.240)^(~b.121*x.231*x.239)
    
     59. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*x.231*inv(x.232)), x.233)
         ini_share
               = pmult((x.232*inv((x.230*x.239))), x.240)
         z     = em(x.233, x.240)^(~b.121*x.231*inv(x.239))
    
     60. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*x.231*inv((x.232*x.233))), x.234)
         ini_share
               = pmult((x.232*inv(x.230)), x.240)
         z     = em(x.234, x.240)^(~b.121*x.231*inv(x.233))
    
     61. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv(x.231)), x.232)
         ini_share
               = pmult((x.231*x.238*inv((x.230*x.239))), x.240)
         z     = em(x.232, x.240)^(~b.121*x.238*inv(x.239))
    
     62. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv(x.231)), x.232)
         ini_share
               = pmult((x.238*inv(x.239)), x.240)
         z     = em(x.232, x.240)^(~b.121*x.230*x.238*inv((x.231*x.239)))
    
     63. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv(x.231)), x.232)
         ini_share
               = pmult((x.238*inv((x.230*x.239))), x.240)
         z     = em(x.232, x.240)^(~b.121*x.238*inv((x.231*x.239)))
    
     64. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv((x.231*x.232))), x.233)
         ini_share
               = pmult((x.231*x.239), x.240)
         z     = em(x.233, x.240)^(~b.121*x.230*x.239*inv(x.232))
    
     65. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv((x.231*x.232))), x.233)
         ini_share
               = pmult((x.231*x.239*inv(x.230)), x.240)
         z     = em(x.233, x.240)^(~b.121*x.239*inv(x.232))
    
     66. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv((x.231*x.232))), x.233)
         ini_share
               = pmult((x.231*inv(x.239)), x.240)
         z     = em(x.233, x.240)^(~b.121*x.230*inv((x.232*x.239)))
    
     67. ~b    = ~b.121
         Auth_pk
               = pmult((x.230*inv((x.231*x.232))), x.233)
         ini_share
               = pmult((x.231*inv((x.230*x.239))), x.240)
         z     = em(x.233, x.240)^(~b.121*inv((x.232*x.239)))
    
     68. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*x.233), x.234)
         ini_share
               = pmult(inv((~b.121*x.232)), x.240)
         z     = em(x.234, x.240)^x.233
    
     69. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*x.233*inv(~b.121)), x.234)
         ini_share
               = pmult(inv(x.232), x.240)
         z     = em(x.234, x.240)^x.233
    
     70. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv(~b.121)), x.233)
         ini_share
               = pmult(x.239, x.240)
         z     = em(x.233, x.240)^(x.232*x.239)
    
     71. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv(~b.121)), x.233)
         ini_share
               = pmult(inv((x.232*x.239)), x.240)
         z     = em(x.233, x.240)^inv(x.239)
    
     72. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv(~b.121)), x.233)
         ini_share
               = pmult((x.239*inv(x.232)), x.240)
         z     = em(x.233, x.240)^x.239
    
     73. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv(x.233)), x.234)
         ini_share
               = pmult((x.233*inv(~b.121)), x.240)
         z     = em(x.234, x.240)^x.232
    
     74. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv(x.233)), x.234)
         ini_share
               = pmult((x.233*inv((~b.121*x.232))), x.240)
         z     = em(x.234, x.240)
    
     75. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv((~b.121*x.233))), x.234)
         ini_share
               = pmult(x.233, x.240)
         z     = em(x.234, x.240)^x.232
    
     76. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv((~b.121*x.233))), x.234)
         ini_share
               = pmult(inv(x.232), x.240)
         z     = em(x.234, x.240)^inv(x.233)
    
     77. ~b    = ~b.121
         Auth_pk
               = pmult((x.232*inv((~b.121*x.233))), x.234)
         ini_share
               = pmult((x.233*inv(x.232)), x.240)
         z     = em(x.234, x.240)
    
     78. ~b    = ~b.122
         Auth_pk
               = pmult(x.233, x.234)
         ini_share
               = pmult((x.240*inv((~b.122*x.233*x.241))), x.242)
         z     = em(x.234, x.242)^(x.240*inv(x.241))
    
     79. ~b    = ~b.122
         Auth_pk
               = pmult(x.233, x.234)
         ini_share
               = pmult((x.240*inv((~b.122*x.241))), x.242)
         z     = em(x.234, x.242)^(x.233*x.240*inv(x.241))
    
     80. ~b    = ~b.122
         Auth_pk
               = pmult(inv(x.233), x.234)
         ini_share
               = pmult((x.233*x.240*inv((~b.122*x.241))), x.242)
         z     = em(x.234, x.242)^(x.240*inv(x.241))
    
     81. ~b    = ~b.122
         Auth_pk
               = pmult(inv(x.233), x.234)
         ini_share
               = pmult((x.240*inv((~b.122*x.241))), x.242)
         z     = em(x.234, x.242)^(x.240*inv((x.233*x.241)))
    
     82. ~b    = ~b.122
         Auth_pk
               = pmult(inv((~b.122*x.233)), x.234)
         ini_share
               = pmult((x.240*inv(x.241)), x.242)
         z     = em(x.234, x.242)^(x.240*inv((x.233*x.241)))
    
     83. ~b    = ~b.122
         Auth_pk
               = pmult(inv((~b.122*x.233*x.234)), x.235)
         ini_share
               = pmult((x.233*x.241), x.242)
         z     = em(x.235, x.242)^(x.241*inv(x.234))
    
     84. ~b    = ~b.122
         Auth_pk
               = pmult(inv((~b.122*x.233*x.234)), x.235)
         ini_share
               = pmult((x.233*inv(x.241)), x.242)
         z     = em(x.235, x.242)^inv((x.234*x.241))
    
     85. ~b    = ~b.122
         Auth_pk
               = pmult(inv((x.233*x.234)), x.235)
         ini_share
               = pmult((x.233*x.241*inv(~b.122)), x.242)
         z     = em(x.235, x.242)^(x.241*inv(x.234))
    
     86. ~b    = ~b.122
         Auth_pk
               = pmult(inv((x.233*x.234)), x.235)
         ini_share
               = pmult((x.233*inv((~b.122*x.241))), x.242)
         z     = em(x.235, x.242)^inv((x.234*x.241))
    
     87. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*x.232*inv(x.233)), x.234)
         ini_share
               = pmult((x.233*x.240*inv((x.231*x.241))), x.242)
         z     = em(x.234, x.242)^(~b.122*x.232*x.240*inv(x.241))
    
     88. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*x.232*inv(x.233)), x.234)
         ini_share
               = pmult((x.240*inv((x.231*x.241))), x.242)
         z     = em(x.234, x.242)^(~b.122*x.232*x.240*inv((x.233*x.241)))
    
     89. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*x.232*inv((x.233*x.234))), x.235)
         ini_share
               = pmult((x.233*x.241*inv(x.231)), x.242)
         z     = em(x.235, x.242)^(~b.122*x.232*x.241*inv(x.234))
    
     90. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*x.232*inv((x.233*x.234))), x.235)
         ini_share
               = pmult((x.233*inv((x.231*x.241))), x.242)
         z     = em(x.235, x.242)^(~b.122*x.232*inv((x.234*x.241)))
    
     91. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*inv((x.232*x.233))), x.234)
         ini_share
               = pmult((x.232*x.240*inv(x.241)), x.242)
         z     = em(x.234, x.242)^(~b.122*x.231*x.240*inv((x.233*x.241)))
    
     92. ~b    = ~b.122
         Auth_pk
               = pmult((x.231*inv((x.232*x.233))), x.234)
         ini_share
               = pmult((x.232*x.240*inv((x.231*x.241))), x.242)
         z     = em(x.234, x.242)^(~b.122*x.240*inv((x.233*x.241)))
    
     93. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234), x.235)
         ini_share
               = pmult(inv((~b.122*x.233*x.241)), x.242)
         z     = em(x.235, x.242)^(x.234*inv(x.241))
    
     94. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234), x.235)
         ini_share
               = pmult((x.241*inv((~b.122*x.233))), x.242)
         z     = em(x.235, x.242)^(x.234*x.241)
    
     95. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234*inv(~b.122)), x.235)
         ini_share
               = pmult(inv((x.233*x.241)), x.242)
         z     = em(x.235, x.242)^(x.234*inv(x.241))
    
     96. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234*inv(~b.122)), x.235)
         ini_share
               = pmult((x.241*inv(x.233)), x.242)
         z     = em(x.235, x.242)^(x.234*x.241)
    
     97. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234*inv(x.235)), x.236)
         ini_share
               = pmult((x.235*inv((~b.122*x.233))), x.242)
         z     = em(x.236, x.242)^x.234
    
     98. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234*inv((~b.122*x.235))), x.236)
         ini_share
               = pmult(inv(x.233), x.242)
         z     = em(x.236, x.242)^(x.234*inv(x.235))
    
     99. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*x.234*inv((~b.122*x.235))), x.236)
         ini_share
               = pmult((x.235*inv(x.233)), x.242)
         z     = em(x.236, x.242)^x.234
    
    100. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(~b.122)), x.234)
         ini_share
               = pmult((x.240*inv((x.233*x.241))), x.242)
         z     = em(x.234, x.242)^(x.240*inv(x.241))
    
    101. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult(inv((~b.122*x.233*x.241)), x.242)
         z     = em(x.235, x.242)^inv((x.234*x.241))
    
    102. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult(inv((~b.122*x.241)), x.242)
         z     = em(x.235, x.242)^(x.233*inv((x.234*x.241)))
    
    103. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult((x.234*x.241*inv(~b.122)), x.242)
         z     = em(x.235, x.242)^(x.233*x.241)
    
    104. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult((x.234*x.241*inv((~b.122*x.233))), x.242)
         z     = em(x.235, x.242)^x.241
    
    105. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult((x.234*inv((~b.122*x.233*x.241))), x.242)
         z     = em(x.235, x.242)^inv(x.241)
    
    106. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv(x.234)), x.235)
         ini_share
               = pmult((x.234*inv((~b.122*x.241))), x.242)
         z     = em(x.235, x.242)^(x.233*inv(x.241))
    
    107. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult(x.241, x.242)
         z     = em(x.235, x.242)^(x.233*x.241*inv(x.234))
    
    108. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult(inv(x.241), x.242)
         z     = em(x.235, x.242)^(x.233*inv((x.234*x.241)))
    
    109. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult(inv((x.233*x.241)), x.242)
         z     = em(x.235, x.242)^inv((x.234*x.241))
    
    110. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult((x.234*x.241), x.242)
         z     = em(x.235, x.242)^(x.233*x.241)
    
    111. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult((x.234*x.241*inv(x.233)), x.242)
         z     = em(x.235, x.242)^x.241
    
    112. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult((x.234*inv((x.233*x.241))), x.242)
         z     = em(x.235, x.242)^inv(x.241)
    
    113. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234))), x.235)
         ini_share
               = pmult((x.241*inv(x.233)), x.242)
         z     = em(x.235, x.242)^(x.241*inv(x.234))
    
    114. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234*x.235))), x.236)
         ini_share
               = pmult(x.234, x.242)
         z     = em(x.236, x.242)^(x.233*inv(x.235))
    
    115. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((~b.122*x.234*x.235))), x.236)
         ini_share
               = pmult((x.234*inv(x.233)), x.242)
         z     = em(x.236, x.242)^inv(x.235)
    
    116. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((x.234*x.235))), x.236)
         ini_share
               = pmult((x.234*inv(~b.122)), x.242)
         z     = em(x.236, x.242)^(x.233*inv(x.235))
    
    117. ~b    = ~b.122
         Auth_pk
               = pmult((x.233*inv((x.234*x.235))), x.236)
         ini_share
               = pmult((x.234*inv((~b.122*x.233))), x.242)
         z     = em(x.236, x.242)^inv(x.235)
    
    118. ~b    = ~b.123
         Auth_pk
               = pmult(inv((~b.123*x.234*x.235)), x.236)
         ini_share
               = pmult((x.234*x.242*inv(x.243)), x.244)
         z     = em(x.236, x.244)^(x.242*inv((x.235*x.243)))
    
    119. ~b    = ~b.123
         Auth_pk
               = pmult(inv((x.234*x.235)), x.236)
         ini_share
               = pmult((x.234*x.242*inv((~b.123*x.243))), x.244)
         z     = em(x.236, x.244)^(x.242*inv((x.235*x.243)))
    
    120. ~b    = ~b.123
         Auth_pk
               = pmult((x.232*x.233*inv((x.234*x.235))), x.236)
         ini_share
               = pmult((x.234*x.242*inv((x.232*x.243))), x.244)
         z     = em(x.236, x.244)^(~b.123*x.233*x.242*inv((x.235*x.243)))
    
    121. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235), x.236)
         ini_share
               = pmult((x.242*inv((~b.123*x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.235*x.242*inv(x.243))
    
    122. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv(~b.123)), x.236)
         ini_share
               = pmult((x.242*inv((x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.235*x.242*inv(x.243))
    
    123. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv(x.236)), x.237)
         ini_share
               = pmult(inv((~b.123*x.234*x.243)), x.244)
         z     = em(x.237, x.244)^(x.235*inv((x.236*x.243)))
    
    124. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv(x.236)), x.237)
         ini_share
               = pmult((x.236*x.243*inv((~b.123*x.234))), x.244)
         z     = em(x.237, x.244)^(x.235*x.243)
    
    125. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv(x.236)), x.237)
         ini_share
               = pmult((x.236*inv((~b.123*x.234*x.243))), x.244)
         z     = em(x.237, x.244)^(x.235*inv(x.243))
    
    126. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((~b.123*x.236))), x.237)
         ini_share
               = pmult(inv((x.234*x.243)), x.244)
         z     = em(x.237, x.244)^(x.235*inv((x.236*x.243)))
    
    127. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((~b.123*x.236))), x.237)
         ini_share
               = pmult((x.236*x.243*inv(x.234)), x.244)
         z     = em(x.237, x.244)^(x.235*x.243)
    
    128. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((~b.123*x.236))), x.237)
         ini_share
               = pmult((x.236*inv((x.234*x.243))), x.244)
         z     = em(x.237, x.244)^(x.235*inv(x.243))
    
    129. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((~b.123*x.236))), x.237)
         ini_share
               = pmult((x.243*inv(x.234)), x.244)
         z     = em(x.237, x.244)^(x.235*x.243*inv(x.236))
    
    130. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((~b.123*x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*inv(x.234)), x.244)
         z     = em(x.238, x.244)^(x.235*inv(x.237))
    
    131. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*x.235*inv((x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*inv((~b.123*x.234))), x.244)
         z     = em(x.238, x.244)^(x.235*inv(x.237))
    
    132. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv(x.235)), x.236)
         ini_share
               = pmult((x.235*x.242*inv((~b.123*x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.242*inv(x.243))
    
    133. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv(x.235)), x.236)
         ini_share
               = pmult((x.235*x.242*inv((~b.123*x.243))), x.244)
         z     = em(x.236, x.244)^(x.234*x.242*inv(x.243))
    
    134. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv(x.235)), x.236)
         ini_share
               = pmult((x.242*inv((~b.123*x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.242*inv((x.235*x.243)))
    
    135. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv(x.235)), x.236)
         ini_share
               = pmult((x.242*inv((~b.123*x.243))), x.244)
         z     = em(x.236, x.244)^(x.234*x.242*inv((x.235*x.243)))
    
    136. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235))), x.236)
         ini_share
               = pmult((x.235*x.242*inv((x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.242*inv(x.243))
    
    137. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235))), x.236)
         ini_share
               = pmult((x.242*inv(x.243)), x.244)
         z     = em(x.236, x.244)^(x.234*x.242*inv((x.235*x.243)))
    
    138. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235))), x.236)
         ini_share
               = pmult((x.242*inv((x.234*x.243))), x.244)
         z     = em(x.236, x.244)^(x.242*inv((x.235*x.243)))
    
    139. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*x.243), x.244)
         z     = em(x.237, x.244)^(x.234*x.243*inv(x.236))
    
    140. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*x.243*inv(x.234)), x.244)
         z     = em(x.237, x.244)^(x.243*inv(x.236))
    
    141. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*inv(x.243)), x.244)
         z     = em(x.237, x.244)^(x.234*inv((x.236*x.243)))
    
    142. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((~b.123*x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*inv((x.234*x.243))), x.244)
         z     = em(x.237, x.244)^inv((x.236*x.243))
    
    143. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*x.243*inv(~b.123)), x.244)
         z     = em(x.237, x.244)^(x.234*x.243*inv(x.236))
    
    144. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*x.243*inv((~b.123*x.234))), x.244)
         z     = em(x.237, x.244)^(x.243*inv(x.236))
    
    145. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*inv((~b.123*x.234*x.243))), x.244)
         z     = em(x.237, x.244)^inv((x.236*x.243))
    
    146. ~b    = ~b.123
         Auth_pk
               = pmult((x.234*inv((x.235*x.236))), x.237)
         ini_share
               = pmult((x.235*inv((~b.123*x.243))), x.244)
         z     = em(x.237, x.244)^(x.234*inv((x.236*x.243)))
    
    147. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv(x.237)), x.238)
         ini_share
               = pmult((x.237*x.244*inv((~b.124*x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.236*x.244*inv(x.245))
    
    148. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv(x.237)), x.238)
         ini_share
               = pmult((x.244*inv((~b.124*x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.236*x.244*inv((x.237*x.245)))
    
    149. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((~b.124*x.237))), x.238)
         ini_share
               = pmult((x.237*x.244*inv((x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.236*x.244*inv(x.245))
    
    150. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((~b.124*x.237))), x.238)
         ini_share
               = pmult((x.244*inv((x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.236*x.244*inv((x.237*x.245)))
    
    151. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((~b.124*x.237*x.238))), x.239)
         ini_share
               = pmult((x.237*x.245*inv(x.235)), x.246)
         z     = em(x.239, x.246)^(x.236*x.245*inv(x.238))
    
    152. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((~b.124*x.237*x.238))), x.239)
         ini_share
               = pmult((x.237*inv((x.235*x.245))), x.246)
         z     = em(x.239, x.246)^(x.236*inv((x.238*x.245)))
    
    153. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((x.237*x.238))), x.239)
         ini_share
               = pmult((x.237*x.245*inv((~b.124*x.235))), x.246)
         z     = em(x.239, x.246)^(x.236*x.245*inv(x.238))
    
    154. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*x.236*inv((x.237*x.238))), x.239)
         ini_share
               = pmult((x.237*inv((~b.124*x.235*x.245))), x.246)
         z     = em(x.239, x.246)^(x.236*inv((x.238*x.245)))
    
    155. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*inv((~b.124*x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*x.244*inv(x.245)), x.246)
         z     = em(x.238, x.246)^(x.235*x.244*inv((x.237*x.245)))
    
    156. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*inv((~b.124*x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*x.244*inv((x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.244*inv((x.237*x.245)))
    
    157. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*inv((x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*x.244*inv((~b.124*x.235*x.245))), x.246)
         z     = em(x.238, x.246)^(x.244*inv((x.237*x.245)))
    
    158. ~b    = ~b.124
         Auth_pk
               = pmult((x.235*inv((x.236*x.237))), x.238)
         ini_share
               = pmult((x.236*x.244*inv((~b.124*x.245))), x.246)
         z     = em(x.238, x.246)^(x.235*x.244*inv((x.237*x.245)))
    
    159. ~b    = ~b.125
         Auth_pk
               = pmult((x.236*x.237*inv((~b.125*x.238*x.239))), x.240)
         ini_share
               = pmult((x.238*x.246*inv((x.236*x.247))), x.248)
         z     = em(x.240, x.248)^(x.237*x.246*inv((x.239*x.247)))
    
    160. ~b    = ~b.125
         Auth_pk
               = pmult((x.236*x.237*inv((x.238*x.239))), x.240)
         ini_share
               = pmult((x.238*x.246*inv((~b.125*x.236*x.247))), x.248)
         z     = em(x.240, x.248)^(x.237*x.246*inv((x.239*x.247)))
  */

rule (modulo E) Initiator_2recv_send:
   [
   St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk, ini_share,
             ~a
   ),
   In( <Resp, resp_share, signature> )
   ]
  --[
  Eq( true,
      idverify(signature, <ini_share, resp_share>, IBPub(Resp, Sign_pk))
  ),
  IN_INI_1recv( <Resp, resp_share, signature> ),
  OUT_INI_2send( idsign(resp_share, Sign_sk) ),
  Secret( 'KEY', Ini, KDF(em(resp_share, pmult(~a, Auth_pk))) ),
  Honest( Ini ),
  Running( Ini, Resp,
           <'Initiator', 'Responder', KDF(em(resp_share, pmult(~a, Auth_pk)))>
  ),
  Commit( Ini, Resp,
          <'Initiator', 'Responder', KDF(em(resp_share, pmult(~a, Auth_pk)))>
  )
  ]->
   [ Out( idsign(resp_share, Sign_sk) ) ]

  /*
  rule (modulo AC) Initiator_2recv_send:
     [
     St_Ini_1( ~id, Ini, Auth_pk, Auth_sk, Sign_pk, Sign_sk, ini_share,
               ~a
     ),
     In( <Resp, resp_share, signature> )
     ]
    --[
    Eq( true, z ), IN_INI_1recv( <Resp, resp_share, signature> ),
    OUT_INI_2send( idsign(resp_share, Sign_sk) ),
    Secret( 'KEY', Ini, KDF(z.1) ), Honest( Ini ),
    Running( Ini, Resp, <'Initiator', 'Responder', KDF(z.1)> ),
    Commit( Ini, Resp, <'Initiator', 'Responder', KDF(z.1)> )
    ]->
     [ Out( idsign(resp_share, Sign_sk) ) ]
    variants (modulo AC)
      1. ~a    = ~a.26
         Auth_pk
               = Auth_pk.28
         Resp  = Resp.31
         Sign_pk
               = Sign_pk.32
         ini_share
               = ini_share.34
         resp_share
               = resp_share.35
         signature
               = signature.36
         z     = idverify(signature.36, <ini_share.34, resp_share.35>,
                          IBPub(Resp.31, Sign_pk.32))
         z.1   = em(Auth_pk.28, resp_share.35)^~a.26
    
      2. ~a    = ~a.49
         Auth_pk
               = Auth_pk.51
         Resp  = Resp.54
         Sign_pk
               = Sign_pk.55
         ini_share
               = ini_share.57
         resp_share
               = pmult(x.95, x.96)
         signature
               = signature.59
         z     = idverify(signature.59, <ini_share.57, pmult(x.95, x.96)>,
                          IBPub(Resp.54, Sign_pk.55))
         z.1   = em(Auth_pk.51, x.96)^(~a.49*x.95)
    
      3. ~a    = ~a.49
         Auth_pk
               = Auth_pk.51
         Resp  = Resp.54
         Sign_pk
               = GetIBMasterPublicKey(x.96)
         ini_share
               = ini_share.57
         resp_share
               = resp_share.58
         signature
               = idsign(<ini_share.57, resp_share.58>, IBPriv(Resp.54, x.96))
         z     = true
         z.1   = em(Auth_pk.51, resp_share.58)^~a.49
    
      4. ~a    = ~a.49
         Auth_pk
               = pmult(x.95, x.96)
         Resp  = Resp.54
         Sign_pk
               = Sign_pk.55
         ini_share
               = ini_share.57
         resp_share
               = resp_share.58
         signature
               = signature.59
         z     = idverify(signature.59, <ini_share.57, resp_share.58>,
                          IBPub(Resp.54, Sign_pk.55))
         z.1   = em(resp_share.58, x.96)^(~a.49*x.95)
    
      5. ~a    = ~a.50
         Auth_pk
               = pmult(inv(~a.50), x.98)
         Resp  = Resp.55
         Sign_pk
               = Sign_pk.56
         ini_share
               = ini_share.58
         resp_share
               = resp_share.59
         signature
               = signature.60
         z     = idverify(signature.60, <ini_share.58, resp_share.59>,
                          IBPub(Resp.55, Sign_pk.56))
         z.1   = em(resp_share.59, x.98)
    
      6. ~a    = ~a.51
         Auth_pk
               = pmult(inv((~a.51*x.99)), x.100)
         Resp  = Resp.56
         Sign_pk
               = Sign_pk.57
         ini_share
               = ini_share.59
         resp_share
               = resp_share.60
         signature
               = signature.61
         z     = idverify(signature.61, <ini_share.59, resp_share.60>,
                          IBPub(Resp.56, Sign_pk.57))
         z.1   = em(resp_share.60, x.100)^inv(x.99)
    
      7. ~a    = ~a.51
         Auth_pk
               = pmult((x.99*inv(~a.51)), x.100)
         Resp  = Resp.56
         Sign_pk
               = Sign_pk.57
         ini_share
               = ini_share.59
         resp_share
               = resp_share.60
         signature
               = signature.61
         z     = idverify(signature.61, <ini_share.59, resp_share.60>,
                          IBPub(Resp.56, Sign_pk.57))
         z.1   = em(resp_share.60, x.100)^x.99
    
      8. ~a    = ~a.52
         Auth_pk
               = pmult((x.100*inv((~a.52*x.101))), x.102)
         Resp  = Resp.57
         Sign_pk
               = Sign_pk.58
         ini_share
               = ini_share.60
         resp_share
               = resp_share.61
         signature
               = signature.62
         z     = idverify(signature.62, <ini_share.60, resp_share.61>,
                          IBPub(Resp.57, Sign_pk.58))
         z.1   = em(resp_share.61, x.102)^(x.100*inv(x.101))
    
      9. ~a    = ~a.53
         Auth_pk
               = Auth_pk.55
         Resp  = Resp.58
         Sign_pk
               = GetIBMasterPublicKey(x.100)
         ini_share
               = ini_share.61
         resp_share
               = pmult(x.103, x.104)
         signature
               = idsign(<ini_share.61, pmult(x.103, x.104)>,
                        IBPriv(Resp.58, x.100))
         z     = true
         z.1   = em(Auth_pk.55, x.104)^(~a.53*x.103)
    
     10. ~a    = ~a.53
         Auth_pk
               = pmult(x.99, x.100)
         Resp  = Resp.58
         Sign_pk
               = GetIBMasterPublicKey(x.104)
         ini_share
               = ini_share.61
         resp_share
               = resp_share.62
         signature
               = idsign(<ini_share.61, resp_share.62>, IBPriv(Resp.58, x.104))
         z     = true
         z.1   = em(resp_share.62, x.100)^(~a.53*x.99)
    
     11. ~a    = ~a.54
         Auth_pk
               = pmult(inv(~a.54), x.102)
         Resp  = Resp.59
         Sign_pk
               = GetIBMasterPublicKey(x.106)
         ini_share
               = ini_share.62
         resp_share
               = resp_share.63
         signature
               = idsign(<ini_share.62, resp_share.63>, IBPriv(Resp.59, x.106))
         z     = true
         z.1   = em(resp_share.63, x.102)
    
     12. ~a    = ~a.55
         Auth_pk
               = pmult(inv((~a.55*x.103)), x.104)
         Resp  = Resp.60
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.63
         resp_share
               = resp_share.64
         signature
               = idsign(<ini_share.63, resp_share.64>, IBPriv(Resp.60, x.108))
         z     = true
         z.1   = em(resp_share.64, x.104)^inv(x.103)
    
     13. ~a    = ~a.55
         Auth_pk
               = pmult((x.103*inv(~a.55)), x.104)
         Resp  = Resp.60
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.63
         resp_share
               = resp_share.64
         signature
               = idsign(<ini_share.63, resp_share.64>, IBPriv(Resp.60, x.108))
         z     = true
         z.1   = em(resp_share.64, x.104)^x.103
    
     14. ~a    = ~a.56
         Auth_pk
               = pmult(x.102, x.103)
         Resp  = Resp.61
         Sign_pk
               = Sign_pk.62
         ini_share
               = ini_share.64
         resp_share
               = pmult(inv(x.102), x.110)
         signature
               = signature.66
         z     = idverify(signature.66,
                          <ini_share.64, pmult(inv(x.102), x.110)>,
                          IBPub(Resp.61, Sign_pk.62))
         z.1   = em(x.103, x.110)^~a.56
    
     15. ~a    = ~a.56
         Auth_pk
               = pmult(x.102, x.103)
         Resp  = Resp.61
         Sign_pk
               = GetIBMasterPublicKey(x.107)
         ini_share
               = ini_share.64
         resp_share
               = pmult(inv(x.102), x.110)
         signature
               = idsign(<ini_share.64, pmult(inv(x.102), x.110)>,
                        IBPriv(Resp.61, x.107))
         z     = true
         z.1   = em(x.103, x.110)^~a.56
    
     16. ~a    = ~a.56
         Auth_pk
               = pmult(inv(x.102), x.103)
         Resp  = Resp.61
         Sign_pk
               = Sign_pk.62
         ini_share
               = ini_share.64
         resp_share
               = pmult(x.102, x.110)
         signature
               = signature.66
         z     = idverify(signature.66, <ini_share.64, pmult(x.102, x.110)>,
                          IBPub(Resp.61, Sign_pk.62))
         z.1   = em(x.103, x.110)^~a.56
    
     17. ~a    = ~a.56
         Auth_pk
               = pmult(inv(x.102), x.103)
         Resp  = Resp.61
         Sign_pk
               = GetIBMasterPublicKey(x.107)
         ini_share
               = ini_share.64
         resp_share
               = pmult(x.102, x.110)
         signature
               = idsign(<ini_share.64, pmult(x.102, x.110)>,
                        IBPriv(Resp.61, x.107))
         z     = true
         z.1   = em(x.103, x.110)^~a.56
    
     18. ~a    = ~a.56
         Auth_pk
               = pmult((x.104*inv((~a.56*x.105))), x.106)
         Resp  = Resp.61
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.64
         resp_share
               = resp_share.65
         signature
               = idsign(<ini_share.64, resp_share.65>, IBPriv(Resp.61, x.110))
         z     = true
         z.1   = em(resp_share.65, x.106)^(x.104*inv(x.105))
    
     19. ~a    = ~a.57
         Auth_pk
               = Auth_pk.59
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(~a.57), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult(inv(~a.57), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(Auth_pk.59, x.112)
    
     20. ~a    = ~a.57
         Auth_pk
               = Auth_pk.59
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(~a.57), x.112)
         signature
               = idsign(<ini_share.65, pmult(inv(~a.57), x.112)>,
                        IBPriv(Resp.62, x.109))
         z     = true
         z.1   = em(Auth_pk.59, x.112)
    
     21. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.111, x.112)
         signature
               = signature.67
         z     = idverify(signature.67, <ini_share.65, pmult(x.111, x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.104, x.112)^(~a.57*x.103*x.111)
    
     22. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv((x.103*x.111)), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult(inv((x.103*x.111)), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.104, x.112)^(~a.57*inv(x.111))
    
     23. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.111*inv(x.103)), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult((x.111*inv(x.103)), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.104, x.112)^(~a.57*x.111)
    
     24. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.111, x.112)
         signature
               = idsign(<ini_share.65, pmult(x.111, x.112)>,
                        IBPriv(Resp.62, x.108))
         z     = true
         z.1   = em(x.104, x.112)^(~a.57*x.103*x.111)
    
     25. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv((x.103*x.111)), x.112)
         signature
               = idsign(<ini_share.65, pmult(inv((x.103*x.111)), x.112)>,
                        IBPriv(Resp.62, x.108))
         z     = true
         z.1   = em(x.104, x.112)^(~a.57*inv(x.111))
    
     26. ~a    = ~a.57
         Auth_pk
               = pmult(x.103, x.104)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.111*inv(x.103)), x.112)
         signature
               = idsign(<ini_share.65, pmult((x.111*inv(x.103)), x.112)>,
                        IBPriv(Resp.62, x.108))
         z     = true
         z.1   = em(x.104, x.112)^(~a.57*x.111)
    
     27. ~a    = ~a.57
         Auth_pk
               = pmult(inv(x.103), x.104)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(x.111), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult(inv(x.111), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.104, x.112)^(~a.57*inv((x.103*x.111)))
    
     28. ~a    = ~a.57
         Auth_pk
               = pmult(inv(x.103), x.104)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.103*x.111), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult((x.103*x.111), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.104, x.112)^(~a.57*x.111)
    
     29. ~a    = ~a.57
         Auth_pk
               = pmult(inv(x.103), x.104)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(x.111), x.112)
         signature
               = idsign(<ini_share.65, pmult(inv(x.111), x.112)>,
                        IBPriv(Resp.62, x.108))
         z     = true
         z.1   = em(x.104, x.112)^(~a.57*inv((x.103*x.111)))
    
     30. ~a    = ~a.57
         Auth_pk
               = pmult(inv(x.103), x.104)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.108)
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.103*x.111), x.112)
         signature
               = idsign(<ini_share.65, pmult((x.103*x.111), x.112)>,
                        IBPriv(Resp.62, x.108))
         z     = true
         z.1   = em(x.104, x.112)^(~a.57*x.111)
    
     31. ~a    = ~a.57
         Auth_pk
               = pmult(inv((x.103*x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.103, x.112)
         signature
               = signature.67
         z     = idverify(signature.67, <ini_share.65, pmult(x.103, x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.105, x.112)^(~a.57*inv(x.104))
    
     32. ~a    = ~a.57
         Auth_pk
               = pmult(inv((x.103*x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.103, x.112)
         signature
               = idsign(<ini_share.65, pmult(x.103, x.112)>,
                        IBPriv(Resp.62, x.109))
         z     = true
         z.1   = em(x.105, x.112)^(~a.57*inv(x.104))
    
     33. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*x.104), x.105)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(x.103), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult(inv(x.103), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.105, x.112)^(~a.57*x.104)
    
     34. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*x.104), x.105)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.65
         resp_share
               = pmult(inv(x.103), x.112)
         signature
               = idsign(<ini_share.65, pmult(inv(x.103), x.112)>,
                        IBPriv(Resp.62, x.109))
         z     = true
         z.1   = em(x.105, x.112)^(~a.57*x.104)
    
     35. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*inv(x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.104, x.112)
         signature
               = signature.67
         z     = idverify(signature.67, <ini_share.65, pmult(x.104, x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.105, x.112)^(~a.57*x.103)
    
     36. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*inv(x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = Sign_pk.63
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.104*inv(x.103)), x.112)
         signature
               = signature.67
         z     = idverify(signature.67,
                          <ini_share.65, pmult((x.104*inv(x.103)), x.112)>,
                          IBPub(Resp.62, Sign_pk.63))
         z.1   = em(x.105, x.112)^~a.57
    
     37. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*inv(x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.65
         resp_share
               = pmult(x.104, x.112)
         signature
               = idsign(<ini_share.65, pmult(x.104, x.112)>,
                        IBPriv(Resp.62, x.109))
         z     = true
         z.1   = em(x.105, x.112)^(~a.57*x.103)
    
     38. ~a    = ~a.57
         Auth_pk
               = pmult((x.103*inv(x.104)), x.105)
         Resp  = Resp.62
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.65
         resp_share
               = pmult((x.104*inv(x.103)), x.112)
         signature
               = idsign(<ini_share.65, pmult((x.104*inv(x.103)), x.112)>,
                        IBPriv(Resp.62, x.109))
         z     = true
         z.1   = em(x.105, x.112)^~a.57
    
     39. ~a    = ~a.58
         Auth_pk
               = Auth_pk.60
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((~a.58*x.113)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv((~a.58*x.113)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(Auth_pk.60, x.114)^inv(x.113)
    
     40. ~a    = ~a.58
         Auth_pk
               = Auth_pk.60
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.113*inv(~a.58)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.113*inv(~a.58)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(Auth_pk.60, x.114)^x.113
    
     41. ~a    = ~a.58
         Auth_pk
               = Auth_pk.60
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((~a.58*x.113)), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv((~a.58*x.113)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(Auth_pk.60, x.114)^inv(x.113)
    
     42. ~a    = ~a.58
         Auth_pk
               = Auth_pk.60
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.113*inv(~a.58)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.113*inv(~a.58)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(Auth_pk.60, x.114)^x.113
    
     43. ~a    = ~a.58
         Auth_pk
               = pmult(x.104, x.105)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.112*inv((x.104*x.113))), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.112*inv((x.104*x.113))), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.105, x.114)^(~a.58*x.112*inv(x.113))
    
     44. ~a    = ~a.58
         Auth_pk
               = pmult(x.104, x.105)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.112*inv((x.104*x.113))), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.112*inv((x.104*x.113))), x.114)>,
                        IBPriv(Resp.63, x.109))
         z     = true
         z.1   = em(x.105, x.114)^(~a.58*x.112*inv(x.113))
    
     45. ~a    = ~a.58
         Auth_pk
               = pmult(x.106, x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(~a.58), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv(~a.58), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)^x.106
    
     46. ~a    = ~a.58
         Auth_pk
               = pmult(x.106, x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((~a.58*x.106)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv((~a.58*x.106)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)
    
     47. ~a    = ~a.58
         Auth_pk
               = pmult(x.106, x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(~a.58), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv(~a.58), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)^x.106
    
     48. ~a    = ~a.58
         Auth_pk
               = pmult(x.106, x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((~a.58*x.106)), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv((~a.58*x.106)), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)
    
     49. ~a    = ~a.58
         Auth_pk
               = pmult(inv(~a.58), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.113, x.114)
         signature
               = signature.68
         z     = idverify(signature.68, <ini_share.66, pmult(x.113, x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^x.113
    
     50. ~a    = ~a.58
         Auth_pk
               = pmult(inv(~a.58), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.113, x.114)
         signature
               = idsign(<ini_share.66, pmult(x.113, x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^x.113
    
     51. ~a    = ~a.58
         Auth_pk
               = pmult(inv(x.104), x.105)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.112*inv(x.113)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.112*inv(x.113)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.105, x.114)^(~a.58*x.112*inv((x.104*x.113)))
    
     52. ~a    = ~a.58
         Auth_pk
               = pmult(inv(x.104), x.105)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.109)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.112*inv(x.113)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.112*inv(x.113)), x.114)>,
                        IBPriv(Resp.63, x.109))
         z     = true
         z.1   = em(x.105, x.114)^(~a.58*x.112*inv((x.104*x.113)))
    
     53. ~a    = ~a.58
         Auth_pk
               = pmult(inv(x.106), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.106*inv(~a.58)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.106*inv(~a.58)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)
    
     54. ~a    = ~a.58
         Auth_pk
               = pmult(inv(x.106), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.106*inv(~a.58)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.106*inv(~a.58)), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)
    
     55. ~a    = ~a.58
         Auth_pk
               = pmult(inv((~a.58*x.106)), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.106, x.114)
         signature
               = signature.68
         z     = idverify(signature.68, <ini_share.66, pmult(x.106, x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)
    
     56. ~a    = ~a.58
         Auth_pk
               = pmult(inv((~a.58*x.106)), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.106, x.114)
         signature
               = idsign(<ini_share.66, pmult(x.106, x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)
    
     57. ~a    = ~a.58
         Auth_pk
               = pmult(inv((x.104*x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.104*x.113), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.104*x.113), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.113*inv(x.105))
    
     58. ~a    = ~a.58
         Auth_pk
               = pmult(inv((x.104*x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.104*inv(x.113)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.104*inv(x.113)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*inv((x.105*x.113)))
    
     59. ~a    = ~a.58
         Auth_pk
               = pmult(inv((x.104*x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.104*x.113), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.104*x.113), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.113*inv(x.105))
    
     60. ~a    = ~a.58
         Auth_pk
               = pmult(inv((x.104*x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.104*inv(x.113)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.104*inv(x.113)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*inv((x.105*x.113)))
    
     61. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((x.104*x.113)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv((x.104*x.113)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.105*inv(x.113))
    
     62. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.113*inv(x.104)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.113*inv(x.104)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.105*x.113)
    
     63. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((x.104*x.113)), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv((x.104*x.113)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.105*inv(x.113))
    
     64. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.113*inv(x.104)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.113*inv(x.104)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.105*x.113)
    
     65. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105*inv(x.106)), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.106*inv(x.104)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.106*inv(x.104)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)^(~a.58*x.105)
    
     66. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*x.105*inv(x.106)), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.106*inv(x.104)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.106*inv(x.104)), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)^(~a.58*x.105)
    
     67. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(x.113), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv(x.113), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.104*inv((x.105*x.113)))
    
     68. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((x.104*x.113)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv((x.104*x.113)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*inv((x.105*x.113)))
    
     69. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*x.113), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.105*x.113), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.104*x.113)
    
     70. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*x.113*inv(x.104)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.105*x.113*inv(x.104)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*x.113)
    
     71. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*inv((x.104*x.113))), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.105*inv((x.104*x.113))), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.106, x.114)^(~a.58*inv(x.113))
    
     72. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(x.113), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv(x.113), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.104*inv((x.105*x.113)))
    
     73. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv((x.104*x.113)), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv((x.104*x.113)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*inv((x.105*x.113)))
    
     74. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*x.113), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.105*x.113), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.104*x.113)
    
     75. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*x.113*inv(x.104)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.105*x.113*inv(x.104)), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*x.113)
    
     76. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv(x.105)), x.106)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.110)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*inv((x.104*x.113))), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.105*inv((x.104*x.113))), x.114)>,
                        IBPriv(Resp.63, x.110))
         z     = true
         z.1   = em(x.106, x.114)^(~a.58*inv(x.113))
    
     77. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv((x.105*x.106))), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.105, x.114)
         signature
               = signature.68
         z     = idverify(signature.68, <ini_share.66, pmult(x.105, x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)^(~a.58*x.104*inv(x.106))
    
     78. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv((x.105*x.106))), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*inv(x.104)), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult((x.105*inv(x.104)), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)^(~a.58*inv(x.106))
    
     79. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv((x.105*x.106))), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult(x.105, x.114)
         signature
               = idsign(<ini_share.66, pmult(x.105, x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)^(~a.58*x.104*inv(x.106))
    
     80. ~a    = ~a.58
         Auth_pk
               = pmult((x.104*inv((x.105*x.106))), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult((x.105*inv(x.104)), x.114)
         signature
               = idsign(<ini_share.66, pmult((x.105*inv(x.104)), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)^(~a.58*inv(x.106))
    
     81. ~a    = ~a.58
         Auth_pk
               = pmult((x.106*inv(~a.58)), x.107)
         Resp  = Resp.63
         Sign_pk
               = Sign_pk.64
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(x.106), x.114)
         signature
               = signature.68
         z     = idverify(signature.68,
                          <ini_share.66, pmult(inv(x.106), x.114)>,
                          IBPub(Resp.63, Sign_pk.64))
         z.1   = em(x.107, x.114)
    
     82. ~a    = ~a.58
         Auth_pk
               = pmult((x.106*inv(~a.58)), x.107)
         Resp  = Resp.63
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.66
         resp_share
               = pmult(inv(x.106), x.114)
         signature
               = idsign(<ini_share.66, pmult(inv(x.106), x.114)>,
                        IBPriv(Resp.63, x.111))
         z     = true
         z.1   = em(x.107, x.114)
    
     83. ~a    = ~a.59
         Auth_pk
               = Auth_pk.61
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((~a.59*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.114*inv((~a.59*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(Auth_pk.61, x.116)^(x.114*inv(x.115))
    
     84. ~a    = ~a.59
         Auth_pk
               = Auth_pk.61
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((~a.59*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.114*inv((~a.59*x.115))), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(Auth_pk.61, x.116)^(x.114*inv(x.115))
    
     85. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.107*x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((~a.59*x.107*x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^inv(x.115)
    
     86. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((~a.59*x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(x.107*inv(x.115))
    
     87. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv(~a.59)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.115*inv(~a.59)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(x.107*x.115)
    
     88. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv((~a.59*x.107))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.115*inv((~a.59*x.107))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^x.115
    
     89. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.107*x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((~a.59*x.107*x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^inv(x.115)
    
     90. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((~a.59*x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(x.107*inv(x.115))
    
     91. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv(~a.59)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.115*inv(~a.59)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(x.107*x.115)
    
     92. ~a    = ~a.59
         Auth_pk
               = pmult(x.107, x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv((~a.59*x.107))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.115*inv((~a.59*x.107))), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^x.115
    
     93. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((~a.59*x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^inv((x.107*x.115))
    
     94. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115*inv(~a.59)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*x.115*inv(~a.59)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^x.115
    
     95. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv((~a.59*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*inv((~a.59*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^inv(x.115)
    
     96. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((~a.59*x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^inv((x.107*x.115))
    
     97. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115*inv(~a.59)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*x.115*inv(~a.59)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^x.115
    
     98. ~a    = ~a.59
         Auth_pk
               = pmult(inv(x.107), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv((~a.59*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*inv((~a.59*x.115))), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^inv(x.115)
    
     99. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.115, x.116)
         signature
               = signature.69
         z     = idverify(signature.69, <ini_share.67, pmult(x.115, x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(x.115*inv(x.107))
    
    100. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.115), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv(x.115), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^inv((x.107*x.115))
    
    101. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*x.115), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^x.115
    
    102. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.115, x.116)
         signature
               = idsign(<ini_share.67, pmult(x.115, x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(x.115*inv(x.107))
    
    103. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.115), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv(x.115), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^inv((x.107*x.115))
    
    104. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*x.115), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^x.115
    
    105. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107*x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.107, x.116)
         signature
               = signature.69
         z     = idverify(signature.69, <ini_share.67, pmult(x.107, x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^inv(x.108)
    
    106. ~a    = ~a.59
         Auth_pk
               = pmult(inv((~a.59*x.107*x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.107, x.116)
         signature
               = idsign(<ini_share.67, pmult(x.107, x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^inv(x.108)
    
    107. ~a    = ~a.59
         Auth_pk
               = pmult(inv((x.105*x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.105*x.114*inv(x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.105*x.114*inv(x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv((x.106*x.115)))
    
    108. ~a    = ~a.59
         Auth_pk
               = pmult(inv((x.105*x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.105*x.114*inv(x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.105*x.114*inv(x.115)), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv((x.106*x.115)))
    
    109. ~a    = ~a.59
         Auth_pk
               = pmult(inv((x.107*x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv(~a.59)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*inv(~a.59)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^inv(x.108)
    
    110. ~a    = ~a.59
         Auth_pk
               = pmult(inv((x.107*x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv(~a.59)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*inv(~a.59)), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^inv(x.108)
    
    111. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106), x.107)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((x.105*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.114*inv((x.105*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.107, x.116)^(~a.59*x.106*x.114*inv(x.115))
    
    112. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106), x.107)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((x.105*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.114*inv((x.105*x.115))), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(x.107, x.116)^(~a.59*x.106*x.114*inv(x.115))
    
    113. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((x.105*x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((x.105*x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.106*inv((x.107*x.115)))
    
    114. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115*inv(x.105)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*x.115*inv(x.105)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.106*x.115)
    
    115. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv((x.105*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*inv((x.105*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.106*inv(x.115))
    
    116. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((x.105*x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((x.105*x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.106*inv((x.107*x.115)))
    
    117. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*x.115*inv(x.105)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*x.115*inv(x.105)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.106*x.115)
    
    118. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv(x.107)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv((x.105*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*inv((x.105*x.115))), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.106*inv(x.115))
    
    119. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv(x.105)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.107*inv(x.105)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^(~a.59*x.106*inv(x.108))
    
    120. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.107*inv(x.105)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.107*inv(x.105)), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^(~a.59*x.106*inv(x.108))
    
    121. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.114*inv((x.105*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.106*x.114*inv((x.105*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv(x.115))
    
    122. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv(x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.114*inv(x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.107, x.116)^(~a.59*x.105*x.114*inv((x.106*x.115)))
    
    123. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((x.105*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.114*inv((x.105*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv((x.106*x.115)))
    
    124. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.114*inv((x.105*x.115))), x.116)
         signature
               = idsign(<ini_share.67, 
                         pmult((x.106*x.114*inv((x.105*x.115))), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv(x.115))
    
    125. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv(x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.114*inv(x.115)), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(x.107, x.116)^(~a.59*x.105*x.114*inv((x.106*x.115)))
    
    126. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv(x.106)), x.107)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.111)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.114*inv((x.105*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.114*inv((x.105*x.115))), x.116)>,
                        IBPriv(Resp.64, x.111))
         z     = true
         z.1   = em(x.107, x.116)^(~a.59*x.114*inv((x.106*x.115)))
    
    127. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.115), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.106*x.115), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.105*x.115*inv(x.107))
    
    128. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.115*inv(x.105)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.106*x.115*inv(x.105)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.115*inv(x.107))
    
    129. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*inv(x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.106*inv(x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*x.105*inv((x.107*x.115)))
    
    130. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*inv((x.105*x.115))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.106*inv((x.105*x.115))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(~a.59*inv((x.107*x.115)))
    
    131. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.115), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.106*x.115), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.105*x.115*inv(x.107))
    
    132. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*x.115*inv(x.105)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.106*x.115*inv(x.105)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.115*inv(x.107))
    
    133. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*inv(x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.106*inv(x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*x.105*inv((x.107*x.115)))
    
    134. ~a    = ~a.59
         Auth_pk
               = pmult((x.105*inv((x.106*x.107))), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.106*inv((x.105*x.115))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.106*inv((x.105*x.115))), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(~a.59*inv((x.107*x.115)))
    
    135. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*x.108), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.107)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((~a.59*x.107)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^x.108
    
    136. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*x.108), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((~a.59*x.107)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((~a.59*x.107)), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^x.108
    
    137. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*x.108*inv(~a.59)), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.107), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv(x.107), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^x.108
    
    138. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*x.108*inv(~a.59)), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.107), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv(x.107), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^x.108
    
    139. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.115, x.116)
         signature
               = signature.69
         z     = idverify(signature.69, <ini_share.67, pmult(x.115, x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^(x.107*x.115)
    
    140. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((x.107*x.115)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv((x.107*x.115)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^inv(x.115)
    
    141. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv(x.107)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.115*inv(x.107)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.108, x.116)^x.115
    
    142. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.115, x.116)
         signature
               = idsign(<ini_share.67, pmult(x.115, x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^(x.107*x.115)
    
    143. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv((x.107*x.115)), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv((x.107*x.115)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^inv(x.115)
    
    144. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(~a.59)), x.108)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.112)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.115*inv(x.107)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.115*inv(x.107)), x.116)>,
                        IBPriv(Resp.64, x.112))
         z     = true
         z.1   = em(x.108, x.116)^x.115
    
    145. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv(~a.59)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.108*inv(~a.59)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^x.107
    
    146. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv((~a.59*x.107))), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.108*inv((~a.59*x.107))), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)
    
    147. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv(~a.59)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.108*inv(~a.59)), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^x.107
    
    148. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv(x.108)), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv((~a.59*x.107))), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.108*inv((~a.59*x.107))), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)
    
    149. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.108, x.116)
         signature
               = signature.69
         z     = idverify(signature.69, <ini_share.67, pmult(x.108, x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^x.107
    
    150. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.107), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult(inv(x.107), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)^inv(x.108)
    
    151. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = Sign_pk.65
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv(x.107)), x.116)
         signature
               = signature.69
         z     = idverify(signature.69,
                          <ini_share.67, pmult((x.108*inv(x.107)), x.116)>,
                          IBPub(Resp.64, Sign_pk.65))
         z.1   = em(x.109, x.116)
    
    152. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult(x.108, x.116)
         signature
               = idsign(<ini_share.67, pmult(x.108, x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^x.107
    
    153. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult(inv(x.107), x.116)
         signature
               = idsign(<ini_share.67, pmult(inv(x.107), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)^inv(x.108)
    
    154. ~a    = ~a.59
         Auth_pk
               = pmult((x.107*inv((~a.59*x.108))), x.109)
         Resp  = Resp.64
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.67
         resp_share
               = pmult((x.108*inv(x.107)), x.116)
         signature
               = idsign(<ini_share.67, pmult((x.108*inv(x.107)), x.116)>,
                        IBPriv(Resp.64, x.113))
         z     = true
         z.1   = em(x.109, x.116)
    
    155. ~a    = ~a.60
         Auth_pk
               = pmult(x.108, x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.108*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv((~a.60*x.108*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    156. ~a    = ~a.60
         Auth_pk
               = pmult(x.108, x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv((~a.60*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.108*x.116*inv(x.117))
    
    157. ~a    = ~a.60
         Auth_pk
               = pmult(x.108, x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.108*x.117))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.116*inv((~a.60*x.108*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    158. ~a    = ~a.60
         Auth_pk
               = pmult(x.108, x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.116*inv((~a.60*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.108*x.116*inv(x.117))
    
    159. ~a    = ~a.60
         Auth_pk
               = pmult(inv(x.108), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.116*inv((~a.60*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*x.116*inv((~a.60*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    160. ~a    = ~a.60
         Auth_pk
               = pmult(inv(x.108), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv((~a.60*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.116*inv((x.108*x.117)))
    
    161. ~a    = ~a.60
         Auth_pk
               = pmult(inv(x.108), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.116*inv((~a.60*x.117))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.108*x.116*inv((~a.60*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    162. ~a    = ~a.60
         Auth_pk
               = pmult(inv(x.108), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((~a.60*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.116*inv((~a.60*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.116*inv((x.108*x.117)))
    
    163. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv(x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv(x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.116*inv((x.108*x.117)))
    
    164. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv(x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.116*inv(x.117)), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.116*inv((x.108*x.117)))
    
    165. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*x.117), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    166. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv(x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*inv(x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    167. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*x.117), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    168. ~a    = ~a.60
         Auth_pk
               = pmult(inv((~a.60*x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv(x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*inv(x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    169. ~a    = ~a.60
         Auth_pk
               = pmult(inv((x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117*inv(~a.60)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*x.117*inv(~a.60)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    170. ~a    = ~a.60
         Auth_pk
               = pmult(inv((x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv((~a.60*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*inv((~a.60*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    171. ~a    = ~a.60
         Auth_pk
               = pmult(inv((x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117*inv(~a.60)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*x.117*inv(~a.60)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    172. ~a    = ~a.60
         Auth_pk
               = pmult(inv((x.108*x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv((~a.60*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*inv((~a.60*x.117))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    173. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv(x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.116*inv((x.106*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*x.116*inv((x.106*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(~a.60*x.107*x.116*inv(x.117))
    
    174. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv(x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((x.106*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv((x.106*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(~a.60*x.107*x.116*inv((x.108*x.117)))
    
    175. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv(x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.116*inv((x.106*x.117))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.108*x.116*inv((x.106*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(~a.60*x.107*x.116*inv(x.117))
    
    176. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv(x.108)), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((x.106*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.116*inv((x.106*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(~a.60*x.107*x.116*inv((x.108*x.117)))
    
    177. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv((x.108*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117*inv(x.106)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*x.117*inv(x.106)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(~a.60*x.107*x.117*inv(x.109))
    
    178. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv((x.108*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv((x.106*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.108*inv((x.106*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(~a.60*x.107*inv((x.109*x.117)))
    
    179. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv((x.108*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*x.117*inv(x.106)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*x.117*inv(x.106)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(~a.60*x.107*x.117*inv(x.109))
    
    180. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*x.107*inv((x.108*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.108*inv((x.106*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.108*inv((x.106*x.117))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(~a.60*x.107*inv((x.109*x.117)))
    
    181. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.107*x.116*inv(x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.107*x.116*inv(x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(~a.60*x.106*x.116*inv((x.108*x.117)))
    
    182. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.107*x.116*inv((x.106*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.107*x.116*inv((x.106*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(~a.60*x.116*inv((x.108*x.117)))
    
    183. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.107*x.116*inv(x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.107*x.116*inv(x.117)), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(~a.60*x.106*x.116*inv((x.108*x.117)))
    
    184. ~a    = ~a.60
         Auth_pk
               = pmult((x.106*inv((x.107*x.108))), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.107*x.116*inv((x.106*x.117))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.107*x.116*inv((x.106*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(~a.60*x.116*inv((x.108*x.117)))
    
    185. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.108*x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv((~a.60*x.108*x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.109*inv(x.117))
    
    186. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv((~a.60*x.108))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.117*inv((~a.60*x.108))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.109*x.117)
    
    187. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.108*x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv((~a.60*x.108*x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.109*inv(x.117))
    
    188. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv((~a.60*x.108))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.117*inv((~a.60*x.108))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.109*x.117)
    
    189. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(~a.60)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((x.108*x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv((x.108*x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.109*inv(x.117))
    
    190. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(~a.60)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv(x.108)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.117*inv(x.108)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.109*x.117)
    
    191. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(~a.60)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((x.108*x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv((x.108*x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.109*inv(x.117))
    
    192. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(~a.60)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv(x.108)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.117*inv(x.108)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.109*x.117)
    
    193. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(x.110)), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.110*inv((~a.60*x.108))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.110*inv((~a.60*x.108))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^x.109
    
    194. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv(x.110)), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.110*inv((~a.60*x.108))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.110*inv((~a.60*x.108))), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^x.109
    
    195. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv((~a.60*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv(x.108), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv(x.108), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^(x.109*inv(x.110))
    
    196. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv((~a.60*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.110*inv(x.108)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.110*inv(x.108)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^x.109
    
    197. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv((~a.60*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv(x.108), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv(x.108), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^(x.109*inv(x.110))
    
    198. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*x.109*inv((~a.60*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.110*inv(x.108)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.110*inv(x.108)), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^x.109
    
    199. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(~a.60)), x.109)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((x.108*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.116*inv((x.108*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    200. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(~a.60)), x.109)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.113)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.116*inv((x.108*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.116*inv((x.108*x.117))), x.118)>,
                        IBPriv(Resp.65, x.113))
         z     = true
         z.1   = em(x.109, x.118)^(x.116*inv(x.117))
    
    201. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.108*x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv((~a.60*x.108*x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    202. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv((~a.60*x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*inv((x.109*x.117)))
    
    203. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv(~a.60)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*x.117*inv(~a.60)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*x.117)
    
    204. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv((~a.60*x.108))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*x.117*inv((~a.60*x.108))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^x.117
    
    205. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.108*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv((~a.60*x.108*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv(x.117)
    
    206. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv((~a.60*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*inv(x.117))
    
    207. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.108*x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv((~a.60*x.108*x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    208. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((~a.60*x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv((~a.60*x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*inv((x.109*x.117)))
    
    209. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv(~a.60)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*x.117*inv(~a.60)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*x.117)
    
    210. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv((~a.60*x.108))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.109*x.117*inv((~a.60*x.108))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^x.117
    
    211. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.108*x.117))), x.118)
         signature
               = idsign(<ini_share.68, 
                         pmult((x.109*inv((~a.60*x.108*x.117))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv(x.117)
    
    212. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv(x.109)), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*inv((~a.60*x.117))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*inv(x.117))
    
    213. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(x.117, x.118)
         signature
               = signature.70
         z     = idverify(signature.70, <ini_share.68, pmult(x.117, x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*x.117*inv(x.109))
    
    214. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv(x.117), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv(x.117), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*inv((x.109*x.117)))
    
    215. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((x.108*x.117)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult(inv((x.108*x.117)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    216. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*x.117), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.108*x.117)
    
    217. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv(x.108)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*x.117*inv(x.108)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^x.117
    
    218. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((x.108*x.117))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv((x.108*x.117))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^inv(x.117)
    
    219. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv(x.108)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.117*inv(x.108)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    220. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(x.117, x.118)
         signature
               = idsign(<ini_share.68, pmult(x.117, x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*x.117*inv(x.109))
    
    221. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv(x.117), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv(x.117), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*inv((x.109*x.117)))
    
    222. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult(inv((x.108*x.117)), x.118)
         signature
               = idsign(<ini_share.68, pmult(inv((x.108*x.117)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv((x.109*x.117))
    
    223. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*x.117), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.108*x.117)
    
    224. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*x.117*inv(x.108)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*x.117*inv(x.108)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^x.117
    
    225. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((x.108*x.117))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*inv((x.108*x.117))), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^inv(x.117)
    
    226. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109))), x.110)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.114)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.117*inv(x.108)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.117*inv(x.108)), x.118)>,
                        IBPriv(Resp.65, x.114))
         z     = true
         z.1   = em(x.110, x.118)^(x.117*inv(x.109))
    
    227. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult(x.109, x.118)
         signature
               = signature.70
         z     = idverify(signature.70, <ini_share.68, pmult(x.109, x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^(x.108*inv(x.110))
    
    228. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv(x.108)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv(x.108)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^inv(x.110)
    
    229. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult(x.109, x.118)
         signature
               = idsign(<ini_share.68, pmult(x.109, x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^(x.108*inv(x.110))
    
    230. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((~a.60*x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv(x.108)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*inv(x.108)), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^inv(x.110)
    
    231. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv(~a.60)), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv(~a.60)), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^(x.108*inv(x.110))
    
    232. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = Sign_pk.66
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.108))), x.118)
         signature
               = signature.70
         z     = idverify(signature.70,
                          <ini_share.68, pmult((x.109*inv((~a.60*x.108))), x.118)>,
                          IBPub(Resp.65, Sign_pk.66))
         z.1   = em(x.111, x.118)^inv(x.110)
    
    233. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv(~a.60)), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*inv(~a.60)), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^(x.108*inv(x.110))
    
    234. ~a    = ~a.60
         Auth_pk
               = pmult((x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.65
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.68
         resp_share
               = pmult((x.109*inv((~a.60*x.108))), x.118)
         signature
               = idsign(<ini_share.68, pmult((x.109*inv((~a.60*x.108))), x.118)>,
                        IBPriv(Resp.65, x.115))
         z     = true
         z.1   = em(x.111, x.118)^inv(x.110)
    
    235. ~a    = ~a.61
         Auth_pk
               = pmult(inv((~a.61*x.109*x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv(x.119)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.109*x.118*inv(x.119)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    236. ~a    = ~a.61
         Auth_pk
               = pmult(inv((~a.61*x.109*x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv(x.119)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.109*x.118*inv(x.119)), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    237. ~a    = ~a.61
         Auth_pk
               = pmult(inv((x.109*x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv((~a.61*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.109*x.118*inv((~a.61*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    238. ~a    = ~a.61
         Auth_pk
               = pmult(inv((x.109*x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv((~a.61*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.109*x.118*inv((~a.61*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    239. ~a    = ~a.61
         Auth_pk
               = pmult((x.107*x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv((x.107*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.109*x.118*inv((x.107*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(~a.61*x.108*x.118*inv((x.110*x.119)))
    
    240. ~a    = ~a.61
         Auth_pk
               = pmult((x.107*x.108*inv((x.109*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.109*x.118*inv((x.107*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.109*x.118*inv((x.107*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(~a.61*x.108*x.118*inv((x.110*x.119)))
    
    241. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv((~a.61*x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.110*x.118*inv(x.119))
    
    242. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.118*inv((~a.61*x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.110*x.118*inv(x.119))
    
    243. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(~a.61)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv((x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.110*x.118*inv(x.119))
    
    244. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(~a.61)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.118*inv((x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.110*x.118*inv(x.119))
    
    245. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult(inv((~a.61*x.109*x.119)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult(inv((~a.61*x.109*x.119)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*inv((x.111*x.119)))
    
    246. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*x.119*inv((~a.61*x.109))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*x.119*inv((~a.61*x.109))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*x.119)
    
    247. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((~a.61*x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*inv((~a.61*x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*inv(x.119))
    
    248. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult(inv((~a.61*x.109*x.119)), x.120)
         signature
               = idsign(<ini_share.69, pmult(inv((~a.61*x.109*x.119)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*inv((x.111*x.119)))
    
    249. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*x.119*inv((~a.61*x.109))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.111*x.119*inv((~a.61*x.109))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*x.119)
    
    250. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv(x.111)), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((~a.61*x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.111*inv((~a.61*x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*inv(x.119))
    
    251. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult(inv((x.109*x.119)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult(inv((x.109*x.119)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*inv((x.111*x.119)))
    
    252. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*x.119*inv(x.109)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*x.119*inv(x.109)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*x.119)
    
    253. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*inv((x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*inv(x.119))
    
    254. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.119*inv(x.109)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.119*inv(x.109)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.110*x.119*inv(x.111))
    
    255. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult(inv((x.109*x.119)), x.120)
         signature
               = idsign(<ini_share.69, pmult(inv((x.109*x.119)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*inv((x.111*x.119)))
    
    256. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*x.119*inv(x.109)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.111*x.119*inv(x.109)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*x.119)
    
    257. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.111*inv((x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*inv(x.119))
    
    258. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.119*inv(x.109)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.119*inv(x.109)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.110*x.119*inv(x.111))
    
    259. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111*x.112))), x.113)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv(x.109)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*inv(x.109)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.113, x.120)^(x.110*inv(x.112))
    
    260. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((~a.61*x.111*x.112))), x.113)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv(x.109)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.111*inv(x.109)), x.120)>,
                        IBPriv(Resp.66, x.117))
         z     = true
         z.1   = em(x.113, x.120)^(x.110*inv(x.112))
    
    261. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((~a.61*x.109))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.111*inv((~a.61*x.109))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.113, x.120)^(x.110*inv(x.112))
    
    262. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.111*inv((~a.61*x.109))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.111*inv((~a.61*x.109))), x.120)>,
                        IBPriv(Resp.66, x.117))
         z     = true
         z.1   = em(x.113, x.120)^(x.110*inv(x.112))
    
    263. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.118*inv((~a.61*x.109*x.119))), x.120)
                          >,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv(x.119))
    
    264. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((~a.61*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.118*inv((~a.61*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.109*x.118*inv(x.119))
    
    265. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv((~a.61*x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    266. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv((~a.61*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.109*x.118*inv((x.110*x.119)))
    
    267. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.110*x.118*inv((~a.61*x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv(x.119))
    
    268. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((~a.61*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.110*x.118*inv((~a.61*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.109*x.118*inv(x.119))
    
    269. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.118*inv((~a.61*x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    270. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv(x.110)), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((~a.61*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.118*inv((~a.61*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.109*x.118*inv((x.110*x.119)))
    
    271. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.118*inv((x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv(x.119))
    
    272. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv(x.119)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv(x.119)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.109*x.118*inv((x.110*x.119)))
    
    273. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.118*inv((x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    274. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.118*inv((x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.110*x.118*inv((x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv(x.119))
    
    275. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv(x.119)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.118*inv(x.119)), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.109*x.118*inv((x.110*x.119)))
    
    276. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110))), x.111)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.115)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.118*inv((x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.118*inv((x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.115))
         z     = true
         z.1   = em(x.111, x.120)^(x.118*inv((x.110*x.119)))
    
    277. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.119), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.109*x.119*inv(x.111))
    
    278. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv(x.109)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.119*inv(x.109)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.119*inv(x.111))
    
    279. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv(x.119)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*inv(x.119)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.109*inv((x.111*x.119)))
    
    280. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*inv((x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^inv((x.111*x.119))
    
    281. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*x.119), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.109*x.119*inv(x.111))
    
    282. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv(x.109)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*x.119*inv(x.109)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.119*inv(x.111))
    
    283. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv(x.119)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*inv(x.119)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.109*inv((x.111*x.119)))
    
    284. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((~a.61*x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*inv((x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^inv((x.111*x.119))
    
    285. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv(~a.61)), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.119*inv(~a.61)), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.109*x.119*inv(x.111))
    
    286. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv((~a.61*x.109))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*x.119*inv((~a.61*x.109))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.119*inv(x.111))
    
    287. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((~a.61*x.109*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*inv((~a.61*x.109*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^inv((x.111*x.119))
    
    288. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = Sign_pk.67
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((~a.61*x.119))), x.120)
         signature
               = signature.71
         z     = idverify(signature.71,
                          <ini_share.69, pmult((x.110*inv((~a.61*x.119))), x.120)>,
                          IBPub(Resp.66, Sign_pk.67))
         z.1   = em(x.112, x.120)^(x.109*inv((x.111*x.119)))
    
    289. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv(~a.61)), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*x.119*inv(~a.61)), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.109*x.119*inv(x.111))
    
    290. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*x.119*inv((~a.61*x.109))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.110*x.119*inv((~a.61*x.109))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.119*inv(x.111))
    
    291. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((~a.61*x.109*x.119))), x.120)
         signature
               = idsign(<ini_share.69, 
                         pmult((x.110*inv((~a.61*x.109*x.119))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^inv((x.111*x.119))
    
    292. ~a    = ~a.61
         Auth_pk
               = pmult((x.109*inv((x.110*x.111))), x.112)
         Resp  = Resp.66
         Sign_pk
               = GetIBMasterPublicKey(x.116)
         ini_share
               = ini_share.69
         resp_share
               = pmult((x.110*inv((~a.61*x.119))), x.120)
         signature
               = idsign(<ini_share.69, pmult((x.110*inv((~a.61*x.119))), x.120)>,
                        IBPriv(Resp.66, x.116))
         z     = true
         z.1   = em(x.112, x.120)^(x.109*inv((x.111*x.119)))
    
    293. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv(x.112)), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*x.120*inv((~a.62*x.110*x.121))), x.122)
                          >,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.111*x.120*inv(x.121))
    
    294. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv(x.112)), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.120*inv((~a.62*x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.111*x.120*inv((x.112*x.121)))
    
    295. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv(x.112)), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.112*x.120*inv((~a.62*x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.111*x.120*inv(x.121))
    
    296. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv(x.112)), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.120*inv((~a.62*x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.111*x.120*inv((x.112*x.121)))
    
    297. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.120*inv((x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*x.120*inv((x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.111*x.120*inv(x.121))
    
    298. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.120*inv((x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.120*inv((x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.111*x.120*inv((x.112*x.121)))
    
    299. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.120*inv((x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.112*x.120*inv((x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.111*x.120*inv(x.121))
    
    300. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.120*inv((x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, pmult((x.120*inv((x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.111*x.120*inv((x.112*x.121)))
    
    301. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.121*inv(x.110)), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*x.121*inv(x.110)), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.114, x.122)^(x.111*x.121*inv(x.113))
    
    302. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*inv((x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*inv((x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.114, x.122)^(x.111*inv((x.113*x.121)))
    
    303. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.118)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.121*inv(x.110)), x.122)
         signature
               = idsign(<ini_share.70, pmult((x.112*x.121*inv(x.110)), x.122)>,
                        IBPriv(Resp.67, x.118))
         z     = true
         z.1   = em(x.114, x.122)^(x.111*x.121*inv(x.113))
    
    304. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((~a.62*x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.118)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*inv((x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, pmult((x.112*inv((x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.118))
         z     = true
         z.1   = em(x.114, x.122)^(x.111*inv((x.113*x.121)))
    
    305. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.121*inv((~a.62*x.110))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*x.121*inv((~a.62*x.110))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.114, x.122)^(x.111*x.121*inv(x.113))
    
    306. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*inv((~a.62*x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.112*inv((~a.62*x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.114, x.122)^(x.111*inv((x.113*x.121)))
    
    307. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.118)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*x.121*inv((~a.62*x.110))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.112*x.121*inv((~a.62*x.110))), x.122)>,
                        IBPriv(Resp.67, x.118))
         z     = true
         z.1   = em(x.114, x.122)^(x.111*x.121*inv(x.113))
    
    308. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*x.111*inv((x.112*x.113))), x.114)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.118)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.112*inv((~a.62*x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.112*inv((~a.62*x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.118))
         z     = true
         z.1   = em(x.114, x.122)^(x.111*inv((x.113*x.121)))
    
    309. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((~a.62*x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv(x.121)), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.111*x.120*inv(x.121)), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.110*x.120*inv((x.112*x.121)))
    
    310. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((~a.62*x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.111*x.120*inv((x.110*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.120*inv((x.112*x.121)))
    
    311. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((~a.62*x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv(x.121)), x.122)
         signature
               = idsign(<ini_share.70, pmult((x.111*x.120*inv(x.121)), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.110*x.120*inv((x.112*x.121)))
    
    312. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((~a.62*x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.111*x.120*inv((x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.120*inv((x.112*x.121)))
    
    313. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.111*x.120*inv((~a.62*x.110*x.121))), x.122)
                          >,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.120*inv((x.112*x.121)))
    
    314. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = Sign_pk.68
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((~a.62*x.121))), x.122)
         signature
               = signature.72
         z     = idverify(signature.72,
                          <ini_share.70, pmult((x.111*x.120*inv((~a.62*x.121))), x.122)>,
                          IBPub(Resp.67, Sign_pk.68))
         z.1   = em(x.113, x.122)^(x.110*x.120*inv((x.112*x.121)))
    
    315. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((~a.62*x.110*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.111*x.120*inv((~a.62*x.110*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.120*inv((x.112*x.121)))
    
    316. ~a    = ~a.62
         Auth_pk
               = pmult((x.110*inv((x.111*x.112))), x.113)
         Resp  = Resp.67
         Sign_pk
               = GetIBMasterPublicKey(x.117)
         ini_share
               = ini_share.70
         resp_share
               = pmult((x.111*x.120*inv((~a.62*x.121))), x.122)
         signature
               = idsign(<ini_share.70, 
                         pmult((x.111*x.120*inv((~a.62*x.121))), x.122)>,
                        IBPriv(Resp.67, x.117))
         z     = true
         z.1   = em(x.113, x.122)^(x.110*x.120*inv((x.112*x.121)))
    
    317. ~a    = ~a.63
         Auth_pk
               = pmult((x.111*x.112*inv((~a.63*x.113*x.114))), x.115)
         Resp  = Resp.68
         Sign_pk
               = Sign_pk.69
         ini_share
               = ini_share.71
         resp_share
               = pmult((x.113*x.122*inv((x.111*x.123))), x.124)
         signature
               = signature.73
         z     = idverify(signature.73,
                          <ini_share.71, pmult((x.113*x.122*inv((x.111*x.123))), x.124)>,
                          IBPub(Resp.68, Sign_pk.69))
         z.1   = em(x.115, x.124)^(x.112*x.122*inv((x.114*x.123)))
    
    318. ~a    = ~a.63
         Auth_pk
               = pmult((x.111*x.112*inv((~a.63*x.113*x.114))), x.115)
         Resp  = Resp.68
         Sign_pk
               = GetIBMasterPublicKey(x.119)
         ini_share
               = ini_share.71
         resp_share
               = pmult((x.113*x.122*inv((x.111*x.123))), x.124)
         signature
               = idsign(<ini_share.71, 
                         pmult((x.113*x.122*inv((x.111*x.123))), x.124)>,
                        IBPriv(Resp.68, x.119))
         z     = true
         z.1   = em(x.115, x.124)^(x.112*x.122*inv((x.114*x.123)))
    
    319. ~a    = ~a.63
         Auth_pk
               = pmult((x.111*x.112*inv((x.113*x.114))), x.115)
         Resp  = Resp.68
         Sign_pk
               = Sign_pk.69
         ini_share
               = ini_share.71
         resp_share
               = pmult((x.113*x.122*inv((~a.63*x.111*x.123))), x.124)
         signature
               = signature.73
         z     = idverify(signature.73,
                          <ini_share.71, pmult((x.113*x.122*inv((~a.63*x.111*x.123))), x.124)
                          >,
                          IBPub(Resp.68, Sign_pk.69))
         z.1   = em(x.115, x.124)^(x.112*x.122*inv((x.114*x.123)))
    
    320. ~a    = ~a.63
         Auth_pk
               = pmult((x.111*x.112*inv((x.113*x.114))), x.115)
         Resp  = Resp.68
         Sign_pk
               = GetIBMasterPublicKey(x.119)
         ini_share
               = ini_share.71
         resp_share
               = pmult((x.113*x.122*inv((~a.63*x.111*x.123))), x.124)
         signature
               = idsign(<ini_share.71, 
                         pmult((x.113*x.122*inv((~a.63*x.111*x.123))), x.124)>,
                        IBPriv(Resp.68, x.119))
         z     = true
         z.1   = em(x.115, x.124)^(x.112*x.122*inv((x.114*x.123)))
  */

rule (modulo E) Responder_2recv:
   [
   St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
              resp_share, Ini, ini_share, key
   ),
   In( mIn )
   ]
  --[
  Eq( true, idverify(mIn, resp_share, IBPub(Ini, Sign_pk)) ),
  Secret( 'KEY', Resp, key ), IN_RESP_2recv( mIn ),
  Commit( Resp, Ini, <'Responder', 'Initiator', key> ), Full( )
  ]->
   [ ]

  /*
  rule (modulo AC) Responder_2recv:
     [
     St_Resp_1( ~id, Resp, Auth_pk, Auth_sk, Sign_pk, Sign_sk,
                resp_share, Ini, ini_share, key
     ),
     In( mIn )
     ]
    --[
    Eq( true, z ), Secret( 'KEY', Resp, key ), IN_RESP_2recv( mIn ),
    Commit( Resp, Ini, <'Responder', 'Initiator', key> ), Full( )
    ]->
     [ ]
    variants (modulo AC)
    1. Ini   = Ini.21
       Sign_pk
             = Sign_pk.23
       mIn   = mIn.27
       resp_share
             = resp_share.28
       z     = idverify(mIn.27, resp_share.28, IBPub(Ini.21, Sign_pk.23))
    
    2. Ini   = Ini.40
       Sign_pk
             = GetIBMasterPublicKey(x.75)
       mIn   = idsign(resp_share.47, IBPriv(Ini.40, x.75))
       resp_share
             = resp_share.47
       z     = true
  */

restriction Equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction Once:
  "∀ tag #i #j.
    ((Once( tag ) @ #i) ∧ (Once( tag ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma secrecy_session_key [use_induction, reuse]:
  all-traces
  "∀ A s #i.
    (Secret( 'KEY', A, s ) @ #i) ⇒
    ((¬(∃ #j. K( s ) @ #j)) ∨ (∃ K X #l. Reveal( K, X ) @ #l))"
/*
guarded formula characterizing all counter-examples:
"∃ A s #i.
  (Secret( 'KEY', A, s ) @ #i)
 ∧
  (∃ #j. (K( s ) @ #j)) ∧ (∀ K X #l. (Reveal( K, X ) @ #l) ⇒ ⊥)"
*/
by sorry

lemma session_escrow [hide_lemma=secrecy_session_key]:
  exists-trace
  "∃ A B key #i #j #k.
    (((((!KU( key ) @ #i) ∧
        (Commit( A, B, <'Responder', 'Initiator', key> ) @ #j)) ∧
       (Reveal( 'PKG', 'AUTH' ) @ #k)) ∧
      (∀ #i.1 #j.1 #k.1.
        (((User( ) @ #i.1) ∧ (User( ) @ #j.1)) ∧ (User( ) @ #k.1)) ⇒
        (((#i.1 = #j.1) ∨ (#j.1 = #k.1)) ∨ (#i.1 = #k.1)))) ∧
     (¬(∃ Y #r. Reveal( 'ID_SIGN', Y ) @ #r))) ∧
    (¬(∃ #r. Reveal( 'PKG', 'SIGN' ) @ #r))"
/*
guarded formula characterizing all satisfying traces:
"∃ A B key #i #j #k.
  (!KU( key ) @ #i) ∧
  (Commit( A, B, <'Responder', 'Initiator', key> ) @ #j) ∧
  (Reveal( 'PKG', 'AUTH' ) @ #k)
 ∧
  (∀ #i.1 #j.1 #k.1.
    (User( ) @ #i.1) ∧ (User( ) @ #j.1) ∧ (User( ) @ #k.1)
   ⇒
    ((#i.1 = #j.1) ∨ (#j.1 = #k.1) ∨ (#i.1 = #k.1))) ∧
  (∀ Y #r. (Reveal( 'ID_SIGN', Y ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'PKG', 'SIGN' ) @ #r) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, <'Responder', 'Initiator', key> ) @ #j )
  case Responder_2recv
  solve( St_Resp_1( ~id, A, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, B, ini_share, key
         ) ▶₀ #j )
    case Responder_1recv_send
    solve( !KU( KDF(z) ) @ #i )
      case c_KDF
      solve( !KU( idsign(pmult(~b, 'P'),
                         IBPriv(B, ~IBMasterPrivateKey.1))
             ) @ #vk )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.9 )
          case Responder_1recv_send
          solve( !KU( pmult(~b, 'P') ) @ #vk.9 )
            case Responder_1recv_send
            solve( !KU( pmult(~a, 'P') ) @ #vk.6 )
              case Initiator_1send
              solve( !KU( em('P', 'P')^(~IBMasterPrivateKey*~a*~b) ) @ #vk.8 )
                case Initiator_1send_case_3
                solve( !KU( ~IBMasterPrivateKey ) @ #vk.10 )
                  case Reveal_IB_MasterPrivateKey
                  solve( Reveal( 'PKG', 'AUTH' ) @ #k )
                    case Reveal_IB_MasterPrivateKey
                    solve( !IB_MasterPrivateKey( 'AUTH', IBMasterPrivateKey.2 ) ▶₀ #k )
                      case create_IB_AUTH_PrivateKeyGenerator
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma Weak_Forward_Secrecy_key [use_induction]:
  all-traces
  "∀ A B X Y key #i.
    (Commit( A, B, <X, Y, key> ) @ #i) ⇒
    (((((¬(∃ #j. K( key ) @ #j)) ∨
        ((∃ K #l. Reveal( K, A ) @ #l) ∧ (∃ K #l. Reveal( K, B ) @ #l))) ∨
       (∃ K #l. (Reveal( K, A ) @ #l) ∧ (#l < #i))) ∨
      (∃ K #l. (Reveal( K, B ) @ #l) ∧ (#l < #i))) ∨
     (∃ K #j. Reveal( 'PKG', K ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B X Y key #i.
  (Commit( A, B, <X, Y, key> ) @ #i)
 ∧
  (∃ #j. (K( key ) @ #j)) ∧
  (((∀ K #l. (Reveal( K, A ) @ #l) ⇒ ⊥) ∨
    (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ⊥))) ∧
  (∀ K #l. (Reveal( K, A ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #j. (Reveal( 'PKG', K ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma Strong_Forward_Secrecy_key [use_induction]:
  all-traces
  "∀ A B X Y key #i.
    (Commit( A, B, <X, Y, key> ) @ #i) ⇒
    ((((¬(∃ #j. K( key ) @ #j)) ∨
       (∃ K #l. (Reveal( K, A ) @ #l) ∧ (#l < #i))) ∨
      (∃ K #l. (Reveal( K, B ) @ #l) ∧ (#l < #i))) ∨
     (∃ K #j. Reveal( 'PKG', K ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B X Y key #i.
  (Commit( A, B, <X, Y, key> ) @ #i)
 ∧
  (∃ #j. (K( key ) @ #j)) ∧
  (∀ K #l. (Reveal( K, A ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #l. (Reveal( K, B ) @ #l) ⇒ ¬(#l < #i)) ∧
  (∀ K #j. (Reveal( 'PKG', K ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma alivenessInitiatorNoAuthReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ t2 a2 #j.
         Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_AUTH', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_AUTH', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'AUTH' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ t2 a2 #j.
    (Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Initiator', 'Responder', t> ) @ #i )
  case Initiator_2recv_send
  solve( St_Ini_1( ~id, a, Auth_pk, Auth_sk, GetIBMasterPublicKey(x),
                   Sign_sk, ini_share, ~a.1
         ) ▶₀ #i )
    case Initiator_1send
    solve( !KU( idsign(<pmult(~a, 'P'), resp_share>,
                       IBPriv(b, ~IBMasterPrivateKey.1))
           ) @ #vk.4 )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.9 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.2, 'P'), pmult(~a.1, 'P'), 
                            pmult(~a, 'P'), resp_share>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.15 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.18 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
              case Initiator_1send
              solve( !KU( pmult(~a.1, 'P') ) @ #vk.18 )
                case Initiator_1send
                solve( !KU( pmult(~a.2, 'P') ) @ #vk.19 )
                  case Initiator_1send
                  solve( splitEqs(0) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', resp_share)^(~IBMasterPrivateKey*~a)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', <pmult(~a, 'P'), resp_share>)^(~IBMasterPrivateKey*
                                                                              ~a.1))
                                ) @ #j)
                              ⇒
                               ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>)^(
                                                                                                  ~IBMasterPrivateKey*
                                                                                                  ~a.2
                                                                                                 ))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma alivenessInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ a2 t2 #j.
         Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ a2 t2 #j.
    (Running( b, a2, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Initiator', 'Responder', t> ) @ #i )
  case Initiator_2recv_send
  solve( St_Ini_1( ~id, a, Auth_pk, Auth_sk, GetIBMasterPublicKey(x),
                   Sign_sk, ini_share, ~a.1
         ) ▶₀ #i )
    case Initiator_1send
    solve( !KU( idsign(<pmult(~a, 'P'), resp_share>,
                       IBPriv(b, ~IBMasterPrivateKey.1))
           ) @ #vk.4 )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.9 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.2, 'P'), pmult(~a.1, 'P'), 
                            pmult(~a, 'P'), resp_share>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.15 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.18 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
              case Initiator_1send
              solve( !KU( pmult(~a.1, 'P') ) @ #vk.18 )
                case Initiator_1send
                solve( !KU( pmult(~a.2, 'P') ) @ #vk.19 )
                  case Initiator_1send
                  solve( splitEqs(0) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', resp_share)^(~IBMasterPrivateKey*~a)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', <pmult(~a, 'P'), resp_share>)^(~IBMasterPrivateKey*
                                                                              ~a.1))
                                ) @ #j)
                              ⇒
                               ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a.1, 'P'), pmult(~a, 'P'), resp_share>)^(
                                                                                                  ~IBMasterPrivateKey*
                                                                                                  ~a.2
                                                                                                 ))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma weakagreementInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Responder', 'Initiator', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Responder', 'Initiator', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma noninjectiveagreemenInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ #j. Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ #j. (Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma injectiveagreementInitiatorNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i) ⇒
    ((((∃ #j.
         ((Running( b, a, <'Responder', 'Initiator', t> ) @ #j) ∧
          (#j < #i)) ∧
         (¬(∃ a2 b2 #i2.
             (Commit( a2, b2, <'Initiator', 'Responder', t> ) @ #i2) ∧
             (¬(#i2 = #i))))) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Initiator', 'Responder', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'Responder', 'Initiator', t> ) @ #j)
   ⇒
    ((¬(#j < #i)) ∨
     (∃ a2 b2 #i2.
       (Commit( a2, b2, <'Initiator', 'Responder', t> ) @ #i2)
      ∧
       ¬(#i2 = #i)))) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma alivenessResponderNoAuthReveal [use_induction]:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_AUTH', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_AUTH', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'AUTH' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_AUTH', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ⇒ ⊥)"
*/
induction
  case non_empty_trace
  simplify
  solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
    case Responder_2recv
    solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                      GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
           ) ▶₀ #i )
      case Responder_1recv_send
      solve( !KU( idsign(pmult(~b, 'P'),
                         IBPriv(b.1, ~IBMasterPrivateKey.1))
             ) @ #vk )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.8 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.10 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~b, 'P') ) @ #vk.9 )
              case Responder_1recv_send
              solve( !KU( pmult(~a, 'P') ) @ #vk.11 )
                case Initiator_1send
                solve( splitEqs(1) )
                  case split_case_01
                  solve( (last(#i))  ∥
                         (∃ t2 #j.
                           (Running( $A.1, $A, <'Initiator', 'Responder', t2> ) @ #j)
                          ∧
                           ¬(last(#j)))  ∥
                         (∃ #r. (Reveal( 'ID_AUTH', $A ) @ #r) ∧ ¬(last(#r)))  ∥
                         (∃ #r. (Reveal( 'ID_AUTH', $A.1 ) @ #r) ∧ ¬(last(#r)))  ∥
                         (∃ #j. (Reveal( 'PKG', 'AUTH' ) @ #j) ∧ ¬(last(#j))) )
                    case case_1
                    solve( (∀ #j.
                             (K( KDF(em('P', ini_share)^(~IBMasterPrivateKey*~b)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        SOLVED // trace found
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma alivenessResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ a2 t2 #j.
         Running( b, a2, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ a2 t2 #j.
    (Running( b, a2, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
  case Responder_2recv
  solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
         ) ▶₀ #i )
    case Responder_1recv_send
    solve( !KU( idsign(pmult(~b, 'P'),
                       IBPriv(b.1, ~IBMasterPrivateKey.1))
           ) @ #vk )
      case Initiator_2recv_send
      by contradiction /* from formulas */
    next
      case c_idsign
      solve( !KU( IBPriv(b.1, ~IBMasterPrivateKey.1) ) @ #vk.5 )
        case Reveal_IB_SIGN_privkey
        by contradiction /* from formulas */
      next
        case c_IBPriv
        solve( !KU( ~IBMasterPrivateKey.1 ) @ #vk.6 )
          case Reveal_IB_MasterPrivateKey
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma weakagreementResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ t2 #j.
         Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ t2 #j.
    (Running( b, a, <'Initiator', 'Responder', t2> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'Responder', 'Initiator', t> ) @ #i )
  case Responder_2recv
  solve( St_Resp_1( ~id, a, Auth_pk, Auth_sk,
                    GetIBMasterPublicKey(x), Sign_sk, resp_share, b, ini_share, t
         ) ▶₀ #i )
    case Responder_1recv_send
    solve( !KU( idsign(pmult(~b, 'P'),
                       IBPriv(b.1, ~IBMasterPrivateKey.1))
           ) @ #vk )
      case Initiator_2recv_send
      solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                         IBPriv(Resp, ~IBMasterPrivateKey.1))
             ) @ #vk.8 )
        case Initiator_2recv_send
        solve( !KU( idsign(<pmult(~a.1, 'P'), pmult(~a, 'P'), 
                            pmult(~b, 'P')>,
                           IBPriv(Resp, ~IBMasterPrivateKey.1))
               ) @ #vk.13 )
          case c_idsign
          solve( !KU( IBPriv(Resp, ~IBMasterPrivateKey.1) ) @ #vk.16 )
            case Reveal_IB_SIGN_privkey
            solve( !KU( pmult(~b, 'P') ) @ #vk.11 )
              case Responder_1recv_send
              solve( !KU( pmult(~a, 'P') ) @ #vk.16 )
                case Initiator_1send
                solve( !KU( pmult(~a.1, 'P') ) @ #vk.17 )
                  case Initiator_1send
                  solve( splitEqs(1) )
                    case split_case_01
                    solve( (∀ #j.
                             (K( KDF(em('P', ini_share)^(~IBMasterPrivateKey*~b)) ) @ #j)
                            ⇒
                             ⊥)  ∥
                           (∃ K X #l. (Reveal( K, X ) @ #l)) )
                      case case_1
                      solve( (∀ #j.
                               (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                             (∃ K X #l. (Reveal( K, X ) @ #l)) )
                        case case_1
                        solve( (∀ #j.
                                 (K( KDF(em('P', <pmult(~a, 'P'), pmult(~b, 'P')>)^(
                                                                                    ~IBMasterPrivateKey*
                                                                                    ~a.1))
                                  ) @ #j)
                                ⇒
                                 ⊥)  ∥
                               (∃ K X #l. (Reveal( K, X ) @ #l)) )
                          case case_1
                          SOLVED // trace found
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma noninjectiveagreemenResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ #j. Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ #j. (Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma injectiveagreementResponderNoSignReveal:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i) ⇒
    ((((∃ #j.
         ((Running( b, a, <'Initiator', 'Responder', t> ) @ #j) ∧
          (#j < #i)) ∧
         (¬(∃ a2 b2 #i2.
             (Commit( a2, b2, <'Responder', 'Initiator', t> ) @ #i2) ∧
             (¬(#i2 = #i))))) ∨
       (∃ #r. Reveal( 'ID_SIGN', a ) @ #r)) ∨
      (∃ #r. Reveal( 'ID_SIGN', b ) @ #r)) ∨
     (∃ #j. Reveal( 'PKG', 'SIGN' ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'Responder', 'Initiator', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'Initiator', 'Responder', t> ) @ #j)
   ⇒
    ((¬(#j < #i)) ∨
     (∃ a2 b2 #i2.
       (Commit( a2, b2, <'Responder', 'Initiator', t> ) @ #i2)
      ∧
       ¬(#i2 = #i)))) ∧
  (∀ #r. (Reveal( 'ID_SIGN', a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( 'ID_SIGN', b ) @ #r) ⇒ ⊥) ∧
  (∀ #j. (Reveal( 'PKG', 'SIGN' ) @ #j) ⇒ ⊥)"
*/
by sorry

lemma executability_lemma:
  exists-trace
  "∃ #i.
    ((Full( ) @ #i) ∧
     (∀ #i.1 #j #k.
       (((User( ) @ #i.1) ∧ (User( ) @ #j)) ∧ (User( ) @ #k)) ⇒
       (((#i.1 = #j) ∨ (#j = #k)) ∨ (#i.1 = #k)))) ∧
    (¬(∃ X Y #r. Reveal( X, Y ) @ #r))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Full( ) @ #i)
 ∧
  (∀ #i.1 #j #k.
    (User( ) @ #i.1) ∧ (User( ) @ #j) ∧ (User( ) @ #k)
   ⇒
    ((#i.1 = #j) ∨ (#j = #k) ∨ (#i.1 = #k))) ∧
  (∀ X Y #r. (Reveal( X, Y ) @ #r) ⇒ ⊥)"
*/
simplify
solve( St_Resp_1( ~id, Resp, Auth_pk, Auth_sk,
                  GetIBMasterPublicKey(x), Sign_sk, resp_share, Ini, ini_share, key
       ) ▶₀ #i )
  case Responder_1recv_send
  solve( !KU( idsign(pmult(~b, 'P'),
                     IBPriv(Ini, ~IBMasterPrivateKey.1))
         ) @ #vk )
    case Initiator_2recv_send
    solve( !KU( idsign(<pmult(~a, 'P'), pmult(~b, 'P')>,
                       IBPriv(Resp, ~IBMasterPrivateKey.1))
           ) @ #vk.8 )
      case Responder_1recv_send
      solve( !KU( pmult(~b, 'P') ) @ #vk.8 )
        case Responder_1recv_send
        solve( !KU( pmult(~a, 'P') ) @ #vk.6 )
          case Initiator_1send
          solve( (∀ #j.
                   (K( KDF(em('P', 'P')^(~IBMasterPrivateKey*~a*~b)) ) @ #j) ⇒ ⊥)  ∥
                 (∃ K X #l. (Reveal( K, X ) @ #l)) )
            case case_1
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end