theory RF_dist_bound
begin

section{* RF Distance Bounding Protocol from the Usenix Paper of Kaspar
Rasmusson *}

/* Modeler: Simon Meier
   Date:   January, 2011
   Status: Incomplete
*/

builtins: signing, hashing

/* FIXME: Finish example

rule Prov1:
  [ Pub( P ), Fr( Np ) ]
  -->
  [ Prov1( P, Np )
  , Out( sign{h(Np)}sk(lts(P)) ) ]

rule Verif1:
  [ Pub( V ), Fr( Nv ), In( sign{commit}sk(lts(P)) ) ]
  -->
  [ Verif1( V, P, Nv, commit )
  , Challenge( Nv )
  , Out( Nv ) ]

rule Prov2:
  [ Prov1( P, Np ), Challenge( Nv ) ]
  -->
  [ Prov2( P, Np, Nv ), Response( Nv, Np ), Out( Np ) ]

rule Verif2:
  [ Verif1( V, P, Nv, commit ), Response( Nv, Np )
  -->
  [ Verif2( V, P, Nv, Np, commit ), Out( <Nv, Np> ) ]

rule Prov3:
  [ Prov2( P, Np, Nv ), Pub(V) ]
  -->
  [ Prov3( P, V, Np, Nv ), Out( sign{V, Np, Nv}sk(lts(P)) ) ]

rule Verif3:
  [ Verif2( V, P, Nv, Np, commit ), In( sign{V, Np, Nv}sk(lts(P)) ) ]
  -->
  [ Verif3( V, P, Nv, Np, commit ) ]


/*
lemma Verif_auth:
  " vv :> Verif3( V, P, Nv, Np, commit ) & commit = h(Np) &
    vr :> Response( Np, Nv )
    ==>
    (Ex vp. vp :> Prov3( P, V, Np, Nv ) )
  "

*/


/*
lemma lts_secrecy:
  "vk <: Msg(lts(x)) ==>
   (Ex vr. vr :> Ltsr(x) & vr >+> vk)
  "
*/

lemma C_k_secrecy:
  "vc :> CR_C_1( S, k) &
   vk <: Msg(k)
   ==>
   (Ex vr. vr :> Ltsr(S) & vr >+> vk)
  "

lemma C_niagree:
  " vc :> CR_C_2(cS, ck)
    ==>
    (Ex sS sk vs.
        vs :> CR_S_1(sS, sk) &
        <sS, sk> = <cS, ck>
    )
    |
    (Ex vr. vr :> Ltsr(cS) & vr >+> vc)
  "
*/

end
