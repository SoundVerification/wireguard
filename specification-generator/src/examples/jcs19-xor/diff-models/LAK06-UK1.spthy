theory LAK06_UK1 begin

// This theory models LAK06 as taken from [1].
//
// The key chaining as in actual LAK06 is NOT part of this model.
//
// This models specifies weak unlinkability [1] for two sessions of tag and
// reader. Tamarin proves the absence of attack for such a model as claimed
// [1]. Note that the protocol does not satisfy a stronger notion of
// unlinkability; see the file LAK06_UK.spthy.

// [1] Attacks on RFID protocols" v1.1 from Aug 6, 2009, by Ton van Deursen and Sasa Radomirovic

builtins: xor, hashing, multiset

/*
  R -> T: r0
  T -> R: r1, h(r0 XOR r1 XOR k) 
  R -> T: h(h(r0 XOR r1 XOR k) XOR k XOR r0)

*/

rule setup:
   let id1 = ~k1
       id2 = ~k2
       idb = diff(~k1, ~k2)
   in
   [ Fr( ~k1 )
   , Fr( ~k2 )
   ]
 --[ OnlyOnce('setup'), Create(~k1), Create(~k2) ]->
   [ TagRun(id1, 'learning')
   , TagRun(id2, 'learning')
   , TagRun(idb, 'guessing')
   ]

rule initiatereader:
  [ ReaderRun(~k, phase), Fr(~r0)]
--[ Phase(phase)]->
  [ ReaderState1(~k, ~r0, phase), Out(~r0) ]

rule tag1:
  [ TagRun(~k, phase), Fr(~r1), In(r0) ]
  --[ Running(<'R','T',<~k,r0,~r1>>), Phase(phase) ]->
  [ TagState1(~k, ~r1, r0, phase), Out(<~r1, h(r0 XOR ~r1 XOR ~k)>) ]

rule acceptreader:
  [ ReaderState1(~k, ~r0, phase), In(<r1, h(~r0 XOR r1 XOR ~k)>) ]
--[ Commit(<'R','T',<~k,~r0,r1>>)
  , Running(<'T','R',<~k,~r0,r1>>), Phase(phase) ]->
  [ Out(h(h(~r0 XOR r1 XOR ~k) XOR ~k XOR ~r0)) ]

rule accepttag:
  [ TagState1(~k, ~r1, r0, phase), In(h(h(r0 XOR ~r1 XOR ~k) XOR ~k XOR r0)) ]
--[ Commit(<'T','R',<~k,r0,~r1>>)
  , FinTag(), Phase(phase)]->
  [ ]

restriction onylOnce:
  "All x #i1 #i2. OnlyOnce(x)@i1 & OnlyOnce(x)@i2 ==> #i1 = #i2"

// AUTOMATICALLY PROVEN
lemma executable:
  exists-trace
  " (Ex #i. FinTag()@i)
  & (All x #i1 #i2. OnlyOnce(x)@i1 & OnlyOnce(x)@i2 ==> #i1 = #i2)"

// AUTOMATICALLY PROVEN
// Observational Equivalence

end
