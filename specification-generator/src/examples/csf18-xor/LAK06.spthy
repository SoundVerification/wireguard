theory LAK06
begin

// This theory models LAK06 as taken from "Attacks on RFID protocols" v1.1
// from Aug 6, 2009, by Ton van Deursen and Sasa Radomirovic
//
// This model is heavily restricted, allowing only one pair of Reader/Tag and
// only one single run by the reader. Still, it shows that noninjective agreement
// for the Reader is indeed violated (valid attack found!). The 'proof' for
// noninjective agreement for the Tag only holds in this very restricted model.

// The key chaining as in actual LAK06 is NOT part of this model, and neither
// is a check for untraceability of the tag, which would require this key
// chain to work.

builtins: xor, hashing

/*
  R -> T: r0
  T -> R: r1, h(r0 XOR r1 XOR k) 
  R -> R: h(h(r0 XOR r1 XOR k) XOR k XOR r0)

*/
rule setup:
  [Fr(~k)]
--[ OnlyOnce('setup'), Create(~k) ]->
  [!Reader(~k), !Tag(~k)]

rule initiatereader:
  [!Reader(~k), Fr(~r0)]
--[ OnlyOnce('initiareader')]->
  [ ReaderState1(~k, ~r0), Out(~r0) ]

rule tag1:
  [ !Tag(~k), Fr(~r1), In(r0) ]
  --[ Running(<'R','T',<~k,r0,~r1>>) ]->
  [ TagState1(~k, ~r1, r0), Out(<~r1, h(r0 XOR ~r1 XOR ~k)>) ]

rule acceptreader:
  [ ReaderState1(~k, ~r0), In(<r1, h(~r0 XOR r1 XOR ~k)>) ]
--[ Commit(<'R','T',<~k,~r0,r1>>)
  , Running(<'T','R',<~k,~r0,r1>>) ]->
  [ Out(h(h(~r0 XOR r1 XOR ~k) XOR ~k XOR ~r0)) ]

rule accepttag:
  [ TagState1(~k, ~r1, r0), In(h(h(r0 XOR ~r1 XOR ~k) XOR ~k XOR r0)) ]
--[ Commit(<'T','R',<~k,r0,~r1>>)
  , FinTag()]->
  [ ]


// PROVEN, instant autoproof
lemma executable:
  exists-trace
  " (Ex #i. FinTag()@i)
  & (All x #i1 #i2. OnlyOnce(x)@i1 & OnlyOnce(x)@i2 ==> #i1 = #i2)"

// PROVEN, instant autoproof
lemma helpingSecrecy[reuse]:
  "All k #i. 
     Create(k)@i ==> not(Ex #j. K(k)@j)"

// PROVEN, autoproof (~1 minute CPU)
lemma noninjectiveagreementTAG[use_induction]:
  "All t #i. 
    Commit(<'T','R',t>) @i
    ==> (Ex #j. Running(<'T','R',t>) @j)"

// FALSIFIED, quick autoproof
lemma noninjectiveagreementREADER[use_induction]:
  "All t #i. 
    Commit(<'R','T',t>) @i
    ==> (Ex #j. Running(<'R','T',t>) @j)"

end
