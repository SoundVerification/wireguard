theory CH07_untrac begin

// Function signature and definition of the equational theory E

builtins: multiset, xor
functions: fst/1, h/1, lh/1, pair/2, rh/1, rot/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2

rule (modulo E) Setup:
   [ Fr( ~k1 ), Fr( ~id1 ), Fr( ~k2 ), Fr( ~id2 ) ]
  --[ OnlyOnce( ) ]->
   [
   Reader( ('1'+
            diff((<~k1, ~id1>+<~k2, ~id2>), (<~k1, ~id1>+<~k1, ~id1>)))
   ),
   Tag( ('1'+
         diff((<~k1, ~id1>+<~k2, ~id2>), (<~k1, ~id1>+<~k1, ~id1>)))
   )
   ]

rule (modulo E) select_tag:
   [ Tag( (z+<~k, ~id>) ) ]
  --[ Tag( (z+<~k, ~id>) ) ]->
   [ TagRun( ~k, ~id ), Tag( z ) ]

rule (modulo E) select_reader:
   [ Reader( (z+<~k, ~id>) ) ]
  --[ Reader( (z+<~k, ~id>) ) ]->
   [ ReaderRun( ~k, ~id ), Reader( z ) ]

rule (modulo E) reader1:
   [ Fr( ~r1 ) ]
  --[ Challenge( ~r1, 'Reader' ) ]->
   [ Out( ~r1 ), Initiated( ~r1 ) ]

rule (modulo E) tag1:
   [ In( r1 ), Fr( ~r2 ), TagRun( ~k, ~id ) ]
  --[ Response( ~k, 'Tag' ), Challenge( ~r2, 'Tag' ) ]->
   [
   Out( <~r2, lh(rot(~id, h((~k⊕~r2⊕r1))))> ),
   TagState( ~k, ~id, r1, ~r2, h((~k⊕~r2⊕r1)) )
   ]

rule (modulo E) reader2:
   [
   Initiated( ~r1 ), ReaderRun( ~k, ~id ),
   In( <r2, lh(rot(~id, hash))> )
   ]
  --[
  Alive( ~k, 'Tag' ), Response( ~k, 'Reader' ),
  Eq( h((~k⊕~r1⊕r2)), hash )
  ]->
   [ Out( rh(rot(~id, hash)) ) ]

rule (modulo E) tag2:
   [ In( rh(rot(~id, hash)) ), TagState( ~k, ~id, r1, ~r2, hash ) ]
  --[ Alive( ~k, 'Reader' ) ]->
   [ ]

restriction equality [right]:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction equality [left]:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction max_number_of_tags_tag [right]:
  "∀ a b c d #i. (Tag( (a+b+c+d) ) @ #i) ⇒ (⊥)"
  // safety formula

restriction max_number_of_tags_tag [left]:
  "∀ a b c d #i. (Tag( (a+b+c+d) ) @ #i) ⇒ (⊥)"
  // safety formula

restriction max_number_of_tags_tag_reader [right]:
  "∀ a b c d #i. (Reader( (a+b+c+d) ) @ #i) ⇒ (⊥)"
  // safety formula

restriction max_number_of_tags_tag_reader [left]:
  "∀ a b c d #i. (Reader( (a+b+c+d) ) @ #i) ⇒ (⊥)"
  // safety formula

restriction unique [right]:
  "∀ #i #j. ((OnlyOnce( ) @ #i) ∧ (OnlyOnce( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction unique [left]:
  "∀ #i #j. ((OnlyOnce( ) @ #i) ∧ (OnlyOnce( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma recentalive_tag [right]:
  all-traces
  "∀ x #i.
    (Alive( x, 'Tag' ) @ #i) ⇒
    (∃ y #j #k.
      (((Challenge( y, 'Reader' ) @ #k) ∧ (Response( x, 'Tag' ) @ #j)) ∧
       (#k < #j)) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i.
  (Alive( x, 'Tag' ) @ #i)
 ∧
  ∀ y #j #k.
   (Challenge( y, 'Reader' ) @ #k) ∧ (Response( x, 'Tag' ) @ #j)
  ⇒
   ((¬(#k < #j)) ∨ (¬(#j < #i)))"
*/
by sorry

lemma recentalive_tag [left]:
  all-traces
  "∀ x #i.
    (Alive( x, 'Tag' ) @ #i) ⇒
    (∃ y #j #k.
      (((Challenge( y, 'Reader' ) @ #k) ∧ (Response( x, 'Tag' ) @ #j)) ∧
       (#k < #j)) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i.
  (Alive( x, 'Tag' ) @ #i)
 ∧
  ∀ y #j #k.
   (Challenge( y, 'Reader' ) @ #k) ∧ (Response( x, 'Tag' ) @ #j)
  ⇒
   ((¬(#k < #j)) ∨ (¬(#j < #i)))"
*/
by sorry

lemma recentalive_reader [right]:
  all-traces
  "∀ x #i.
    (Alive( x, 'Reader' ) @ #i) ⇒
    (∃ y #j #k.
      (((Challenge( y, 'Tag' ) @ #k) ∧ (Response( x, 'Reader' ) @ #j)) ∧
       (#k < #j)) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i.
  (Alive( x, 'Reader' ) @ #i)
 ∧
  ∀ y #j #k.
   (Challenge( y, 'Tag' ) @ #k) ∧ (Response( x, 'Reader' ) @ #j)
  ⇒
   ((¬(#k < #j)) ∨ (¬(#j < #i)))"
*/
by sorry

lemma recentalive_reader [left]:
  all-traces
  "∀ x #i.
    (Alive( x, 'Reader' ) @ #i) ⇒
    (∃ y #j #k.
      (((Challenge( y, 'Tag' ) @ #k) ∧ (Response( x, 'Reader' ) @ #j)) ∧
       (#k < #j)) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i.
  (Alive( x, 'Reader' ) @ #i)
 ∧
  ∀ y #j #k.
   (Challenge( y, 'Tag' ) @ #k) ∧ (Response( x, 'Reader' ) @ #j)
  ⇒
   ((¬(#k < #j)) ∨ (¬(#j < #i)))"
*/
by sorry

lemma executable [right]:
  exists-trace
  "∃ x #i #j.
    (Alive( x, 'Reader' ) @ #i) ∧ (Response( x, 'Tag' ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"∃ x #i #j.
  (Alive( x, 'Reader' ) @ #i) ∧ (Response( x, 'Tag' ) @ #j)"
*/
by sorry

lemma executable [left]:
  exists-trace
  "∃ x #i #j.
    (Alive( x, 'Reader' ) @ #i) ∧ (Response( x, 'Tag' ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"∃ x #i #j.
  (Alive( x, 'Reader' ) @ #i) ∧ (Response( x, 'Tag' ) @ #j)"
*/
by sorry

diffLemma Observational_equivalence:
rule-equivalence
  case Rule_Destrd_0_fst
  backward-search
    case LHS
    step( simplify )
    step( solve( !KD( <x, x.1> ) ▶₀ #i ) )
      case reader1
      by step( contradiction )
    next
      case reader2
      by step( solve( (#vl, 0) ~~> (#i, 0) ) )
    next
      case tag1
      step( solve( (#vl, 0) ~~> (#i, 0) ) )
        case d_0_fst
        by step( contradiction )
      next
        case d_0_snd
        by step( solve( (#vr.1, 0) ~~> (#i, 0) ) )
      next
        case pair
        step( solve( !KU( r1 ) @ #vk ) )
          case c_fst
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( fst(x) ) @ #vk ) )
                case c_fst
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( fst(x) ) @ #vk ) )
                case c_fst
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( fst(x) ) @ #vk ) )
                  case c_fst
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( fst(x) ) @ #vk ) )
                  case c_fst
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_h
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( h(x) ) @ #vk ) )
                case c_h
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( h(x) ) @ #vk ) )
                case c_h
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( h(x) ) @ #vk ) )
                  case c_h
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( h(x) ) @ #vk ) )
                  case c_h
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_lh
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( lh(x) ) @ #vk ) )
                case c_lh
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( lh(x) ) @ #vk ) )
                case c_lh
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( lh(x) ) @ #vk ) )
                  case c_lh
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( lh(x) ) @ #vk ) )
                  case c_lh
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_pair
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( splitEqs(0) ) )
                case split
                MIRRORED
              qed
            next
              case Setup_case_2
              step( solve( splitEqs(0) ) )
                case split
                MIRRORED
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              next
                case Setup_case_2
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_rh
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( rh(x) ) @ #vk ) )
                case c_rh
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( rh(x) ) @ #vk ) )
                case c_rh
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( rh(x) ) @ #vk ) )
                  case c_rh
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( rh(x) ) @ #vk ) )
                  case c_rh
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_rot
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( rot(x, x.1) ) @ #vk ) )
                case c_rot
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( rot(x, x.1) ) @ #vk ) )
                case c_rot
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( rot(x, x.1) ) @ #vk ) )
                  case c_rot
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( rot(x, x.1) ) @ #vk ) )
                  case c_rot
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case c_snd
          step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
            case select_tag
            step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.1 ) )
              case Setup_case_1
              step( solve( !KU( snd(x) ) @ #vk ) )
                case c_snd
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case Setup_case_2
              step( solve( !KU( snd(x) ) @ #vk ) )
                case c_snd
                step( solve( splitEqs(0) ) )
                  case split
                  MIRRORED
                qed
              qed
            next
              case select_tag
              step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                case Setup_case_1
                step( solve( !KU( snd(x) ) @ #vk ) )
                  case c_snd
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case Setup_case_2
                step( solve( !KU( snd(x) ) @ #vk ) )
                  case c_snd
                  step( solve( splitEqs(0) ) )
                    case split
                    MIRRORED
                  qed
                qed
              next
                case select_tag
                by step( contradiction )
              qed
            qed
          qed
        next
          case coerce
          step( solve( !KD( r1 ) ▶₀ #vk ) )
            case reader1
            step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
              case Var_fresh_1_r1
              step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
                case select_tag
                step( solve( Tag( (z.1+<~k, ~id>) ) ▶₀ #vr.2 ) )
                  case Setup_case_1
                  step( solve( !KU( ~r1 ) @ #vk ) )
                    case reader1
                    step( solve( splitEqs(0) ) )
                      case split
                      MIRRORED
                    qed
                  qed
                next
                  case Setup_case_2
                  step( solve( !KU( ~r1 ) @ #vk ) )
                    case reader1
                    step( solve( splitEqs(0) ) )
                      case split
                      MIRRORED
                    qed
                  qed
                next
                  case select_tag
                  step( solve( Tag( (z.1+<~k, ~id>+<~k.1, ~id.1>) ) ▶₀ #vr.3 ) )
                    case Setup_case_1
                    step( solve( !KU( ~r1 ) @ #vk ) )
                      case reader1
                      step( solve( splitEqs(0) ) )
                        case split
                        MIRRORED
                      qed
                    qed
                  next
                    case Setup_case_2
                    step( solve( !KU( ~r1 ) @ #vk ) )
                      case reader1
                      step( solve( splitEqs(0) ) )
                        case split
                        MIRRORED
                      qed
                    qed
                  next
                    case select_tag
                    by step( contradiction )
                  qed
                qed
              qed
            qed
          next
            case reader2
            step( solve( ReaderRun( ~k.1, ~id.1 ) ▶₁ #vr.1 ) )
              case select_reader
              step( solve( TagRun( ~k, ~id ) ▶₂ #vr ) )
                case select_tag
                step( solve( Tag( (z.3+<~k, ~id>) ) ▶₀ #vr.3 ) )
                  case Setup_case_1
                  step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                    case Setup_case_1
                    step( solve( Initiated( ~r1.1 ) ▶₀ #vr.1 ) )
                      case reader1
                      step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                        case rh
                        step( solve( !KU( rh(rot(~id, h(z.1))) ) @ #vk ) )
                          case reader2
                          step( solve( !KU( lh(rot(~id, h(z.1))) ) @ #vk.3 ) )
                            case c_lh
                            step( solve( !KU( rot(~id, h(z.1)) ) @ #vk.4 ) )
                              case c_rot
                              by step( solve( !KU( ~id ) @ #vk.5 ) )
                            qed
                          next
                            case tag1
                            step( solve( Tag( (z.2+<~k.1, ~id>) ) ▶₀ #vr.8 ) )
                              case select_tag
                              step( solve( Tag( (z.2+<~k.1, ~id>+<~k.2, ~id.1>) ) ▶₀ #vr.9 ) )
                                case select_tag
                                by step( contradiction )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case Setup_case_2
                    step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                      case rh
                      step( solve( Initiated( ~r1 ) ▶₀ #vr.1 ) )
                        case reader1
                        step( solve( !KU( lh(rot(~id2, h(z.1))) ) @ #vk.3 ) )
                          case c_lh
                          step( solve( !KU( rot(~id2, h(z.1)) ) @ #vk.4 ) )
                            case c_rot
                            by step( solve( !KU( ~id2 ) @ #vk.5 ) )
                          qed
                        next
                          case tag1
                          step( solve( Tag( (z.2+<~k.1, ~id2>) ) ▶₀ #vr.8 ) )
                            case select_tag
                            step( solve( Tag( (z.2+<~k.1, ~id2>+<~k.2, ~id.1>) ) ▶₀ #vr.9 ) )
                              case Setup
                              step( solve( !KU( rh(rot(~id2, h(z.1))) ) @ #vk ) )
                                case reader2
                                step( solve( !KU( r2.1 ) @ #vk.3 ) )
                                  case c_fst
                                  step( solve( !KU( fst(x) ) @ #vk.3 ) )
                                    case c_fst
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕fst(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕fst(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕fst(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕fst(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_h
                                  step( solve( !KU( h(x) ) @ #vk.3 ) )
                                    case c_h
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕h(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕h(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕h(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕h(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_lh
                                  step( solve( !KU( lh(x) ) @ #vk.3 ) )
                                    case c_lh
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕lh(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕lh(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕lh(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕lh(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_pair
                                  step( solve( splitEqs(0) ) )
                                    case split
                                    step( solve( splitEqs(1) ) )
                                      case split
                                      step( solve( splitEqs(2) ) )
                                        case split_case_1
                                        step( solve( !KU( (~r1⊕~r2.1⊕<x, x.1>) ) @ #vk.4 ) )
                                          case coerce
                                          step( solve( !KD( (~r1⊕~r2.1⊕<x, x.1>) ) ▶₀ #vk.4 ) )
                                            case reader1
                                            by step( contradiction )
                                          next
                                            case reader2
                                            by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                          next
                                            case tag1
                                            step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              case d_0_fst
                                              by step( contradiction )
                                            next
                                              case d_0_snd
                                              by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case split_case_2
                                        step( solve( !KU( (~r2.1⊕<x, x.1>) ) @ #vk.7 ) )
                                          case coerce
                                          step( solve( !KD( (~r2.1⊕<x, x.1>) ) ▶₀ #vk.5 ) )
                                            case reader1
                                            by step( contradiction )
                                          next
                                            case reader2
                                            by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                          next
                                            case tag1
                                            step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              case d_0_fst
                                              by step( contradiction )
                                            next
                                              case d_0_snd
                                              by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case split_case_3
                                        step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                          case tag1_case_1
                                          by step( contradiction )
                                        next
                                          case tag1_case_2
                                          by step( contradiction )
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_rh
                                  step( solve( !KU( rh(x) ) @ #vk.3 ) )
                                    case c_rh
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕rh(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕rh(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕rh(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕rh(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_rot
                                  step( solve( !KU( rot(x, x.1) ) @ #vk.3 ) )
                                    case c_rot
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕rot(x, x.1)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕rot(x, x.1)) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_snd
                                  step( solve( !KU( snd(x) ) @ #vk.3 ) )
                                    case c_snd
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕snd(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕snd(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕snd(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕snd(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case coerce
                                  step( solve( !KD( r2.1 ) ▶₀ #vk.3 ) )
                                    case reader1
                                    step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                      case Var_fresh_2_r1
                                      step( solve( !KU( ~r1 ) @ #vk.3 ) )
                                        case reader1
                                        step( solve( splitEqs(0) ) )
                                          case split
                                          step( solve( splitEqs(1) ) )
                                            case split_case_1
                                            step( solve( !KU( ~r2.1 ) @ #vk.4 ) )
                                              case tag1
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( splitEqs(2) ) )
                                              case split_case_1
                                              step( solve( !KU( (~r1⊕~r1.1⊕~r2.1) ) @ #vk.4 ) )
                                                case coerce
                                                step( solve( !KD( (~r1⊕~r1.1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              step( solve( !KU( (~r1.1⊕~r2.1) ) @ #vk.5 ) )
                                                case coerce
                                                step( solve( !KD( (~r1.1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                                case coerce
                                                step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_4
                                              step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                case tag1_case_1
                                                by step( contradiction )
                                              next
                                                case tag1_case_2
                                                by step( contradiction )
                                              qed
                                            next
                                              case split_case_5
                                              step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                case tag1_case_1
                                                by step( contradiction )
                                              next
                                                case tag1_case_2
                                                by step( contradiction )
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case reader2
                                    step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                      case rh
                                      step( solve( Initiated( ~r1.2 ) ▶₀ #vr.9 ) )
                                        case reader1
                                        step( solve( ReaderRun( ~k.1, ~id.1 ) ▶₁ #vr.9 ) )
                                          case select_reader
                                          step( solve( !KU( lh(rot(~id.1, h(z.2))) ) @ #vk.7 ) )
                                            case c_lh
                                            step( solve( !KU( rot(~id.1, h(z.2)) ) @ #vk.8 ) )
                                              case c_rot
                                              step( solve( !KU( ~id.1 ) @ #vk.9 ) )
                                                case fresh
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.2, ~id.2>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              next
                                                case reader1
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.2, ~id.2>)
                                                               ) ▶₀ #vr.13 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              next
                                                case tag1
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Tag( (z.5+<~k.2, ~id.2>)
                                                               ) ▶₀ #vr.14 ) )
                                                    case Setup
                                                    by step( contradiction )
                                                  next
                                                    case select_tag
                                                    step( solve( Reader( (z.4+<~k.1, ~id.1>+
                                                                          <~k.3, ~id.3>)
                                                                 ) ▶₀ #vr.15 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case tag1
                                            step( solve( Reader( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                              case select_reader
                                              step( solve( Tag( (z.4+<~k.2, ~id.1>) ) ▶₀ #vr.14 ) )
                                                case Setup
                                                by step( contradiction )
                                              next
                                                case select_tag
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                      <~k.3, ~id.2>)
                                                             ) ▶₀ #vr.15 ) )
                                                  case Setup
                                                  step( solve( Tag( (z.3+<~k.1, ~id>+<~k.2, ~id.1>)
                                                               ) ▶₀ #vr.15 ) )
                                                    case select_tag
                                                    by step( contradiction )
                                                  qed
                                                next
                                                  case select_reader
                                                  by step( contradiction )
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case tag1
                                    step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                      case d_0_fst
                                      step( solve( (#vr.10, 0) ~~> (#vk.3, 0) ) )
                                        case Var_fresh_3_r2
                                        step( solve( TagRun( ~k.1, ~id.1 ) ▶₂ #vr.9 ) )
                                          case select_tag
                                          step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case Setup
                                              step( solve( !KU( ~r2.1 ) @ #vk.3 ) )
                                                case tag1
                                                step( solve( splitEqs(0) ) )
                                                  case split
                                                  step( solve( splitEqs(1) ) )
                                                    case split
                                                    step( solve( !KU( ~r1 ) @ #vk.4 ) )
                                                      case reader1
                                                      MIRRORED
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case select_tag
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_0_snd
                                      step( solve( (#vr.10, 0) ~~> (#vk.3, 0) ) )
                                        case lh
                                        step( solve( TagRun( ~k.1, ~id.1 ) ▶₂ #vr.9 ) )
                                          case select_tag
                                          step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case select_tag
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case fresh
                                  step( solve( !KU( ~x ) @ #vk.3 ) )
                                    case fresh
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~x⊕~r2.1) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~x⊕~r2.1) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~x⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case pub
                                  step( solve( !KU( $x ) @ #vk.3 ) )
                                    case pub
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( ($x⊕~r1⊕~r2.1) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( ($x⊕~r1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ($x⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( ($x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case select_tag
                              by step( contradiction )
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case select_reader
                    step( solve( Reader( (z.2+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                 ) ▶₀ #vr.5 ) )
                      case Setup_case_1
                      step( solve( Initiated( ~r1.1 ) ▶₀ #vr.1 ) )
                        case reader1
                        step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                          case rh
                          step( solve( !KU( lh(rot(~id, h(z.1))) ) @ #vk.3 ) )
                            case c_lh
                            step( solve( !KU( rot(~id, h(z.1)) ) @ #vk.4 ) )
                              case c_rot
                              by step( solve( !KU( ~id ) @ #vk.5 ) )
                            qed
                          next
                            case tag1
                            step( solve( Tag( (z.2+<~k.1, ~id>) ) ▶₀ #vr.9 ) )
                              case select_tag
                              step( solve( Tag( (z.2+<~k.1, ~id>+<~k.2, ~id.1>) ) ▶₀ #vr.10 ) )
                                case select_tag
                                by step( contradiction )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case Setup_case_2
                      step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                        case rh
                        step( solve( Initiated( ~r1 ) ▶₀ #vr.1 ) )
                          case reader1
                          step( solve( !KU( lh(rot(~id2, h(z.1))) ) @ #vk.3 ) )
                            case c_lh
                            step( solve( !KU( rot(~id2, h(z.1)) ) @ #vk.4 ) )
                              case c_rot
                              by step( solve( !KU( ~id2 ) @ #vk.5 ) )
                            qed
                          next
                            case tag1
                            step( solve( Tag( (z.2+<~k.1, ~id2>) ) ▶₀ #vr.9 ) )
                              case select_tag
                              step( solve( Tag( (z.2+<~k.1, ~id2>+<~k.2, ~id.1>) ) ▶₀ #vr.10 ) )
                                case Setup
                                step( solve( !KU( rh(rot(~id2, h(z.1))) ) @ #vk ) )
                                  case reader2
                                  step( solve( !KU( r2.1 ) @ #vk.3 ) )
                                    case c_fst
                                    step( solve( !KU( fst(x) ) @ #vk.3 ) )
                                      case c_fst
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕fst(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕fst(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕fst(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕fst(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_h
                                    step( solve( !KU( h(x) ) @ #vk.3 ) )
                                      case c_h
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕h(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕h(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕h(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕h(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_lh
                                    step( solve( !KU( lh(x) ) @ #vk.3 ) )
                                      case c_lh
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕lh(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕lh(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕lh(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕lh(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_pair
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕<x, x.1>) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕<x, x.1>) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕<x, x.1>) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕<x, x.1>) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_rh
                                    step( solve( !KU( rh(x) ) @ #vk.3 ) )
                                      case c_rh
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕rh(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕rh(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕rh(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕rh(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_rot
                                    step( solve( !KU( rot(x, x.1) ) @ #vk.3 ) )
                                      case c_rot
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕rot(x, x.1)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕rot(x, x.1))
                                                           ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕rot(x, x.1)) ) @ #vk.7 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.7 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_snd
                                    step( solve( !KU( snd(x) ) @ #vk.3 ) )
                                      case c_snd
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕snd(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕snd(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕snd(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕snd(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case coerce
                                    step( solve( !KD( r2.1 ) ▶₀ #vk.3 ) )
                                      case reader1
                                      step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                        case Var_fresh_2_r1
                                        step( solve( !KU( ~r1 ) @ #vk.3 ) )
                                          case reader1
                                          step( solve( splitEqs(0) ) )
                                            case split
                                            step( solve( splitEqs(1) ) )
                                              case split_case_1
                                              step( solve( !KU( ~r2.1 ) @ #vk.4 ) )
                                                case tag1
                                                by step( contradiction )
                                              qed
                                            next
                                              case split_case_2
                                              step( solve( splitEqs(2) ) )
                                                case split_case_1
                                                step( solve( !KU( (~r1⊕~r1.1⊕~r2.1) ) @ #vk.4 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1⊕~r1.1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.4, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                step( solve( !KU( (~r1.1⊕~r2.1) ) @ #vk.5 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1.1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.5, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_3
                                                step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.5, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_4
                                                step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                  case tag1_case_1
                                                  by step( contradiction )
                                                next
                                                  case tag1_case_2
                                                  by step( contradiction )
                                                qed
                                              next
                                                case split_case_5
                                                step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                  case tag1_case_1
                                                  by step( contradiction )
                                                next
                                                  case tag1_case_2
                                                  by step( contradiction )
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case reader2
                                      step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                        case rh
                                        step( solve( Initiated( ~r1.2 ) ▶₀ #vr.10 ) )
                                          case reader1
                                          step( solve( ReaderRun( ~k.1, ~id.1 ) ▶₁ #vr.10 ) )
                                            case select_reader
                                            step( solve( !KU( lh(rot(~id.1, h(z.2))) ) @ #vk.7 ) )
                                              case c_lh
                                              step( solve( !KU( rot(~id.1, h(z.2)) ) @ #vk.8 ) )
                                                case c_rot
                                                step( solve( !KU( ~id.1 ) @ #vk.9 ) )
                                                  case fresh
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case select_reader
                                                    step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                          <~k.2, ~id.2>)
                                                                 ) ▶₀ #vr.13 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  qed
                                                next
                                                  case reader1
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case select_reader
                                                    step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                          <~k.2, ~id.2>)
                                                                 ) ▶₀ #vr.14 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  qed
                                                next
                                                  case tag1
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case select_reader
                                                    step( solve( Tag( (z.5+<~k.2, ~id.2>)
                                                                 ) ▶₀ #vr.15 ) )
                                                      case Setup
                                                      by step( contradiction )
                                                    next
                                                      case select_tag
                                                      step( solve( Reader( (z.4+<~k.1, ~id.1>+
                                                                            <~k.3, ~id.3>)
                                                                   ) ▶₀ #vr.16 ) )
                                                        case select_reader
                                                        by step( contradiction )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case tag1
                                              step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                           ) ▶₀ #vr.12 ) )
                                                case Setup
                                                step( solve( Tag( (z.3+<~k.1, ~id>) ) ▶₀ #vr.14 ) )
                                                  case Setup
                                                  by step( contradiction )
                                                next
                                                  case select_tag
                                                  step( solve( Tag( (z.3+<~k.1, ~id>+<~k.2, ~id.1>)
                                                               ) ▶₀ #vr.15 ) )
                                                    case select_tag
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              next
                                                case select_reader
                                                step( solve( Tag( (z.4+<~k.2, ~id.1>)
                                                             ) ▶₀ #vr.15 ) )
                                                  case Setup
                                                  by step( contradiction )
                                                next
                                                  case select_tag
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.3, ~id.2>)
                                                               ) ▶₀ #vr.16 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case tag1
                                      step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                        case d_0_fst
                                        step( solve( (#vr.11, 0) ~~> (#vk.3, 0) ) )
                                          case Var_fresh_3_r2
                                          step( solve( TagRun( ~k.1, ~id.1 ) ▶₂ #vr.10 ) )
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.12 ) )
                                              case Setup
                                              by step( contradiction )
                                            next
                                              case select_tag
                                              step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                           ) ▶₀ #vr.13 ) )
                                                case Setup
                                                step( solve( !KU( ~r2.1 ) @ #vk.3 ) )
                                                  case tag1
                                                  step( solve( splitEqs(0) ) )
                                                    case split
                                                    step( solve( splitEqs(1) ) )
                                                      case split
                                                      step( solve( !KU( ~r1 ) @ #vk.4 ) )
                                                        case reader1
                                                        MIRRORED
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case select_tag
                                                by step( contradiction )
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case d_0_snd
                                        step( solve( (#vr.11, 0) ~~> (#vk.3, 0) ) )
                                          case lh
                                          step( solve( TagRun( ~k.1, ~id.1 ) ▶₂ #vr.10 ) )
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.12 ) )
                                              case Setup
                                              by step( contradiction )
                                            next
                                              case select_tag
                                              step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                           ) ▶₀ #vr.13 ) )
                                                case select_tag
                                                by step( contradiction )
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case fresh
                                    step( solve( !KU( ~x ) @ #vk.3 ) )
                                      case fresh
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~x⊕~r2.1) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~x⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~x⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case pub
                                    step( solve( !KU( $x ) @ #vk.3 ) )
                                      case pub
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( ($x⊕~r1⊕~r2.1) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( ($x⊕~r1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ($x⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( ($x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case select_tag
                                by step( contradiction )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case select_reader
                      by step( contradiction )
                    qed
                  qed
                next
                  case Setup_case_2
                  step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                    case rh
                    step( solve( Initiated( ~r1 ) ▶₀ #vr.1 ) )
                      case reader1
                      step( solve( !KU( lh(rot(~id.1, h(z.1))) ) @ #vk.3 ) )
                        case c_lh
                        step( solve( !KU( rot(~id.1, h(z.1)) ) @ #vk.4 ) )
                          case c_rot
                          step( solve( !KU( ~id.1 ) @ #vk.5 ) )
                            case fresh
                            step( solve( !KU( h(z.1) ) @ #vk.6 ) )
                              case c_h
                              step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                                case select_reader
                                step( solve( Reader( (z.2+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                             ) ▶₀ #vr.6 ) )
                                  case select_reader
                                  by step( contradiction )
                                qed
                              qed
                            qed
                          next
                            case reader1
                            step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                              case select_reader
                              step( solve( Reader( (z.2+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                           ) ▶₀ #vr.7 ) )
                                case select_reader
                                by step( contradiction )
                              qed
                            qed
                          next
                            case tag1
                            step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                              case select_reader
                              step( solve( Tag( (z.4+<~k.2, ~id.2>) ) ▶₀ #vr.8 ) )
                                case Setup
                                by step( contradiction )
                              next
                                case select_tag
                                step( solve( Reader( (z.3+<~k.1, ~id.1>+<~k.3, ~id.3>)
                                             ) ▶₀ #vr.9 ) )
                                  case select_reader
                                  by step( contradiction )
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case tag1
                        step( solve( Tag( (z.3+<~k.2, ~id.1>) ) ▶₀ #vr.8 ) )
                          case select_tag
                          step( solve( Tag( (z.3+<~k.2, ~id.1>+<~k.3, ~id.2>) ) ▶₀ #vr.9 ) )
                            case Setup
                            step( solve( !KU( rh(rot(~id1, h(z.1))) ) @ #vk ) )
                              case reader2
                              step( solve( !KU( r2.1 ) @ #vk.3 ) )
                                case c_fst
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( fst(x) ) @ #vk.3 ) )
                                    case c_fst
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕fst(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕fst(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕fst(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕fst(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( fst(x) ) @ #vk.3 ) )
                                      case c_fst
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕fst(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕fst(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕fst(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕fst(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_h
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( h(x) ) @ #vk.3 ) )
                                    case c_h
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕h(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕h(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕h(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕h(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( h(x) ) @ #vk.3 ) )
                                      case c_h
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕h(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕h(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕h(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕h(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_lh
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( lh(x) ) @ #vk.3 ) )
                                    case c_lh
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕lh(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕lh(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕lh(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕lh(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( lh(x) ) @ #vk.3 ) )
                                      case c_lh
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕lh(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕lh(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕lh(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕lh(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_pair
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( splitEqs(0) ) )
                                    case split
                                    step( solve( splitEqs(1) ) )
                                      case split
                                      step( solve( splitEqs(2) ) )
                                        case split_case_1
                                        step( solve( !KU( (~r1⊕~r2.1⊕<x, x.1>) ) @ #vk.4 ) )
                                          case coerce
                                          step( solve( !KD( (~r1⊕~r2.1⊕<x, x.1>) ) ▶₀ #vk.4 ) )
                                            case reader1
                                            by step( contradiction )
                                          next
                                            case reader2
                                            by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                          next
                                            case tag1
                                            step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              case d_0_fst
                                              by step( contradiction )
                                            next
                                              case d_0_snd
                                              by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case split_case_2
                                        step( solve( !KU( (~r2.1⊕<x, x.1>) ) @ #vk.7 ) )
                                          case coerce
                                          step( solve( !KD( (~r2.1⊕<x, x.1>) ) ▶₀ #vk.5 ) )
                                            case reader1
                                            by step( contradiction )
                                          next
                                            case reader2
                                            by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                          next
                                            case tag1
                                            step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              case d_0_fst
                                              by step( contradiction )
                                            next
                                              case d_0_snd
                                              by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case split_case_3
                                        step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                          case tag1_case_1
                                          by step( contradiction )
                                        next
                                          case tag1_case_2
                                          by step( contradiction )
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕<x, x.1>) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕<x, x.1>) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕<x, x.1>) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕<x, x.1>) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_rh
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( rh(x) ) @ #vk.3 ) )
                                    case c_rh
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕rh(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕rh(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕rh(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕rh(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( rh(x) ) @ #vk.3 ) )
                                      case c_rh
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕rh(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕rh(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕rh(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕rh(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_rot
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( rot(x, x.1) ) @ #vk.3 ) )
                                    case c_rot
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕rot(x, x.1)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕rot(x, x.1)) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.7 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( rot(x, x.1) ) @ #vk.3 ) )
                                      case c_rot
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕rot(x, x.1)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕rot(x, x.1))
                                                           ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕rot(x, x.1)) ) @ #vk.7 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕rot(x, x.1)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.8 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.7 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case c_snd
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( snd(x) ) @ #vk.3 ) )
                                    case c_snd
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕snd(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕snd(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕snd(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕snd(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( snd(x) ) @ #vk.3 ) )
                                      case c_snd
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~r2.1⊕snd(x)) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1⊕snd(x)) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r2.1⊕snd(x)) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r2.1⊕snd(x)) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              next
                                case coerce
                                step( solve( !KD( r2.1 ) ▶₀ #vk.3 ) )
                                  case reader1
                                  step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                    case Var_fresh_2_r1
                                    step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                      case Setup
                                      step( solve( !KU( ~r1 ) @ #vk.3 ) )
                                        case reader1
                                        step( solve( splitEqs(0) ) )
                                          case split
                                          step( solve( splitEqs(1) ) )
                                            case split_case_1
                                            step( solve( !KU( ~r2.1 ) @ #vk.4 ) )
                                              case tag1
                                              MIRRORED
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( splitEqs(2) ) )
                                              case split_case_1
                                              step( solve( !KU( (~r1⊕~r1.1⊕~r2.1) ) @ #vk.4 ) )
                                                case coerce
                                                step( solve( !KD( (~r1⊕~r1.1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              step( solve( !KU( (~r1.1⊕~r2.1) ) @ #vk.5 ) )
                                                case coerce
                                                step( solve( !KD( (~r1.1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                                case coerce
                                                step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                  case reader1
                                                  by step( contradiction )
                                                next
                                                  case reader2
                                                  by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                next
                                                  case tag1
                                                  step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                    case d_0_fst
                                                    by step( contradiction )
                                                  next
                                                    case d_0_snd
                                                    by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_4
                                              step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                case tag1_case_1
                                                by step( contradiction )
                                              next
                                                case tag1_case_2
                                                by step( contradiction )
                                              qed
                                            next
                                              case split_case_5
                                              step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                case tag1_case_1
                                                by step( contradiction )
                                              next
                                                case tag1_case_2
                                                by step( contradiction )
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case select_reader
                                      step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                                   ) ▶₀ #vr.10 ) )
                                        case Setup
                                        step( solve( !KU( ~r1 ) @ #vk.3 ) )
                                          case reader1
                                          step( solve( splitEqs(0) ) )
                                            case split
                                            step( solve( splitEqs(1) ) )
                                              case split_case_1
                                              step( solve( !KU( ~r2.1 ) @ #vk.4 ) )
                                                case tag1
                                                MIRRORED
                                              qed
                                            next
                                              case split_case_2
                                              step( solve( splitEqs(2) ) )
                                                case split_case_1
                                                step( solve( !KU( (~r1⊕~r1.1⊕~r2.1) ) @ #vk.4 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1⊕~r1.1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.4, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.4, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                step( solve( !KU( (~r1.1⊕~r2.1) ) @ #vk.5 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1.1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.5, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_3
                                                step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                                  case coerce
                                                  step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                    case reader1
                                                    by step( contradiction )
                                                  next
                                                    case reader2
                                                    by step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                  next
                                                    case tag1
                                                    step( solve( (#vl.4, 0) ~~> (#vk.5, 0) ) )
                                                      case d_0_fst
                                                      by step( contradiction )
                                                    next
                                                      case d_0_snd
                                                      by step( solve( (#vr.12, 0) ~~> (#vk.5, 0) ) )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case split_case_4
                                                step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                  case tag1_case_1
                                                  by step( contradiction )
                                                next
                                                  case tag1_case_2
                                                  by step( contradiction )
                                                qed
                                              next
                                                case split_case_5
                                                step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                                  case tag1_case_1
                                                  by step( contradiction )
                                                next
                                                  case tag1_case_2
                                                  by step( contradiction )
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case select_reader
                                        by step( contradiction )
                                      qed
                                    qed
                                  qed
                                next
                                  case reader2
                                  step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                    case rh
                                    step( solve( Initiated( ~r1.2 ) ▶₀ #vr.9 ) )
                                      case reader1
                                      step( solve( ReaderRun( ~k.2, ~id.1 ) ▶₁ #vr.9 ) )
                                        case select_reader
                                        step( solve( !KU( lh(rot(~id.1, h(z.2))) ) @ #vk.7 ) )
                                          case c_lh
                                          step( solve( !KU( rot(~id.1, h(z.2)) ) @ #vk.8 ) )
                                            case c_rot
                                            step( solve( !KU( ~id.1 ) @ #vk.9 ) )
                                              case fresh
                                              step( solve( Reader( (z.3+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                                case Setup
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.2, ~id.2>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              next
                                                case select_reader
                                                step( solve( Reader( (z.4+<~k.2, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id1>+
                                                                        <~k.3, ~id.2>)
                                                               ) ▶₀ #vr.12 ) )
                                                    case Setup
                                                    step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                          <~k.2, ~id.2>)
                                                                 ) ▶₀ #vr.13 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  next
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case reader1
                                              step( solve( Reader( (z.3+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                                case Setup
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.2, ~id.2>)
                                                               ) ▶₀ #vr.13 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              next
                                                case select_reader
                                                step( solve( Reader( (z.4+<~k.2, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Reader( (z.3+<~k.1, ~id1>+
                                                                        <~k.3, ~id.2>)
                                                               ) ▶₀ #vr.13 ) )
                                                    case Setup
                                                    step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                          <~k.2, ~id.2>)
                                                                 ) ▶₀ #vr.14 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  next
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case tag1
                                              step( solve( Reader( (z.3+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                                case Setup
                                                step( solve( Reader( (z.4+<~k.1, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Tag( (z.5+<~k.2, ~id.2>)
                                                               ) ▶₀ #vr.14 ) )
                                                    case Setup
                                                    by step( contradiction )
                                                  next
                                                    case select_tag
                                                    step( solve( Reader( (z.4+<~k.1, ~id.1>+
                                                                          <~k.3, ~id.3>)
                                                                 ) ▶₀ #vr.15 ) )
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case select_reader
                                                step( solve( Reader( (z.5+<~k.2, ~id.1>)
                                                             ) ▶₀ #vr.11 ) )
                                                  case select_reader
                                                  step( solve( Tag( (z.6+<~k.3, ~id.2>)
                                                               ) ▶₀ #vr.14 ) )
                                                    case Setup
                                                    by step( contradiction )
                                                  next
                                                    case select_tag
                                                    step( solve( Reader( (z.3+<~k.1, ~id1>+
                                                                          <~k.4, ~id.3>)
                                                                 ) ▶₀ #vr.15 ) )
                                                      case Setup
                                                      step( solve( Reader( (z.4+<~k.1, ~id.1>+
                                                                            <~k.3, ~id.3>)
                                                                   ) ▶₀ #vr.16 ) )
                                                        case select_reader
                                                        by step( contradiction )
                                                      qed
                                                    next
                                                      case select_reader
                                                      by step( contradiction )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case tag1
                                          step( solve( Reader( (z.3+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                            case Setup
                                            step( solve( Reader( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                              case select_reader
                                              step( solve( Tag( (z.4+<~k.2, ~id.1>) ) ▶₀ #vr.14 ) )
                                                case Setup
                                                by step( contradiction )
                                              next
                                                case select_tag
                                                step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                      <~k.3, ~id.2>)
                                                             ) ▶₀ #vr.15 ) )
                                                  case Setup
                                                  step( solve( Tag( (z.3+<~k.1, ~id>+<~k.2, ~id.1>)
                                                               ) ▶₀ #vr.15 ) )
                                                    case select_tag
                                                    by step( contradiction )
                                                  qed
                                                next
                                                  case select_reader
                                                  by step( contradiction )
                                                qed
                                              qed
                                            qed
                                          next
                                            case select_reader
                                            step( solve( Reader( (z.4+<~k.2, ~id.1>) ) ▶₀ #vr.11 ) )
                                              case Setup_case_1
                                              step( solve( Tag( (z.4+<~k.2, ~id1>) ) ▶₀ #vr.14 ) )
                                                case select_tag
                                                step( solve( Reader( (z.3+<~k.1, ~id1>+<~k.3, ~id.1>
                                                                     )
                                                             ) ▶₀ #vr.15 ) )
                                                  case select_reader
                                                  by step( contradiction )
                                                qed
                                              qed
                                            next
                                              case Setup_case_2
                                              step( solve( Tag( (z.4+<~k.2, ~id>) ) ▶₀ #vr.14 ) )
                                                case Setup
                                                by step( contradiction )
                                              next
                                                case select_tag
                                                step( solve( Reader( (z.3+<~k.1, ~id1>+<~k.3, ~id.1>
                                                                     )
                                                             ) ▶₀ #vr.15 ) )
                                                  case Setup
                                                  step( solve( Tag( (z.3+<~k.1, ~id>+<~k.2, ~id.1>)
                                                               ) ▶₀ #vr.15 ) )
                                                    case select_tag
                                                    by step( contradiction )
                                                  qed
                                                next
                                                  case select_reader
                                                  by step( contradiction )
                                                qed
                                              qed
                                            next
                                              case select_reader
                                              step( solve( Tag( (z.5+<~k.3, ~id.1>) ) ▶₀ #vr.14 ) )
                                                case Setup
                                                by step( contradiction )
                                              next
                                                case select_tag
                                                step( solve( Reader( (z.3+<~k.1, ~id1>+<~k.4, ~id.2>
                                                                     )
                                                             ) ▶₀ #vr.15 ) )
                                                  case Setup
                                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+
                                                                        <~k.3, ~id.2>)
                                                               ) ▶₀ #vr.16 ) )
                                                    case select_reader
                                                    by step( contradiction )
                                                  qed
                                                next
                                                  case select_reader
                                                  by step( contradiction )
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case tag1
                                  step( solve( (#vl.3, 0) ~~> (#vk.3, 0) ) )
                                    case d_0_fst
                                    step( solve( (#vr.10, 0) ~~> (#vk.3, 0) ) )
                                      case Var_fresh_3_r2
                                      step( solve( TagRun( ~k.2, ~id.1 ) ▶₂ #vr.9 ) )
                                        case select_tag
                                        step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                          case Setup
                                          step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case Setup
                                              step( solve( !KU( ~r2.1 ) @ #vk.3 ) )
                                                case tag1
                                                step( solve( splitEqs(0) ) )
                                                  case split
                                                  step( solve( splitEqs(1) ) )
                                                    case split
                                                    step( solve( !KU( ~r1 ) @ #vk.4 ) )
                                                      case reader1
                                                      MIRRORED
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case select_tag
                                              by step( contradiction )
                                            qed
                                          qed
                                        next
                                          case select_reader
                                          step( solve( Tag( (z.4+<~k.2, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.3, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case Setup
                                              step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                           ) ▶₀ #vr.13 ) )
                                                case Setup
                                                step( solve( !KU( ~r2.1 ) @ #vk.3 ) )
                                                  case tag1
                                                  step( solve( splitEqs(0) ) )
                                                    case split
                                                    step( solve( splitEqs(1) ) )
                                                      case split
                                                      step( solve( !KU( ~r1 ) @ #vk.4 ) )
                                                        case reader1
                                                        MIRRORED
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case select_tag
                                                by step( contradiction )
                                              qed
                                            next
                                              case select_reader
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case d_0_snd
                                    step( solve( (#vr.10, 0) ~~> (#vk.3, 0) ) )
                                      case lh
                                      step( solve( TagRun( ~k.2, ~id.1 ) ▶₂ #vr.9 ) )
                                        case select_tag
                                        step( solve( Reader( (z.3+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                          case Setup
                                          step( solve( Tag( (z.3+<~k.1, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case select_tag
                                              by step( contradiction )
                                            qed
                                          qed
                                        next
                                          case select_reader
                                          step( solve( Tag( (z.4+<~k.2, ~id.1>) ) ▶₀ #vr.11 ) )
                                            case Setup
                                            by step( contradiction )
                                          next
                                            case select_tag
                                            step( solve( Reader( (z.3+<~k.1, ~id1>+<~k.3, ~id.2>)
                                                         ) ▶₀ #vr.12 ) )
                                              case Setup
                                              step( solve( Tag( (z.3+<~k.1, ~id.1>+<~k.2, ~id.2>)
                                                           ) ▶₀ #vr.13 ) )
                                                case select_tag
                                                by step( contradiction )
                                              qed
                                            next
                                              case select_reader
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case fresh
                                step( solve( !KU( ~x ) @ #vk.3 ) )
                                  case fresh
                                  step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                    case Setup
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~x⊕~r2.1) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~x⊕~r2.1) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~x⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                                 ) ▶₀ #vr.9 ) )
                                      case Setup
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( (~r1⊕~x⊕~r2.1) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~x⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~x⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case select_reader
                                      by step( contradiction )
                                    qed
                                  qed
                                qed
                              next
                                case pub
                                step( solve( Reader( (z.2+<~k.1, ~id1>) ) ▶₀ #vr.2 ) )
                                  case Setup
                                  step( solve( !KU( $x ) @ #vk.3 ) )
                                    case pub
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( ($x⊕~r1⊕~r2.1) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( ($x⊕~r1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ($x⊕~r2.1) ) @ #vk.5 ) )
                                            case coerce
                                            step( solve( !KD( ($x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                            case tag1_case_1
                                            by step( contradiction )
                                          next
                                            case tag1_case_2
                                            by step( contradiction )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case select_reader
                                  step( solve( Reader( (z.2+<~k.1, ~id1>+<~k.2, ~id.1>)
                                               ) ▶₀ #vr.9 ) )
                                    case Setup
                                    step( solve( !KU( $x ) @ #vk.3 ) )
                                      case pub
                                      step( solve( splitEqs(0) ) )
                                        case split
                                        step( solve( splitEqs(1) ) )
                                          case split
                                          step( solve( splitEqs(2) ) )
                                            case split_case_1
                                            step( solve( !KU( ($x⊕~r1⊕~r2.1) ) @ #vk.4 ) )
                                              case coerce
                                              step( solve( !KD( ($x⊕~r1⊕~r2.1) ) ▶₀ #vk.4 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.4, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_2
                                            step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_3
                                            step( solve( !KU( ($x⊕~r2.1) ) @ #vk.5 ) )
                                              case coerce
                                              step( solve( !KD( ($x⊕~r2.1) ) ▶₀ #vk.5 ) )
                                                case reader1
                                                by step( contradiction )
                                              next
                                                case reader2
                                                by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                              next
                                                case tag1
                                                step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                  case d_0_fst
                                                  by step( contradiction )
                                                next
                                                  case d_0_snd
                                                  by step( solve( (#vr.11, 0) ~~> (#vk.5, 0) ) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case split_case_4
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          next
                                            case split_case_5
                                            step( solve( !KU( ~r2.1 ) @ #vk.5 ) )
                                              case tag1_case_1
                                              by step( contradiction )
                                            next
                                              case tag1_case_2
                                              by step( contradiction )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case select_tag
                            by step( contradiction )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case select_tag
                  step( solve( (#vl.1, 0) ~~> (#vk, 0) ) )
                    case rh
                    step( solve( Tag( (z.3+<~k, ~id>+<~k.2, ~id.2>) ) ▶₀ #vr.4 ) )
                      case Setup_case_1
                      step( solve( Initiated( ~r1 ) ▶₀ #vr.1 ) )
                        case reader1
                        step( solve( !KU( lh(rot(~id.1, h(z.1))) ) @ #vk.3 ) )
                          case c_lh
                          step( solve( !KU( rot(~id.1, h(z.1)) ) @ #vk.4 ) )
                            case c_rot
                            step( solve( !KU( ~id.1 ) @ #vk.5 ) )
                              case fresh
                              step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                                case select_reader
                                step( solve( Reader( (z.2+<~k.1, ~id.1>+<~k.3, ~id.3>)
                                             ) ▶₀ #vr.7 ) )
                                  case select_reader
                                  by step( contradiction )
                                qed
                              qed
                            next
                              case reader1
                              step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                                case select_reader
                                step( solve( Reader( (z.2+<~k.1, ~id.1>+<~k.3, ~id.3>)
                                             ) ▶₀ #vr.8 ) )
                                  case select_reader
                                  by step( contradiction )
                                qed
                              qed
                            next
                              case tag1
                              step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                                case select_reader
                                step( solve( Tag( (z.4+<~k.3, ~id.2>) ) ▶₀ #vr.9 ) )
                                  case Setup
                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+<~k.3, ~id.3>)
                                               ) ▶₀ #vr.9 ) )
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                next
                                  case select_tag
                                  step( solve( Reader( (z.3+<~k.1, ~id.1>+<~k.4, ~id.4>)
                                               ) ▶₀ #vr.10 ) )
                                    case select_reader
                                    by step( contradiction )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case tag1
                          step( solve( Reader( (z.2+<~k.1, ~id.1>) ) ▶₀ #vr.2 ) )
                            case Setup_case_1
                            step( solve( Tag( (z.2+<~k.2, ~id>) ) ▶₀ #vr.9 ) )
                              case select_tag
                              step( solve( Tag( (z.2+<~k.2, ~id>+<~k.3, ~id.2>) ) ▶₀ #vr.10 ) )
                                case select_tag
                                by step( contradiction /* from formulas */ )
                              qed
                            qed
                          next
                            case Setup_case_2
                            step( solve( Tag( (z.2+<~k.2, ~id.1>) ) ▶₀ #vr.9 ) )
                              case Setup
                              step( solve( !KU( rh(rot(~id.1, h(z.1))) ) @ #vk ) )
                                case reader2
                                step( solve( !KU( r2.1 ) @ #vk.3 ) )
                                  case c_fst
                                  step( solve( !KU( fst(x) ) @ #vk.3 ) )
                                    case c_fst
                                    step( solve( splitEqs(0) ) )
                                      case split
                                      step( solve( splitEqs(1) ) )
                                        case split
                                        step( solve( splitEqs(2) ) )
                                          case split_case_1
                                          step( solve( !KU( (~r1⊕~r2.1⊕fst(x)) ) @ #vk.4 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1⊕fst(x)) ) ▶₀ #vk.4 ) )
                                              case reader1
                                              by step( contradiction /* impossible chain */ )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                                case d_0_fst
                                                by step( contradiction /* impossible chain */ )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          step( solve( !KU( (~r2.1⊕fst(x)) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r2.1⊕fst(x)) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction /* impossible chain */ )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction /* impossible chain */ )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_3
                                          step( solve( !KU( ~r2.1 ) @ #vk.7 ) )
                                            case tag1_case_1
                                            by step( contradiction /* cyclic */ )
                                          next
                                            case tag1_case_2
                                            by step( contradiction /* cyclic */ )
                                          qed
                                        next
                                          case split_case_4
                                          step( solve( !KU( (~r1⊕~r2.1) ) @ #vk.6 ) )
                                            case coerce
                                            step( solve( !KD( (~r1⊕~r2.1) ) ▶₀ #vk.5 ) )
                                              case reader1
                                              by step( contradiction /* impossible chain */ )
                                            next
                                              case reader2
                                              by step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                            next
                                              case tag1
                                              step( solve( (#vl.3, 0) ~~> (#vk.5, 0) ) )
                                                case d_0_fst
                                                by step( contradiction /* impossible chain */ )
                                              next
                                                case d_0_snd
                                                by step( solve( (#vr.10, 0) ~~> (#vk.5, 0) ) )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_5
                                          step( solve( !KU( ~r2.1 ) @ #vk.6 ) )
                                            case tag1_case_1
                                            by step( contradiction /* cyclic */ )
                                          next
                                            case tag1_case_2
                                            by step( contradiction /* cyclic */ )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_h
                                  step( solve( splitEqs(0) ) )
                                    case split
                                    step( solve( splitEqs(1) ) )
                                      case split
                                      step( solve( splitEqs(2) ) )
                                        case split_case_1
                                        step( solve( !KU( (~r1⊕~r2.1⊕h(x)) ) @ #vk.4 ) )
                                          case coerce
                                          step( solve( !KD( (~r1⊕~r2.1⊕h(x)) ) ▶₀ #vk.4 ) )
                                            case reader1
                                            by step( contradiction /* impossible chain */ )
                                          next
                                            case reader2
                                            by sorry
                                          next
                                            case tag1
                                            step( solve( (#vl.3, 0) ~~> (#vk.4, 0) ) )
                                              case d_0_fst
                                              by step( contradiction /* impossible chain */ )
                                            next
                                              case d_0_snd
                                              by step( solve( (#vr.10, 0) ~~> (#vk.4, 0) ) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case split_case_2
                                        step( solve( !KU( (~r2.1⊕h(x)) ) @ #vk.6 ) )
                                          case coerce
                                          step( solve( !KD( (~r2.1⊕h(x)) ) ▶₀ #vk.5 ) )
                                            case reader1
                                            by step( contradiction /* impossible chain */ )
                                          next
                                            case reader2
                                            by sorry
                                          next
                                            case tag1
                                            by sorry
                                          qed
                                        qed
                                      next
                                        case split_case_3
                                        by sorry
                                      next
                                        case split_case_4
                                        by sorry
                                      next
                                        case split_case_5
                                        by sorry
                                      qed
                                    qed
                                  qed
                                next
                                  case c_lh
                                  by sorry
                                next
                                  case c_pair
                                  by sorry
                                next
                                  case c_rh
                                  by sorry
                                next
                                  case c_rot
                                  by sorry
                                next
                                  case c_snd
                                  by sorry
                                next
                                  case coerce
                                  by sorry
                                next
                                  case fresh
                                  by sorry
                                next
                                  case pub
                                  by sorry
                                qed
                              qed
                            next
                              case select_tag
                              by sorry
                            qed
                          next
                            case select_reader
                            by sorry
                          qed
                        qed
                      qed
                    next
                      case Setup_case_2
                      by sorry
                    next
                      case select_tag
                      by step( contradiction )
                    qed
                  qed
                qed
              qed
            qed
          next
            case tag1
            by sorry
          qed
        next
          case fresh
          by sorry
        next
          case pub
          by sorry
        qed
      qed
    qed
  next
    case RHS
    step( simplify )
    by sorry
  qed
next
  case Rule_Destrd_0_snd
  by sorry
next
  case Rule_Destrd_union
  by sorry
next
  case Rule_Destrd_xor
  by sorry
next
  case Rule_Equality
  by sorry
next
  case Rule_Send
  by sorry
next
  case Rule_Setup
  by sorry
next
  case Rule_reader1
  by sorry
next
  case Rule_reader2
  by sorry
next
  case Rule_select_reader
  by sorry
next
  case Rule_select_tag
  by sorry
next
  case Rule_tag1
  by sorry
next
  case Rule_tag2
  by sorry
qed

/* All well-formedness checks were successful. */

end