theory Test_Variants_Constant
begin

builtins: symmetric-encryption //, xor
functions: f/2, L/0
equations: f(x,L) = x,
           f(L,x) = x
// previously it was the below, but string-constants are not allowed in the equational theory!
//           f(x,'L') = x,
//           f('L',x) = x

/*
   Protocol:    A Test protocol to test variants and new variables
   Modeler:     
   Date:        July 2017
   Source:      

   Status:      Should result in an attack.

 */


rule Out:
  let m1 = senc{~x}~ka
  in
    [ Fr(~ka)
    , Fr(~x)
    ]
  --[ OUT1(m1)
    ]->
    [ Out( m1 )
    , St1( ~ka,~x )
    ]

rule xorPub:
  let m1 = senc{m}~ka
      m2 = senc{diff(f(m,$A),f($A,m))}~kb
  in
    [ St1(~ka,~x)
    , In( m1 )
    , Fr(~kb)
    ]
  --[ IN1(m1)
    ]->
    [ Out( m2 )
    , St2(~kb,~x)
    ]

rule In:
  let m2 = senc{~x}~kb
  in
    [ In( m2 )
    , St2(~kb,~x)
    ]
  --[ END()
    ]->
    [ 
    ]

lemma types [sources]:
  " (All m1 #i.
       IN1( m1) @ i
       ==>
       ( (Ex #j. OUT1( m1 ) @ j & j < i)
       )
    )
  "

lemma sanity:
exists-trace
  " Ex #j. END() @ j "

end
