theory CH07_untrac_weak begin

builtins: xor, hashing, multiset
functions: rot/2, lh/1, rh/1

rule setup:
   let data1 = <~k1,~id1>
       data2 = <~k2,~id2>
       datab = diff(data1, data2)
   in
   [ Fr( ~k1 )
   , Fr( ~id1 )
   , Fr( ~k2 )
   , Fr( ~id2 ) 
   ]
--[ OnlyOnce('setup') ]->
   [ TagRun(data1, 'learning')
    // , ReaderRun(data1, 'learning')
    , TagRun(data2, 'learning')
    // , ReaderRun(data2, 'learning')
    , TagRun(datab, 'guessing')
   ]

rule reader1:
   [ Fr( ~r1 ) ]
 --[ Challenge( ~r1, 'Reader' ) ]->
   [ Out( ~r1 )
   , Initiated( ~r1 ) 
   ]

rule tag1:
   let hash = h((r1⊕~r2⊕~k)) in 
   [ In( r1 )
   , Fr( ~r2 )
   , TagRun( <~k, ~id>, phase )
   ]
 --[ Response( ~k, 'Tag' )
   , Challenge(~r2, 'Tag') 
   , Phase(phase)
   ]->
   [ Out( <~r2,lh(rot(~id,hash) XOR hash)>)
   , TagState(~k, ~id, r1, ~r2, hash, phase)
   ]

rule reader2:
   [ Initiated( ~r1 )
   , ReaderRun( <~k, ~id>, phase)
   , In( <r2, lh(rot(~id,hash) XOR hash)> ) 
   ]
 --[ Alive( ~k, 'Tag' )
   , Response(~k, 'Reader') 
   , Eq( h((~r1⊕r2⊕~k)), hash )
   , Phase(phase)
   ]->
   [ Out( rh(rot(~id,hash) XOR hash) ) ]

rule tag2:
   [ In( rh(rot(~id,hash) XOR hash) )
   , TagState(~k, ~id, r1, ~r2, hash, phase)
   ]
 --[ Alive( ~k, 'Reader' ), Phase(phase) ]->
   [ ]

restriction equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"

restriction unique:
  "∀ x #i #j. ((OnlyOnce(x) @ #i) ∧ (OnlyOnce(x) @ #j)) ⇒ (#i = #j)"

/* Note that Tamarin finds a "false" attack without the following restriction when one considers readers as well as tags.
   However, one can get rid of this restriction for the present model (without readers), as done for LAK06 (see LAK06_untrac-weak.spthy).
*/
// restriction complyWithPhase:
//   "All #i1 #i2. (Phase('learning')@i1 & Phase('guessing')@i2) ==> #i1 < #i2"
// This restriction causes non-termination issue when there was no such issue before ...

// FINDS PROOF AUTOMATICALLY [left+right]
lemma executable:
  exists-trace "∃ x #j. ((Response( x, 'Tag' ) @ #j))"
// Git revision: 73593dd9747f3320384227ff086f7fca0f75c488, branch: develop
// Compiled at: 2017-11-09 08:34:57.786964 UTC

// Observational Equivalence: PROVEN automatically, <=10 minutes
// Git revision: 73593dd9747f3320384227ff086f7fca0f75c488, branch: develop
// Compiled at: 2017-11-09 08:34:57.786964 UTC

end